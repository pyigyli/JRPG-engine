{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3","program":"C:\\Users\\Pyigyli\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","adler32","C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=3","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=37b32d27b11e8a6e","-C","extra-filename=-37b32d27b11e8a6e","--out-dir","d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps","-L","dependency=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Pyigyli\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libadler32-37b32d27b11e8a6e.rmeta"},"prelude":{"crate_id":{"name":"adler32","disambiguator":[14825655159219277468,224871546606185339]},"crate_root":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src","external_crates":[{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13454279496936976369,256594374343364064]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10635428080862470944,4053010167158610789]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2397070696586021034,1787692942867494326]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13215350897914660053,4762041400992555299]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8309206586370028958,10530789326598529563]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12844497061290288730,1165546255938205329]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17370511097861102976,8088456066398622915]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[1985867887572050615,3717448080532913995]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10045986561377339069,14963295625130836827]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14681916437073319406,9740076823699971540]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","num":11,"id":{"name":"panic_unwind","disambiguator":[4514194809136982995,14217700833302823945]}}],"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":0,"byte_end":9451,"line_start":1,"line_end":301,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":0,"byte_end":9451,"line_start":1,"line_end":301,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":31}],"decl_id":null,"docs":" A minimal implementation of Adler32 for Rust.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":2931,"byte_end":2945,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"RollingAdler32","qualname":"::RollingAdler32","value":"RollingAdler32 {  }","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" A rolling version of the Adler32 hash, which can 'forget' past bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":3064,"byte_end":3067,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<RollingAdler32>::new","value":"fn () -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty Adler32 context (with hash 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":3201,"byte_end":3211,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"from_value","qualname":"<RollingAdler32>::from_value","value":"fn (adler32: u32) -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Creates an Adler32 context with the given initial value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":3446,"byte_end":3457,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<RollingAdler32>::from_buffer","value":"fn (buffer: &[u8]) -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Convenience function initializing a context from the hash of a buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":3640,"byte_end":3644,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"hash","qualname":"<RollingAdler32>::hash","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current hash.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":3792,"byte_end":3798,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"remove","qualname":"<RollingAdler32>::remove","value":"fn (&mut self, size: usize, byte: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes the given `byte` that was fed to the algorithm `size` bytes ago.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":4172,"byte_end":4178,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"update","qualname":"<RollingAdler32>::update","value":"fn (&mut self, byte: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Feeds a new `byte` to the algorithm to update the hash.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":4405,"byte_end":4418,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<RollingAdler32>::update_buffer","value":"fn (&mut self, buffer: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Feeds a vector of bytes to the algorithm to update the hash.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":5971,"byte_end":5978,"line_start":188,"line_end":188,"column_start":8,"column_end":15},"name":"adler32","qualname":"::adler32","value":"fn <R> (mut reader: R) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Consume a Read object and returns the Adler32 hash.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":2980,"byte_end":2994,"line_start":92,"line_end":92,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.3\\src\\lib.rs","byte_start":2980,"byte_end":2994,"line_start":92,"line_end":92,"column_start":6,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}}]}