{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1","program":"C:\\Users\\Pyigyli\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","ggez","C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=3","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"bzip2\"","--cfg","feature=\"c_dependencies\"","--cfg","feature=\"default\"","--cfg","feature=\"mp3\"","--cfg","feature=\"rodio\"","--cfg","feature=\"zip\"","-C","metadata=f9aa39eac7ce5364","-C","extra-filename=-f9aa39eac7ce5364","--out-dir","d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps","-L","dependency=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps","--extern","approx=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libapprox-aafcdd61ba08909c.rmeta","--extern","bitflags=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libbitflags-039fb5676b515d37.rmeta","--extern","directories=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libdirectories-0eafdc0d2677a0bd.rmeta","--extern","gfx=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libgfx-907b2ce45206780b.rmeta","--extern","gfx_core=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libgfx_core-abe4765b3532fca6.rmeta","--extern","gfx_device_gl=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libgfx_device_gl-b765b6da00e3f9e7.rmeta","--extern","gfx_window_glutin=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libgfx_window_glutin-8dddf73d966fbe98.rmeta","--extern","gilrs=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libgilrs-5f490f2c30ae889b.rmeta","--extern","glutin=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libglutin-d3ef5b4afe434c17.rmeta","--extern","glyph_brush=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libglyph_brush-1e0a73dabf4db4d0.rmeta","--extern","image=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libimage-ccaac70c66049e3f.rmeta","--extern","log=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\liblog-9f9abff2f7e431bb.rmeta","--extern","lyon=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\liblyon-5d6689fafec96069.rmeta","--extern","mint=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libmint-3aaa212a3142bc38.rmeta","--extern","nalgebra=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libnalgebra-375731e878b6cbc5.rmeta","--extern","rodio=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\librodio-d04b21dcbc947233.rmeta","--extern","serde=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libserde-d1b402c6e1fc2c13.rmeta","--extern","serde_derive=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\serde_derive-27315254a63d6acf.dll","--extern","smart_default=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\smart_default-ba77306575df0e8e.dll","--extern","toml=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libtoml-1bc833f7d16f9c1a.rmeta","--extern","winit=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libwinit-4396f40931655965.rmeta","--extern","zip=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libzip-f721002da5d498c5.rmeta","--cap-lints","allow","-L","native=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\build\\minimp3-sys-103c6ffed956fb4c\\out","-L","native=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\build\\bzip2-sys-049016e513aecf60\\out\\lib","--error-format=json","--sysroot","C:\\Users\\Pyigyli\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libggez-f9aa39eac7ce5364.rmeta"},"prelude":{"crate_id":{"name":"ggez","disambiguator":[12379329993575333295,9079733266475372613]},"crate_root":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src","external_crates":[{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13454279496936976369,256594374343364064]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10635428080862470944,4053010167158610789]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2397070696586021034,1787692942867494326]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13215350897914660053,4762041400992555299]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8309206586370028958,10530789326598529563]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12844497061290288730,1165546255938205329]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17370511097861102976,8088456066398622915]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[1985867887572050615,3717448080532913995]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10045986561377339069,14963295625130836827]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14681916437073319406,9740076823699971540]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":11,"id":{"name":"panic_unwind","disambiguator":[4514194809136982995,14217700833302823945]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":12,"id":{"name":"bitflags","disambiguator":[17719894873573479953,17548125208088827151]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":13,"id":{"name":"gfx","disambiguator":[14853139522664425876,16330102195290865930]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":14,"id":{"name":"log","disambiguator":[5647217622369385511,1880719050861626807]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[15940136793660433531,2344038375606548697]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":16,"id":{"name":"derivative","disambiguator":[4126377204788173186,2793461337389329792]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":17,"id":{"name":"draw_state","disambiguator":[13881293376479682914,4350660427109145424]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":18,"id":{"name":"gfx_core","disambiguator":[15597727477005941409,12196557473262451126]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":19,"id":{"name":"serde_derive","disambiguator":[17874878839618515465,17410524534028995320]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":20,"id":{"name":"smart_default","disambiguator":[15901923358216841056,14426805957824372254]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":21,"id":{"name":"mint","disambiguator":[7766478677814592589,12466747079132939512]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":22,"id":{"name":"nalgebra","disambiguator":[15627913487701730190,6850241230450097950]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","num":23,"id":{"name":"approx","disambiguator":[13883877217496802873,8996129214380532129]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":24,"id":{"name":"num_traits","disambiguator":[12852782193594228631,11443678241345246573]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":25,"id":{"name":"generic_array","disambiguator":[1298151650262984982,5012042677891896661]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":26,"id":{"name":"typenum","disambiguator":[6411427956875021048,12437426669938574233]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":27,"id":{"name":"matrixmultiply","disambiguator":[12825050487185853243,13726772522703663480]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":28,"id":{"name":"rawpointer","disambiguator":[15424710815952613305,15176425678576933955]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":29,"id":{"name":"num_complex","disambiguator":[16491812751811374622,1764530240428292435]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":30,"id":{"name":"rand","disambiguator":[8798362447880991438,6504188983878287827]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":31,"id":{"name":"rand_jitter","disambiguator":[2385130209586295026,12801393381302428000]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":32,"id":{"name":"rand_core","disambiguator":[9681707999990678384,3025458264284975788]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":33,"id":{"name":"winapi","disambiguator":[12636843106924507436,6844857896524363702]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":34,"id":{"name":"rand_os","disambiguator":[15793396213530600031,13450131469201170056]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":35,"id":{"name":"rand_isaac","disambiguator":[5540004193639888231,382223519629363071]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":36,"id":{"name":"rand_core","disambiguator":[2840159841411246788,7991635353158963016]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":37,"id":{"name":"rand_chacha","disambiguator":[16781834978277918518,2670373505030640399]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":38,"id":{"name":"rand_hc","disambiguator":[4077222157901567657,3582128651748945733]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":39,"id":{"name":"rand_pcg","disambiguator":[7235920445117166754,13459266236170545952]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":40,"id":{"name":"rand_xorshift","disambiguator":[10054317886866496847,909434337353361527]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","num":41,"id":{"name":"alga","disambiguator":[16564272508505559036,13498180653623146372]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":42,"id":{"name":"rodio","disambiguator":[17144614600057690551,1874153779951049472]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":43,"id":{"name":"claxon","disambiguator":[14210153586506234139,2300312911089883207]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":44,"id":{"name":"cpal","disambiguator":[621037732156948718,1301325480476449278]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":45,"id":{"name":"lazy_static","disambiguator":[13813321456644911924,10169604422766356356]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":46,"id":{"name":"hound","disambiguator":[14778756563080559673,504384215612583423]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":47,"id":{"name":"lewton","disambiguator":[5569807988237850448,4197269955839546460]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":48,"id":{"name":"byteorder","disambiguator":[1807816963277344661,16784544629936948694]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":49,"id":{"name":"smallvec","disambiguator":[9955364634961215001,9761958499954900038]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":50,"id":{"name":"ogg","disambiguator":[16853846771624125652,1554724434467893441]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":51,"id":{"name":"minimp3","disambiguator":[16424839021658115304,13760909211994083641]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":52,"id":{"name":"minimp3_sys","disambiguator":[7493095957079396082,15843919142494817451]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","num":53,"id":{"name":"slice_deque","disambiguator":[765099092962618975,8027795555991566632]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","num":54,"id":{"name":"toml","disambiguator":[17818140735874881502,17882272380830954882]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","num":55,"id":{"name":"serde","disambiguator":[8226450416520705229,8666590070199102449]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","num":56,"id":{"name":"winit","disambiguator":[8199552199520679786,17895985935957699811]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","num":57,"id":{"name":"libc","disambiguator":[5314625775593102318,13596832393866714308]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","num":58,"id":{"name":"backtrace","disambiguator":[5491925473086863233,7889656345836263082]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","num":59,"id":{"name":"rustc_demangle","disambiguator":[12686727122869288215,1221770532792899807]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":60,"id":{"name":"glutin","disambiguator":[18047857942220119800,9471343926616172118]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":61,"id":{"name":"glutin_egl_sys","disambiguator":[16702440688658456182,14623693845393792960]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":62,"id":{"name":"libloading","disambiguator":[1043486829146995561,3544841335792296776]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":63,"id":{"name":"glutin_wgl_sys","disambiguator":[5995794113905934099,2425517972970607851]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":64,"id":{"name":"gilrs","disambiguator":[13981530725487205970,15660749678233083537]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":65,"id":{"name":"fnv","disambiguator":[8397779923403215088,7065272095401655519]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":66,"id":{"name":"gilrs_core","disambiguator":[10137261207804747360,696893610221801893]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":67,"id":{"name":"rusty_xinput","disambiguator":[8268474546434624006,5241189249018464388]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":68,"id":{"name":"uuid","disambiguator":[4160573588368532690,219118062378416266]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":69,"id":{"name":"vec_map","disambiguator":[13710219633966025619,577977343885076178]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":70,"id":{"name":"image","disambiguator":[3287070695043217066,816012860364854183]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":71,"id":{"name":"lzw","disambiguator":[4056114172542092465,12712185875258966511]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":72,"id":{"name":"num_iter","disambiguator":[11497985478409431393,12772612266012601024]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":73,"id":{"name":"num_integer","disambiguator":[2920238905143361924,7753562117364455013]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":74,"id":{"name":"num_rational","disambiguator":[18407838256047976232,12613319698542857469]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":75,"id":{"name":"gif","disambiguator":[594219645319475643,15197658753563110775]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":76,"id":{"name":"color_quant","disambiguator":[13103406317307537562,3338461486488022125]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":77,"id":{"name":"jpeg_decoder","disambiguator":[16608868312489886514,16004312574626997031]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":78,"id":{"name":"png","disambiguator":[16498582473069922836,18056567745879281119]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":79,"id":{"name":"crc32fast","disambiguator":[7167095816746466983,9451703440970073342]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":80,"id":{"name":"inflate","disambiguator":[16614921012462875347,4051987210680366971]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":81,"id":{"name":"adler32","disambiguator":[14825655159219277468,224871546606185339]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":82,"id":{"name":"deflate","disambiguator":[4124883757182893105,18126484851651869818]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":83,"id":{"name":"tiff","disambiguator":[168744857156851334,4580818064140037034]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":84,"id":{"name":"num_derive","disambiguator":[10519721026994865307,310292690479367838]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":85,"id":{"name":"lyon","disambiguator":[10468963928539722549,10886783751857327590]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":86,"id":{"name":"lyon_tessellation","disambiguator":[8634144302897053576,12017244598199157162]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":87,"id":{"name":"lyon_path","disambiguator":[3859357681555109319,8320676720779881279]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":88,"id":{"name":"lyon_geom","disambiguator":[174002386653373033,13875433025870655854]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":89,"id":{"name":"arrayvec","disambiguator":[15188403685200957606,17738942963509416982]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":90,"id":{"name":"nodrop","disambiguator":[5611955378528585877,13920789687138680402]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":91,"id":{"name":"euclid","disambiguator":[16322507362929465038,3613789667528578060]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":92,"id":{"name":"euclid_macros","disambiguator":[1026939948586876260,14347442175369049389]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":93,"id":{"name":"sid","disambiguator":[145163762217910513,17056201306332757393]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":94,"id":{"name":"num_traits","disambiguator":[1557979265383605099,15581032346381755292]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":95,"id":{"name":"lyon_algorithms","disambiguator":[6284400788967466756,6402200945481538622]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":96,"id":{"name":"zip","disambiguator":[1755375709855044105,4089000686493818844]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":97,"id":{"name":"bzip2","disambiguator":[17508956319471447981,12278655824606218784]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":98,"id":{"name":"bzip2_sys","disambiguator":[17168495119198889237,15527244294694198269]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","num":99,"id":{"name":"podio","disambiguator":[14641613127911895960,9842738577128535001]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","num":100,"id":{"name":"directories","disambiguator":[1231188936288552061,4076254610886489972]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","num":101,"id":{"name":"dirs_sys","disambiguator":[6386639822072713905,14781879804789456256]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","num":102,"id":{"name":"gfx_device_gl","disambiguator":[2491377543269052652,6827192955319299695]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","num":103,"id":{"name":"gfx_gl","disambiguator":[2779199622603535399,3905573303978021204]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":104,"id":{"name":"glyph_brush","disambiguator":[11253401731715529511,1977411704117771764]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":105,"id":{"name":"rusttype","disambiguator":[6018039990502544608,866250039814125426]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":106,"id":{"name":"ordered_float","disambiguator":[13037749346886366517,3157405291759896057]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":107,"id":{"name":"linked_hash_map","disambiguator":[16012247102860981331,16947099364939857984]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":108,"id":{"name":"rustc_hash","disambiguator":[15176643421306989953,5496820146255864427]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":109,"id":{"name":"crossbeam_deque","disambiguator":[3038135771822277848,1420334814933368798]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":110,"id":{"name":"crossbeam_epoch","disambiguator":[11373182613418912990,680707467332568001]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":111,"id":{"name":"crossbeam_utils","disambiguator":[663170876332178662,7342890805828038997]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":112,"id":{"name":"memoffset","disambiguator":[11670391581817411769,13323600923203847749]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":113,"id":{"name":"scopeguard","disambiguator":[9036110789331600981,18234319624479326080]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":114,"id":{"name":"stb_truetype","disambiguator":[1463217367807159882,2829401339543055919]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":115,"id":{"name":"num_cpus","disambiguator":[16250906184576027084,636309769808536933]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":116,"id":{"name":"hashbrown","disambiguator":[14808676664330950247,7445281246771394403]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":117,"id":{"name":"glyph_brush_layout","disambiguator":[4738851946940421815,12639354769720046265]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":118,"id":{"name":"xi_unicode","disambiguator":[3258923950595275122,3810796442035516868]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":119,"id":{"name":"twox_hash","disambiguator":[17117968507071773678,10675507648255766450]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":120,"id":{"name":"rand","disambiguator":[13763460602005934233,14054798379277679989]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":121,"id":{"name":"getrandom","disambiguator":[2010108324826109802,13893213205607681327]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":122,"id":{"name":"rand_core","disambiguator":[17667588577571891476,14069375455506165297]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":123,"id":{"name":"rand_chacha","disambiguator":[17757529426386915510,8100638700171299519]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":124,"id":{"name":"c2_chacha","disambiguator":[3872948312829908714,17663150382802823932]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","num":125,"id":{"name":"ppv_lite86","disambiguator":[18172936568958231986,2516240753426318300]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","num":126,"id":{"name":"gfx_window_glutin","disambiguator":[4775654046007085063,8554620564873109782]}}],"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":0,"byte_end":3688,"line_start":1,"line_end":120,"column_start":1,"column_end":25}},"imports":[{"kind":"Use","ref_id":{"krate":56,"index":1319},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":57825,"byte_end":57836,"line_start":21,"line_end":21,"column_start":16,"column_end":27},"alias_span":null,"name":"MouseButton","value":"","parent":{"krate":0,"index":312}},{"kind":"Use","ref_id":{"krate":64,"index":1099},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":57923,"byte_end":57927,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":312}},{"kind":"Use","ref_id":{"krate":64,"index":1026},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":57996,"byte_end":58002,"line_start":26,"line_end":26,"column_start":16,"column_end":22},"alias_span":null,"name":"Button","value":"","parent":{"krate":0,"index":312}},{"kind":"Use","ref_id":{"krate":56,"index":1223},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58126,"byte_end":58137,"line_start":31,"line_end":31,"column_start":9,"column_end":20},"alias_span":null,"name":"DeviceEvent","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":56,"index":1302},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58139,"byte_end":58151,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"alias_span":null,"name":"ElementState","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":56,"index":1135},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58153,"byte_end":58158,"line_start":31,"line_end":31,"column_start":36,"column_end":41},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":56,"index":1250},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58160,"byte_end":58173,"line_start":31,"line_end":31,"column_start":43,"column_end":56},"alias_span":null,"name":"KeyboardInput","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":56,"index":1697},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58175,"byte_end":58189,"line_start":31,"line_end":31,"column_start":58,"column_end":72},"alias_span":null,"name":"ModifiersState","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":56,"index":1342},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58191,"byte_end":58207,"line_start":31,"line_end":31,"column_start":74,"column_end":90},"alias_span":null,"name":"MouseScrollDelta","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":56,"index":1268},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58217,"byte_end":58227,"line_start":32,"line_end":32,"column_start":9,"column_end":19},"alias_span":null,"name":"TouchPhase","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":56,"index":1154},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58229,"byte_end":58240,"line_start":32,"line_end":32,"column_start":21,"column_end":32},"alias_span":null,"name":"WindowEvent","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58282,"byte_end":58291,"line_start":35,"line_end":35,"column_start":32,"column_end":41},"alias_span":null,"name":"GamepadId","value":"","parent":{"krate":0,"index":312}},{"kind":"Use","ref_id":{"krate":56,"index":1358},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58326,"byte_end":58333,"line_start":36,"line_end":36,"column_start":34,"column_end":41},"alias_span":null,"name":"KeyCode","value":"","parent":{"krate":0,"index":312}},{"kind":"Use","ref_id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58335,"byte_end":58342,"line_start":36,"line_end":36,"column_start":43,"column_end":50},"alias_span":null,"name":"KeyMods","value":"","parent":{"krate":0,"index":312}},{"kind":"Use","ref_id":{"krate":56,"index":1057},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58411,"byte_end":58421,"line_start":40,"line_end":40,"column_start":16,"column_end":26},"alias_span":null,"name":"EventsLoop","value":"","parent":{"krate":0,"index":312}},{"kind":"Use","ref_id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":70002,"byte_end":70013,"line_start":40,"line_end":40,"column_start":21,"column_end":32},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":361}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":89974,"byte_end":89978,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"alias_span":null,"name":"mint","value":"","parent":{"krate":0,"index":454}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":90067,"byte_end":90068,"line_start":55,"line_end":55,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":454}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":90106,"byte_end":90107,"line_start":56,"line_end":56,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"DrawParam, DrawTransform","parent":{"krate":0,"index":454}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":90141,"byte_end":90142,"line_start":57,"line_end":57,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"ImageGeneric, Image","parent":{"krate":0,"index":454}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":90175,"byte_end":90176,"line_start":58,"line_end":58,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"FillOptions, StrokeOptions","parent":{"krate":0,"index":454}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":90211,"byte_end":90212,"line_start":59,"line_end":59,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"create_shader, ShaderHandle, EmptyConst, BlendMode, ShaderId","parent":{"krate":0,"index":454}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":90245,"byte_end":90246,"line_start":60,"line_end":60,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"Font","parent":{"krate":0,"index":454}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":90280,"byte_end":90281,"line_start":61,"line_end":61,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"Matrix4, Color, WrapMode, WHITE, Rect, Point2, FilterMode, DrawMode, LinearColor, Vector2","parent":{"krate":0,"index":454}},{"kind":"Use","ref_id":{"krate":64,"index":0},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268285,"byte_end":268289,"line_start":8,"line_end":8,"column_start":17,"column_end":21},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":1185}},{"kind":"Use","ref_id":{"krate":64,"index":977},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268291,"byte_end":268296,"line_start":8,"line_end":8,"column_start":23,"column_end":28},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":1185}},{"kind":"Use","ref_id":{"krate":64,"index":743},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268298,"byte_end":268305,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"alias_span":null,"name":"Gamepad","value":"","parent":{"krate":0,"index":1185}},{"kind":"Use","ref_id":{"krate":64,"index":729},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268307,"byte_end":268312,"line_start":8,"line_end":8,"column_start":39,"column_end":44},"alias_span":null,"name":"Gilrs","value":"","parent":{"krate":0,"index":1185}},{"kind":"Use","ref_id":{"krate":56,"index":1358},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":273294,"byte_end":273308,"line_start":73,"line_end":73,"column_start":16,"column_end":30},"alias_span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":273312,"byte_end":273319,"line_start":73,"line_end":73,"column_start":34,"column_end":41},"name":"KeyCode","value":"","parent":{"krate":0,"index":1210}},{"kind":"Use","ref_id":{"krate":56,"index":1319},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":284948,"byte_end":284959,"line_start":10,"line_end":10,"column_start":17,"column_end":28},"alias_span":null,"name":"MouseButton","value":"","parent":{"krate":0,"index":1233}},{"kind":"Use","ref_id":{"krate":56,"index":2356},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":284961,"byte_end":284972,"line_start":10,"line_end":10,"column_start":30,"column_end":41},"alias_span":null,"name":"MouseCursor","value":"","parent":{"krate":0,"index":1233}},{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3638,"byte_end":3645,"line_start":119,"line_end":119,"column_start":26,"column_end":33},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2014},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3647,"byte_end":3661,"line_start":119,"line_end":119,"column_start":35,"column_end":49},"alias_span":null,"name":"ContextBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3686,"byte_end":3687,"line_start":120,"line_end":120,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"GameError, GameResult","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":0,"byte_end":3688,"line_start":1,"line_end":120,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":156},{"krate":0,"index":192},{"krate":0,"index":247},{"krate":0,"index":312},{"krate":0,"index":361},{"krate":0,"index":454},{"krate":0,"index":1184},{"krate":0,"index":1265},{"krate":0,"index":1295},{"krate":0,"index":1430},{"krate":0,"index":1433}],"decl_id":null,"docs":" # What is this?","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":2851,"byte_end":2873,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":2874,"byte_end":2913,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"deny(unused_results)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":2914,"byte_end":2938,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"deny(unsafe_code)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3112,"byte_end":3133,"line_start":87,"line_end":87,"column_start":1,"column_end":22}},{"value":"warn(bare_trait_objects)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3134,"byte_end":3162,"line_start":88,"line_end":88,"column_start":1,"column_end":29}},{"value":"warn(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3163,"byte_end":3201,"line_start":89,"line_end":89,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"audio","qualname":"::audio","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":1434},{"krate":0,"index":1441},{"krate":0,"index":1439},{"krate":0,"index":1438},{"krate":0,"index":1436},{"krate":0,"index":47},{"krate":0,"index":1443},{"krate":0,"index":1448},{"krate":0,"index":1446},{"krate":0,"index":49},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":1450},{"krate":0,"index":1457},{"krate":0,"index":82},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":125},{"krate":0,"index":129},{"krate":0,"index":149},{"krate":0,"index":154}],"decl_id":null,"docs":" Provides an interface to output sound to the user's speakers.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":4576,"byte_end":4588,"line_start":31,"line_end":31,"column_start":11,"column_end":23},"name":"AudioContext","qualname":"::audio::AudioContext","value":"AudioContext","parent":null,"children":[{"krate":0,"index":37}],"decl_id":null,"docs":" A trait object defining an audio context, allowing us to someday\n use something other than `rodio` if we really want.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":4632,"byte_end":4638,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"device","qualname":"::audio::AudioContext::device","value":"fn (&self) -> &rodio::Device","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Returns the audio device.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":6063,"byte_end":6072,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"SoundData","qualname":"::audio::SoundData","value":"","parent":null,"children":[],"decl_id":null,"docs":" Static sound data stored in memory.\n It is `Arc`'ed, so cheap to clone.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":6192,"byte_end":6195,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<SoundData>::new","value":"fn <P> (context: &mut Context, path: P) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Load the file at the given path and create a new `SoundData` from it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":6491,"byte_end":6501,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SoundData>::from_bytes","value":"fn (data: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copies the data in the given slice into a new `SoundData` object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":6680,"byte_end":6689,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"from_read","qualname":"<SoundData>::from_read","value":"fn <R> (reader: &mut R) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SoundData` from any `Read` object; this involves\n copying it into a buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":6960,"byte_end":6968,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"can_play","qualname":"<SoundData>::can_play","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the data can be played as a sound.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7675,"byte_end":7686,"line_start":145,"line_end":145,"column_start":11,"column_end":22},"name":"SoundSource","qualname":"::audio::SoundSource","value":"SoundSource","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"decl_id":null,"docs":" A trait defining the operations possible on a sound;\n it is implemented by both `Source` and `SpatialSource`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7790,"byte_end":7794,"line_start":148,"line_end":148,"column_start":8,"column_end":12},"name":"play","qualname":"::audio::SoundSource::play","value":"fn (&mut self) -> GameResult","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Plays the audio source; restarts the sound if currently playing\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7765,"byte_end":7782,"line_start":147,"line_end":147,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7967,"byte_end":7977,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"play_later","qualname":"::audio::SoundSource::play_later","value":"fn (&self) -> GameResult","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Plays the `SoundSource`; waits until done if the sound is currently playing\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8067,"byte_end":8080,"line_start":157,"line_end":157,"column_start":8,"column_end":21},"name":"play_detached","qualname":"::audio::SoundSource::play_detached","value":"fn (&mut self) -> GameResult","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Play source \"in the background\"; cannot be stopped\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8202,"byte_end":8212,"line_start":160,"line_end":160,"column_start":8,"column_end":18},"name":"set_repeat","qualname":"::audio::SoundSource::set_repeat","value":"fn (&mut self, repeat: bool) -> ()","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Sets the source to repeat playback infinitely on next [`play()`](#method.play)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8291,"byte_end":8302,"line_start":163,"line_end":163,"column_start":8,"column_end":19},"name":"set_fade_in","qualname":"::audio::SoundSource::set_fade_in","value":"fn (&mut self, dur: time::Duration) -> ()","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Sets the fade-in time of the source\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8407,"byte_end":8416,"line_start":166,"line_end":166,"column_start":8,"column_end":17},"name":"set_pitch","qualname":"::audio::SoundSource::set_pitch","value":"fn (&mut self, ratio: f32) -> ()","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Sets the speed ratio (by adjusting the playback speed)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8506,"byte_end":8512,"line_start":169,"line_end":169,"column_start":8,"column_end":14},"name":"repeat","qualname":"::audio::SoundSource::repeat","value":"fn (&self) -> bool","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Gets whether or not the source is set to repeat.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8561,"byte_end":8566,"line_start":172,"line_end":172,"column_start":8,"column_end":13},"name":"pause","qualname":"::audio::SoundSource::pause","value":"fn (&self) -> ()","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Pauses playback\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8608,"byte_end":8614,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"resume","qualname":"::audio::SoundSource::resume","value":"fn (&self) -> ()","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Resumes playback\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8654,"byte_end":8658,"line_start":178,"line_end":178,"column_start":8,"column_end":12},"name":"stop","qualname":"::audio::SoundSource::stop","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Stops playback\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8778,"byte_end":8785,"line_start":182,"line_end":182,"column_start":8,"column_end":15},"name":"stopped","qualname":"::audio::SoundSource::stopped","value":"fn (&self) -> bool","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Returns whether or not the source is stopped\n -- that is, has no more data to play.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8843,"byte_end":8849,"line_start":185,"line_end":185,"column_start":8,"column_end":14},"name":"volume","qualname":"::audio::SoundSource::volume","value":"fn (&self) -> f32","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Gets the current volume.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8906,"byte_end":8916,"line_start":188,"line_end":188,"column_start":8,"column_end":18},"name":"set_volume","qualname":"::audio::SoundSource::set_volume","value":"fn (&mut self, value: f32) -> ()","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Sets the current volume.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":8998,"byte_end":9004,"line_start":191,"line_end":191,"column_start":8,"column_end":14},"name":"paused","qualname":"::audio::SoundSource::paused","value":"fn (&self) -> bool","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Get whether or not the source is paused.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":9120,"byte_end":9127,"line_start":195,"line_end":195,"column_start":8,"column_end":15},"name":"playing","qualname":"::audio::SoundSource::playing","value":"fn (&self) -> bool","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Get whether or not the source is playing (ie, not paused\n and not stopped).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":9351,"byte_end":9358,"line_start":200,"line_end":200,"column_start":8,"column_end":15},"name":"elapsed","qualname":"::audio::SoundSource::elapsed","value":"fn (&self) -> time::Duration","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Get the time the source has been playing since the last call to [`play()`](#method.play).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":9569,"byte_end":9587,"line_start":205,"line_end":205,"column_start":8,"column_end":26},"name":"set_query_interval","qualname":"::audio::SoundSource::set_query_interval","value":"fn (&mut self, t: time::Duration) -> ()","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Set the update interval of the internal sample counter.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":12289,"byte_end":12295,"line_start":281,"line_end":281,"column_start":12,"column_end":18},"name":"Source","qualname":"::audio::Source","value":"Source {  }","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"decl_id":null,"docs":" A source of audio data that is connected to an output\n channel and ready to play.  It will stop playing when\n dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":12424,"byte_end":12427,"line_start":288,"line_end":288,"column_start":12,"column_end":15},"name":"new","qualname":"<Source>::new","value":"fn <P> (context: &mut Context, path: P) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Source` from the given file.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":12715,"byte_end":12724,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"name":"from_data","qualname":"<Source>::from_data","value":"fn (context: &mut Context, data: SoundData) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Source` using the given `SoundData` object.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":17184,"byte_end":17197,"line_start":436,"line_end":436,"column_start":12,"column_end":25},"name":"SpatialSource","qualname":"::audio::SpatialSource","value":"SpatialSource {  }","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":" A source of audio data located in space relative to a listener's ears.\n Will stop playing when dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":17455,"byte_end":17458,"line_start":446,"line_end":446,"column_start":12,"column_end":15},"name":"new","qualname":"<SpatialSource>::new","value":"fn <P> (context: &mut Context, path: P) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `SpatialSource` from the given file.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":17760,"byte_end":17769,"line_start":453,"line_end":453,"column_start":12,"column_end":21},"name":"from_data","qualname":"<SpatialSource>::from_data","value":"fn (context: &mut Context, data: SoundData) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SpatialSource` using the given `SoundData` object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":22685,"byte_end":22697,"line_start":614,"line_end":614,"column_start":12,"column_end":24},"name":"set_position","qualname":"<SpatialSource>::set_position","value":"fn <P> (&mut self, pos: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set location of the sound.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":22949,"byte_end":22957,"line_start":623,"line_end":623,"column_start":12,"column_end":20},"name":"set_ears","qualname":"<SpatialSource>::set_ears","value":"fn <P> (&mut self, left: P, right: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set locations of the listener's ears\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"conf","qualname":"::conf","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":1459},{"krate":0,"index":1520},{"krate":0,"index":1519},{"krate":0,"index":1517},{"krate":0,"index":1511},{"krate":0,"index":1470},{"krate":0,"index":1468},{"krate":0,"index":1466},{"krate":0,"index":1522},{"krate":0,"index":1606},{"krate":0,"index":1605},{"krate":0,"index":1603},{"krate":0,"index":1601},{"krate":0,"index":1595},{"krate":0,"index":1536},{"krate":0,"index":1533},{"krate":0,"index":160},{"krate":0,"index":1608},{"krate":0,"index":1676},{"krate":0,"index":1674},{"krate":0,"index":1672},{"krate":0,"index":1666},{"krate":0,"index":1617},{"krate":0,"index":1614},{"krate":0,"index":168},{"krate":0,"index":1678},{"krate":0,"index":1802},{"krate":0,"index":1801},{"krate":0,"index":1799},{"krate":0,"index":1793},{"krate":0,"index":1692},{"krate":0,"index":1689},{"krate":0,"index":1687},{"krate":0,"index":1685},{"krate":0,"index":174},{"krate":0,"index":1804},{"krate":0,"index":1883},{"krate":0,"index":1882},{"krate":0,"index":1880},{"krate":0,"index":1874},{"krate":0,"index":1827},{"krate":0,"index":1825},{"krate":0,"index":1823},{"krate":0,"index":178},{"krate":0,"index":1885},{"krate":0,"index":1941},{"krate":0,"index":1898},{"krate":0,"index":1897},{"krate":0,"index":1895},{"krate":0,"index":1893},{"krate":0,"index":1890},{"krate":0,"index":1888},{"krate":0,"index":180},{"krate":0,"index":1947},{"krate":0,"index":2008},{"krate":0,"index":1961},{"krate":0,"index":1959},{"krate":0,"index":1956},{"krate":0,"index":1954},{"krate":0,"index":1952},{"krate":0,"index":183}],"decl_id":null,"docs":" The `conf` module contains functions for loading and saving game\n configurations.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":24406,"byte_end":24414,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"name":"Windowed","qualname":"::conf::FullscreenType::Windowed","value":"FullscreenType::Windowed","parent":{"krate":0,"index":1459},"children":[],"decl_id":null,"docs":" Windowed mode.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":24552,"byte_end":24556,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"True","qualname":"::conf::FullscreenType::True","value":"FullscreenType::True","parent":{"krate":0,"index":1459},"children":[],"decl_id":null,"docs":" True fullscreen, which used to be preferred 'cause it can have\n small performance benefits over windowed fullscreen.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":24697,"byte_end":24704,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Desktop","qualname":"::conf::FullscreenType::Desktop","value":"FullscreenType::Desktop","parent":{"krate":0,"index":1459},"children":[],"decl_id":null,"docs":" Windowed fullscreen, generally preferred over real fullscreen\n these days 'cause it plays nicer with multiple monitors.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1459},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":24362,"byte_end":24376,"line_start":22,"line_end":22,"column_start":10,"column_end":24},"name":"FullscreenType","qualname":"::conf::FullscreenType","value":"FullscreenType::{Windowed, True, Desktop}","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464}],"decl_id":null,"docs":" Possible fullscreen modes.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":24353,"byte_end":24707,"line_start":22,"line_end":31,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":24353,"byte_end":24707,"line_start":22,"line_end":31,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25380,"byte_end":25390,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"WindowMode","qualname":"::conf::WindowMode","value":"WindowMode { width, height, maximized, fullscreen_type, borderless, min_width, min_height, max_width, max_height, resizable }","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532}],"decl_id":null,"docs":" A builder structure containing window settings\n that can be set at runtime and changed with [`graphics::set_mode()`](../graphics/fn.set_mode.html).","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25369,"byte_end":26350,"line_start":56,"line_end":87,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25445,"byte_end":25450,"line_start":59,"line_end":59,"column_start":9,"column_end":14},"name":"width","qualname":"::conf::WindowMode::width","value":"f32","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" Window width\n","sig":null,"attributes":[{"value":"default = 800.0","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25418,"byte_end":25436,"line_start":58,"line_end":58,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25510,"byte_end":25516,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"name":"height","qualname":"::conf::WindowMode::height","value":"f32","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" Window height\n","sig":null,"attributes":[{"value":"default = 600.0","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25483,"byte_end":25501,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25600,"byte_end":25609,"line_start":65,"line_end":65,"column_start":9,"column_end":18},"name":"maximized","qualname":"::conf::WindowMode::maximized","value":"bool","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" Whether or not to maximize the window\n","sig":null,"attributes":[{"value":"default = false","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25573,"byte_end":25591,"line_start":64,"line_end":64,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1526},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25690,"byte_end":25705,"line_start":68,"line_end":68,"column_start":9,"column_end":24},"name":"fullscreen_type","qualname":"::conf::WindowMode::fullscreen_type","value":"conf::FullscreenType","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" Fullscreen type\n","sig":null,"attributes":[{"value":"default(FullscreenType::Windowed)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25645,"byte_end":25681,"line_start":67,"line_end":67,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1527},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25804,"byte_end":25814,"line_start":71,"line_end":71,"column_start":9,"column_end":19},"name":"borderless","qualname":"::conf::WindowMode::borderless","value":"bool","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" Whether or not to show window decorations\n","sig":null,"attributes":[{"value":"default = false","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25777,"byte_end":25795,"line_start":70,"line_end":70,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1528},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25913,"byte_end":25922,"line_start":74,"line_end":74,"column_start":9,"column_end":18},"name":"min_width","qualname":"::conf::WindowMode::min_width","value":"f32","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" Minimum width for resizable windows; 0 means no limit\n","sig":null,"attributes":[{"value":"default = 0.0","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25888,"byte_end":25904,"line_start":73,"line_end":73,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1529},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26021,"byte_end":26031,"line_start":77,"line_end":77,"column_start":9,"column_end":19},"name":"min_height","qualname":"::conf::WindowMode::min_height","value":"f32","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" Minimum height for resizable windows; 0 means no limit\n","sig":null,"attributes":[{"value":"default = 0.0","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":25996,"byte_end":26012,"line_start":76,"line_end":76,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26129,"byte_end":26138,"line_start":80,"line_end":80,"column_start":9,"column_end":18},"name":"max_width","qualname":"::conf::WindowMode::max_width","value":"f32","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" Maximum width for resizable windows; 0 means no limit\n","sig":null,"attributes":[{"value":"default = 0.0","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26104,"byte_end":26120,"line_start":79,"line_end":79,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26237,"byte_end":26247,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"name":"max_height","qualname":"::conf::WindowMode::max_height","value":"f32","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" Maximum height for resizable windows; 0 means no limit\n","sig":null,"attributes":[{"value":"default = 0.0","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26212,"byte_end":26228,"line_start":82,"line_end":82,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26332,"byte_end":26341,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"name":"resizable","qualname":"::conf::WindowMode::resizable","value":"bool","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" Whether or not the window is resizable\n","sig":null,"attributes":[{"value":"default = false","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26305,"byte_end":26323,"line_start":85,"line_end":85,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26460,"byte_end":26470,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<WindowMode>::dimensions","value":"fn (mut self, width: f32, height: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set default window size, or screen resolution in true fullscreen mode.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26657,"byte_end":26666,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"maximized","qualname":"<WindowMode>::maximized","value":"fn (mut self, maximized: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the window should be maximized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26804,"byte_end":26819,"line_start":104,"line_end":104,"column_start":12,"column_end":27},"name":"fullscreen_type","qualname":"<WindowMode>::fullscreen_type","value":"fn (mut self, fullscreen_type: FullscreenType) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the fullscreen type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":27020,"byte_end":27030,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"borderless","qualname":"<WindowMode>::borderless","value":"fn (mut self, borderless: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether a window should be borderless in windowed mode.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":27195,"byte_end":27209,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"min_dimensions","qualname":"<WindowMode>::min_dimensions","value":"fn (mut self, width: f32, height: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set minimum window dimensions for windowed mode.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":27409,"byte_end":27423,"line_start":123,"line_end":123,"column_start":12,"column_end":26},"name":"max_dimensions","qualname":"<WindowMode>::max_dimensions","value":"fn (mut self, width: f32, height: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set maximum window dimensions for windowed mode.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":27589,"byte_end":27598,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"resizable","qualname":"<WindowMode>::resizable","value":"fn (mut self, resizable: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set resizable.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28206,"byte_end":28217,"line_start":154,"line_end":154,"column_start":12,"column_end":23},"name":"WindowSetup","qualname":"::conf::WindowSetup","value":"WindowSetup { title, samples, vsync, icon, srgb }","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"decl_id":null,"docs":" A builder structure containing window settings\n that must be set at init time and cannot be changed afterwards.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28305,"byte_end":28310,"line_start":157,"line_end":157,"column_start":9,"column_end":14},"name":"title","qualname":"::conf::WindowSetup::title","value":"std::string::String","parent":{"krate":0,"index":1608},"children":[],"decl_id":null,"docs":" The window title.\n","sig":null,"attributes":[{"value":"default(String::from(\"An easy, good game\"))","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28250,"byte_end":28296,"line_start":156,"line_end":156,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28425,"byte_end":28432,"line_start":160,"line_end":160,"column_start":9,"column_end":16},"name":"samples","qualname":"::conf::WindowSetup::samples","value":"conf::NumSamples","parent":{"krate":0,"index":1608},"children":[],"decl_id":null,"docs":" Number of samples to use for multisample anti-aliasing.\n","sig":null,"attributes":[{"value":"default(NumSamples::Zero)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28388,"byte_end":28416,"line_start":159,"line_end":159,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28516,"byte_end":28521,"line_start":163,"line_end":163,"column_start":9,"column_end":14},"name":"vsync","qualname":"::conf::WindowSetup::vsync","value":"bool","parent":{"krate":0,"index":1608},"children":[],"decl_id":null,"docs":" Whether or not to enable vsync.\n","sig":null,"attributes":[{"value":"default = true","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28490,"byte_end":28507,"line_start":162,"line_end":162,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28801,"byte_end":28805,"line_start":168,"line_end":168,"column_start":9,"column_end":13},"name":"icon","qualname":"::conf::WindowSetup::icon","value":"std::string::String","parent":{"krate":0,"index":1608},"children":[],"decl_id":null,"docs":" A file path to the window's icon.\n It takes a path rooted in the `resources` directory (see the [`filesystem`](../filesystem/index.html)\n module for details), and an empty string results in a blank/default icon.\n","sig":null,"attributes":[{"value":"default(String::new())","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28767,"byte_end":28792,"line_start":167,"line_end":167,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1613},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28940,"byte_end":28944,"line_start":172,"line_end":172,"column_start":9,"column_end":13},"name":"srgb","qualname":"::conf::WindowSetup::srgb","value":"bool","parent":{"krate":0,"index":1608},"children":[],"decl_id":null,"docs":" Whether or not to enable sRGB (gamma corrected color)\n handling on the display.\n","sig":null,"attributes":[{"value":"default = true","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28914,"byte_end":28931,"line_start":171,"line_end":171,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":29011,"byte_end":29016,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"title","qualname":"<WindowSetup>::title","value":"fn (mut self, title: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set window title.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":29188,"byte_end":29195,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"samples","qualname":"<WindowSetup>::samples","value":"fn (mut self, samples: NumSamples) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set number of samples to use for multisample anti-aliasing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":29338,"byte_end":29343,"line_start":189,"line_end":189,"column_start":12,"column_end":17},"name":"vsync","qualname":"<WindowSetup>::vsync","value":"fn (mut self, vsync: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether vsync is enabled.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":29467,"byte_end":29471,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"icon","qualname":"<WindowSetup>::icon","value":"fn (mut self, icon: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the window's icon.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":29601,"byte_end":29605,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"srgb","qualname":"<WindowSetup>::srgb","value":"fn (mut self, active: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set sRGB color mode.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":30328,"byte_end":30334,"line_start":228,"line_end":228,"column_start":5,"column_end":11},"name":"OpenGL","qualname":"::conf::Backend::OpenGL","value":"Backend::OpenGL { major, minor }","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":" Defaults to OpenGL 3.2, which is supported by basically\n every machine since 2009 or so (apart from the ones that don't).\n","sig":null,"attributes":[{"value":"default","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":30313,"byte_end":30323,"line_start":227,"line_end":227,"column_start":5,"column_end":15}}]},{"kind":"StructVariant","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":30769,"byte_end":30777,"line_start":241,"line_end":241,"column_start":5,"column_end":13},"name":"OpenGLES","qualname":"::conf::Backend::OpenGLES","value":"Backend::OpenGLES { major, minor }","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":" OpenGL ES, defaults to 3.0.  Used for phones and other mobile\n devices.  Using something older\n than 3.0 starts to running into sticky limitations, particularly\n with instanced drawing (used for `SpriteBatch`), but might be\n possible.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":30162,"byte_end":30169,"line_start":224,"line_end":224,"column_start":10,"column_end":17},"name":"Backend","qualname":"::conf::Backend","value":"Backend::{OpenGL, OpenGLES}","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":1682}],"decl_id":null,"docs":" Possible backends.\n Currently, only OpenGL and OpenGL ES Core specs are supported,\n but this lets you specify which to use as well as the version numbers.","sig":null,"attributes":[{"value":"serde(tag = \"type\")","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":30130,"byte_end":30152,"line_start":223,"line_end":223,"column_start":1,"column_end":23}},{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":30153,"byte_end":30944,"line_start":224,"line_end":249,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":30153,"byte_end":30944,"line_start":224,"line_end":249,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":31020,"byte_end":31027,"line_start":253,"line_end":253,"column_start":12,"column_end":19},"name":"version","qualname":"<Backend>::version","value":"fn (self, new_major: u8, new_minor: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set requested OpenGL/OpenGL ES version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":31424,"byte_end":31426,"line_start":267,"line_end":267,"column_start":12,"column_end":14},"name":"gl","qualname":"<Backend>::gl","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use OpenGL\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":31620,"byte_end":31624,"line_start":275,"line_end":275,"column_start":12,"column_end":16},"name":"gles","qualname":"<Backend>::gles","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use OpenGL ES\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1805},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":31980,"byte_end":31984,"line_start":287,"line_end":287,"column_start":5,"column_end":9},"name":"Zero","qualname":"::conf::NumSamples::Zero","value":"NumSamples::Zero","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Multisampling disabled.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":32013,"byte_end":32016,"line_start":289,"line_end":289,"column_start":5,"column_end":8},"name":"One","qualname":"::conf::NumSamples::One","value":"NumSamples::One","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" One sample\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":32046,"byte_end":32049,"line_start":291,"line_end":291,"column_start":5,"column_end":8},"name":"Two","qualname":"::conf::NumSamples::Two","value":"NumSamples::Two","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Two samples\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":32080,"byte_end":32084,"line_start":293,"line_end":293,"column_start":5,"column_end":9},"name":"Four","qualname":"::conf::NumSamples::Four","value":"NumSamples::Four","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Four samples\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1817},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":32116,"byte_end":32121,"line_start":295,"line_end":295,"column_start":5,"column_end":10},"name":"Eight","qualname":"::conf::NumSamples::Eight","value":"NumSamples::Eight","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Eight samples\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":32155,"byte_end":32162,"line_start":297,"line_end":297,"column_start":5,"column_end":12},"name":"Sixteen","qualname":"::conf::NumSamples::Sixteen","value":"NumSamples::Sixteen","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Sixteen samples\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":31931,"byte_end":31941,"line_start":285,"line_end":285,"column_start":10,"column_end":20},"name":"NumSamples","qualname":"::conf::NumSamples","value":"NumSamples::{Zero, One, Two, Four, Eight, Sixteen}","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1820}],"decl_id":null,"docs":" The possible number of samples for multisample anti-aliasing.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":31922,"byte_end":32170,"line_start":285,"line_end":298,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":31922,"byte_end":32170,"line_start":285,"line_end":298,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":32288,"byte_end":32296,"line_start":303,"line_end":303,"column_start":12,"column_end":20},"name":"from_u32","qualname":"<NumSamples>::from_u32","value":"fn (i: u32) -> Option<NumSamples>","parent":null,"children":[],"decl_id":null,"docs":" Create a `NumSamples` from a number.\n Returns `None` if `i` is invalid.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1885},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":33102,"byte_end":33112,"line_start":333,"line_end":333,"column_start":12,"column_end":22},"name":"ModuleConf","qualname":"::conf::ModuleConf","value":"ModuleConf { gamepad, audio }","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1887}],"decl_id":null,"docs":" Defines which submodules to enable in ggez.\n If one tries to use a submodule that is not enabled,\n it will panic.  Currently, not all subsystems can be\n disabled.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":33091,"byte_end":33514,"line_start":333,"line_end":349,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1886},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":33428,"byte_end":33435,"line_start":344,"line_end":344,"column_start":9,"column_end":16},"name":"gamepad","qualname":"::conf::ModuleConf::gamepad","value":"bool","parent":{"krate":0,"index":1885},"children":[],"decl_id":null,"docs":" The gamepad input module.\n","sig":null,"attributes":[{"value":"cfg(not(target_os = \"macos\"))","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":33365,"byte_end":33397,"line_start":342,"line_end":342,"column_start":5,"column_end":37}},{"value":"default = true","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":33402,"byte_end":33419,"line_start":343,"line_end":343,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1887},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":33500,"byte_end":33505,"line_start":348,"line_end":348,"column_start":9,"column_end":14},"name":"audio","qualname":"::conf::ModuleConf::audio","value":"bool","parent":{"krate":0,"index":1885},"children":[],"decl_id":null,"docs":" The audio module.\n","sig":null,"attributes":[{"value":"default = true","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":33474,"byte_end":33491,"line_start":347,"line_end":347,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":33609,"byte_end":33616,"line_start":353,"line_end":353,"column_start":12,"column_end":19},"name":"gamepad","qualname":"<ModuleConf>::gamepad","value":"fn (mut self, gamepad: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not to enable the gamepad input module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":33771,"byte_end":33776,"line_start":359,"line_end":359,"column_start":12,"column_end":17},"name":"audio","qualname":"<ModuleConf>::audio","value":"fn (mut self, audio: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not to enable the audio module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1947},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":34324,"byte_end":34328,"line_start":382,"line_end":382,"column_start":12,"column_end":16},"name":"Conf","qualname":"::conf::Conf","value":"Conf { window_mode, window_setup, backend, modules }","parent":null,"children":[{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951}],"decl_id":null,"docs":" A structure containing configuration data\n for the game engine.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1948},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":34401,"byte_end":34412,"line_start":384,"line_end":384,"column_start":9,"column_end":20},"name":"window_mode","qualname":"::conf::Conf::window_mode","value":"conf::WindowMode","parent":{"krate":0,"index":1947},"children":[],"decl_id":null,"docs":" Window setting information that can be set at runtime\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1949},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":34499,"byte_end":34511,"line_start":386,"line_end":386,"column_start":9,"column_end":21},"name":"window_setup","qualname":"::conf::Conf::window_setup","value":"conf::WindowSetup","parent":{"krate":0,"index":1947},"children":[],"decl_id":null,"docs":" Window setting information that must be set at init-time\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":34573,"byte_end":34580,"line_start":388,"line_end":388,"column_start":9,"column_end":16},"name":"backend","qualname":"::conf::Conf::backend","value":"conf::Backend","parent":{"krate":0,"index":1947},"children":[],"decl_id":null,"docs":" Graphics backend configuration\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1951},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":34632,"byte_end":34639,"line_start":390,"line_end":390,"column_start":9,"column_end":16},"name":"modules","qualname":"::conf::Conf::modules","value":"conf::ModuleConf","parent":{"krate":0,"index":1947},"children":[],"decl_id":null,"docs":" Which modules to enable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":34713,"byte_end":34716,"line_start":395,"line_end":395,"column_start":12,"column_end":15},"name":"new","qualname":"<Conf>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same as `Conf::default()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":34866,"byte_end":34880,"line_start":401,"line_end":401,"column_start":12,"column_end":26},"name":"from_toml_file","qualname":"<Conf>::from_toml_file","value":"fn <R> (file: &mut R) -> GameResult<Conf>","parent":null,"children":[],"decl_id":null,"docs":" Load a TOML file from the given `Read` and attempts to parse\n a `Conf` from it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":35173,"byte_end":35185,"line_start":410,"line_end":410,"column_start":12,"column_end":24},"name":"to_toml_file","qualname":"<Conf>::to_toml_file","value":"fn <W> (&self, file: &mut W) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Saves the `Conf` to the given `Write` object,\n formatted as TOML.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":35365,"byte_end":35376,"line_start":417,"line_end":417,"column_start":12,"column_end":23},"name":"window_mode","qualname":"<Conf>::window_mode","value":"fn (mut self, window_mode: WindowMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the window mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":35518,"byte_end":35525,"line_start":423,"line_end":423,"column_start":12,"column_end":19},"name":"backend","qualname":"<Conf>::backend","value":"fn (mut self, backend: Backend) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the backend\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":35652,"byte_end":35659,"line_start":429,"line_end":429,"column_start":12,"column_end":19},"name":"modules","qualname":"<Conf>::modules","value":"fn (mut self, modules: ModuleConf) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the backend\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":37993,"byte_end":38000,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context { filesystem, timer_context, audio_context, keyboard_context, mouse_context, gamepad_context, continuing }","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" A `Context` is an object that holds on to global resources.\n It basically tracks hardware state such as the screen, audio\n system, timers, and so on.  Generally this type can **not**\n be shared/sent between threads and only one `Context` can exist at a time.  Trying\n to create a second one will fail.  It is fine to drop a `Context`\n and create a new one, but this will also close and re-open your\n game's window.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":38036,"byte_end":38046,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"name":"filesystem","qualname":"::context::Context::filesystem","value":"filesystem::Filesystem","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Filesystem state\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":38182,"byte_end":38195,"line_start":44,"line_end":44,"column_start":9,"column_end":22},"name":"timer_context","qualname":"::context::Context::timer_context","value":"timer::TimeContext","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Timer state\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":38247,"byte_end":38260,"line_start":46,"line_end":46,"column_start":9,"column_end":22},"name":"audio_context","qualname":"::context::Context::audio_context","value":"std::boxed::Box<(dyn audio::AudioContext + 'static)>","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Audio context\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":38325,"byte_end":38341,"line_start":48,"line_end":48,"column_start":9,"column_end":25},"name":"keyboard_context","qualname":"::context::Context::keyboard_context","value":"input::keyboard::KeyboardContext","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Keyboard context\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":38400,"byte_end":38413,"line_start":50,"line_end":50,"column_start":9,"column_end":22},"name":"mouse_context","qualname":"::context::Context::mouse_context","value":"input::mouse::MouseContext","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Mouse context\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":38468,"byte_end":38483,"line_start":52,"line_end":52,"column_start":9,"column_end":24},"name":"gamepad_context","qualname":"::context::Context::gamepad_context","value":"std::boxed::Box<(dyn input::gamepad::GamepadContext + 'static)>","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Gamepad context\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":38832,"byte_end":38842,"line_start":60,"line_end":60,"column_start":9,"column_end":19},"name":"continuing","qualname":"::context::Context::continuing","value":"bool","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Controls whether or not the event loop should be running.\n Set this with `ggez::event::quit()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":41354,"byte_end":41367,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"process_event","qualname":"<Context>::process_event","value":"fn (&mut self, event: &winit::Event) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Feeds an `Event` into the `Context` so it can update any internal\n state it needs to, such as detecting window resizes.  If you are\n rolling your own event loop, you should call this on the events\n you receive before processing them yourself.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2014},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":44060,"byte_end":44074,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"ContextBuilder","qualname":"::context::ContextBuilder","value":"ContextBuilder {  }","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020}],"decl_id":null,"docs":" A builder object for creating a [`Context`](struct.Context.html).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":44407,"byte_end":44410,"line_start":204,"line_end":204,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextBuilder>::new","value":"fn (game_id: &str, author: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ContextBuilder` with default settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":44755,"byte_end":44767,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"window_setup","qualname":"<ContextBuilder>::window_setup","value":"fn (mut self, setup: conf::WindowSetup) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the window setup settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":44924,"byte_end":44935,"line_start":222,"line_end":222,"column_start":12,"column_end":23},"name":"window_mode","qualname":"<ContextBuilder>::window_mode","value":"fn (mut self, mode: conf::WindowMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the window mode settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":45084,"byte_end":45091,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"backend","qualname":"<ContextBuilder>::backend","value":"fn (mut self, backend: conf::Backend) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the graphics backend.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":45244,"byte_end":45251,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"modules","qualname":"<ContextBuilder>::modules","value":"fn (mut self, modules: conf::ModuleConf) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the modules configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":45580,"byte_end":45584,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"conf","qualname":"<ContextBuilder>::conf","value":"fn (mut self, conf: conf::Conf) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets all the config options, overriding any previous\n ones from [`window_setup()`](#method.window_setup),\n [`window_mode()`](#method.window_mode), and\n [`backend()`](#method.backend).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":45771,"byte_end":45788,"line_start":250,"line_end":250,"column_start":12,"column_end":29},"name":"add_resource_path","qualname":"<ContextBuilder>::add_resource_path","value":"fn <T> (mut self, path: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a new read-only filesystem path to the places to search\n for resources.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":46348,"byte_end":46365,"line_start":268,"line_end":268,"column_start":12,"column_end":29},"name":"add_zipfile_bytes","qualname":"<ContextBuilder>::add_zipfile_bytes","value":"fn <B> (mut self, bytes: B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a new zip file from bytes whose contents will be searched\n for resources. The zip file will be stored in-memory.\n You can pass it a static slice, a `Vec` of bytes, etc.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":46826,"byte_end":46840,"line_start":281,"line_end":281,"column_start":12,"column_end":26},"name":"with_conf_file","qualname":"<ContextBuilder>::with_conf_file","value":"fn (mut self, load_conf_file: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies whether or not to load the `conf.toml` file if it\n exists and use its settings to override the provided values.\n Defaults to `true` which is usually what you want, but being\n able to fiddle with it is sometimes useful for debugging.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":46989,"byte_end":46994,"line_start":287,"line_end":287,"column_start":12,"column_end":17},"name":"build","qualname":"<ContextBuilder>::build","value":"fn (self) -> GameResult<(Context, winit::EventsLoop)>","parent":null,"children":[],"decl_id":null,"docs":" Build the `Context`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":2041},{"krate":0,"index":2090},{"krate":0,"index":2088},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310}],"decl_id":null,"docs":" Error types and conversion functions.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":49677,"byte_end":49692,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"FilesystemError","qualname":"::error::GameError::FilesystemError","value":"GameError::FilesystemError(String)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" An error in the filesystem layout\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":49742,"byte_end":49753,"line_start":25,"line_end":25,"column_start":5,"column_end":16},"name":"ConfigError","qualname":"::error::GameError::ConfigError","value":"GameError::ConfigError(String)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" An error in the config file\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":49890,"byte_end":49904,"line_start":28,"line_end":28,"column_start":5,"column_end":19},"name":"EventLoopError","qualname":"::error::GameError::EventLoopError","value":"GameError::EventLoopError(String)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Happens when an `winit::EventsLoopProxy` attempts to\n wake up an `winit::EventsLoop` that no longer exists.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":50001,"byte_end":50018,"line_start":30,"line_end":30,"column_start":5,"column_end":22},"name":"ResourceLoadError","qualname":"::error::GameError::ResourceLoadError","value":"GameError::ResourceLoadError(String)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" An error trying to load a resource, such as getting an invalid image file.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2054},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":50128,"byte_end":50144,"line_start":32,"line_end":32,"column_start":5,"column_end":21},"name":"ResourceNotFound","qualname":"::error::GameError::ResourceNotFound","value":"GameError::ResourceNotFound(String, Vec<(std::path::PathBuf, GameError)>)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Unable to find a resource; the `Vec` is the paths it searched for and associated errors\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":50241,"byte_end":50252,"line_start":34,"line_end":34,"column_start":5,"column_end":16},"name":"RenderError","qualname":"::error::GameError::RenderError","value":"GameError::RenderError(String)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Something went wrong in the renderer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":50317,"byte_end":50327,"line_start":36,"line_end":36,"column_start":5,"column_end":15},"name":"AudioError","qualname":"::error::GameError::AudioError","value":"GameError::AudioError(String)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Something went wrong in the audio playback\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":50410,"byte_end":50421,"line_start":38,"line_end":38,"column_start":5,"column_end":16},"name":"WindowError","qualname":"::error::GameError::WindowError","value":"GameError::WindowError(String)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Something went wrong trying to set or get window properties.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":50490,"byte_end":50509,"line_start":40,"line_end":40,"column_start":5,"column_end":24},"name":"WindowCreationError","qualname":"::error::GameError::WindowCreationError","value":"GameError::WindowCreationError(Arc<glutin::CreationError>)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Something went wrong trying to create a window\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":50599,"byte_end":50606,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"IOError","qualname":"::error::GameError::IOError","value":"GameError::IOError(Arc<std::io::Error>)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Something went wrong trying to read from a file\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":50691,"byte_end":50700,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"name":"FontError","qualname":"::error::GameError::FontError","value":"GameError::FontError(String)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Something went wrong trying to load/render a font\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":50768,"byte_end":50778,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"name":"VideoError","qualname":"::error::GameError::VideoError","value":"GameError::VideoError(String)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Something went wrong applying video settings.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":50839,"byte_end":50857,"line_start":48,"line_end":48,"column_start":5,"column_end":23},"name":"ShaderProgramError","qualname":"::error::GameError::ShaderProgramError","value":"GameError::ShaderProgramError(gfx::shade::ProgramError)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Something went wrong compiling shaders\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":50958,"byte_end":50970,"line_start":50,"line_end":50,"column_start":5,"column_end":17},"name":"GamepadError","qualname":"::error::GameError::GamepadError","value":"GameError::GamepadError(String)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Something went wrong with the `gilrs` gamepad-input library.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":51056,"byte_end":51065,"line_start":52,"line_end":52,"column_start":5,"column_end":14},"name":"LyonError","qualname":"::error::GameError::LyonError","value":"GameError::LyonError(String)","parent":{"krate":0,"index":2041},"children":[],"decl_id":null,"docs":" Something went wrong with the `lyon` shape-tesselation library.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2041},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":49619,"byte_end":49628,"line_start":21,"line_end":21,"column_start":10,"column_end":19},"name":"GameError","qualname":"::error::GameError","value":"GameError::{FilesystemError, ConfigError, EventLoopError, ResourceLoadError, ResourceNotFound, RenderError, AudioError, WindowError, WindowCreationError, IOError, FontError, VideoError, ShaderProgramError, GamepadError, LyonError}","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2045},{"krate":0,"index":2048},{"krate":0,"index":2051},{"krate":0,"index":2054},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2064},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2082},{"krate":0,"index":2085}],"decl_id":null,"docs":" An enum containing all kinds of game framework errors.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":52118,"byte_end":52128,"line_start":83,"line_end":83,"column_start":10,"column_end":20},"name":"GameResult","qualname":"::error::GameResult","value":"Result<T, GameError>","parent":null,"children":[],"decl_id":null,"docs":" A convenient result type consisting of a return type and a `GameError`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":354},{"krate":0,"index":355}],"decl_id":null,"docs":" The `event` module contains traits and structs to actually run your game mainloop\n and handle top-level state, as well as handle input events such as keyboard\n and mouse.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":58076,"byte_end":58087,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"name":"winit_event","qualname":"::event::winit_event","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","parent":null,"children":[{"krate":0,"index":321}],"decl_id":null,"docs":" `winit` events; nested in a module for re-export neatness.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":59038,"byte_end":59050,"line_start":55,"line_end":55,"column_start":11,"column_end":23},"name":"EventHandler","qualname":"::event::EventHandler","value":"EventHandler","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"decl_id":null,"docs":" A trait defining event callbacks.  This is your primary interface with\n `ggez`'s event loop.  Implement this trait for a type and\n override at least the [`update()`](#tymethod.update) and\n [`draw()`](#tymethod.draw) methods, then pass it to\n [`event::run()`](fn.run.html) to run the game's mainloop.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":59170,"byte_end":59176,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"update","qualname":"::event::EventHandler::update","value":"fn (&mut self, _ctx: &mut Context) -> GameResult","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Called upon each logic update to the game.\n This should be where the game's logic takes place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":59527,"byte_end":59531,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"draw","qualname":"::event::EventHandler::draw","value":"fn (&mut self, _ctx: &mut Context) -> GameResult","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Called to do the drawing of your game.\n You probably want to start this with\n [`graphics::clear()`](../graphics/fn.clear.html) and end it\n with [`graphics::present()`](../graphics/fn.present.html) and\n maybe [`timer::yield_now()`](../timer/fn.yield_now.html).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":59621,"byte_end":59644,"line_start":68,"line_end":68,"column_start":8,"column_end":31},"name":"mouse_button_down_event","qualname":"::event::EventHandler::mouse_button_down_event","value":"fn (&mut self, _ctx: &mut Context, _button: MouseButton, _x: f32, _y: f32) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" A mouse button was pressed\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":59815,"byte_end":59836,"line_start":78,"line_end":78,"column_start":8,"column_end":29},"name":"mouse_button_up_event","qualname":"::event::EventHandler::mouse_button_up_event","value":"fn (&mut self, _ctx: &mut Context, _button: MouseButton, _x: f32, _y: f32) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" A mouse button was released\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":60133,"byte_end":60151,"line_start":89,"line_end":89,"column_start":8,"column_end":26},"name":"mouse_motion_event","qualname":"::event::EventHandler::mouse_motion_event","value":"fn (&mut self, _ctx: &mut Context, _x: f32, _y: f32, _dx: f32, _dy: f32) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" The mouse was moved; it provides both absolute x and y coordinates in the window,\n and relative x and y coordinates compared to its last position.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":60410,"byte_end":60427,"line_start":93,"line_end":93,"column_start":8,"column_end":25},"name":"mouse_wheel_event","qualname":"::event::EventHandler::mouse_wheel_event","value":"fn (&mut self, _ctx: &mut Context, _x: f32, _y: f32) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" The mousewheel was scrolled, vertically (y, positive away from and negative toward the user)\n or horizontally (x, positive to the right and negative to the left).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":60769,"byte_end":60783,"line_start":101,"line_end":101,"column_start":8,"column_end":22},"name":"key_down_event","qualname":"::event::EventHandler::key_down_event","value":"fn (&mut self, ctx: &mut Context, keycode: KeyCode, _keymods: KeyMods, _repeat: bool) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" A keyboard button was pressed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":61042,"byte_end":61054,"line_start":114,"line_end":114,"column_start":8,"column_end":20},"name":"key_up_event","qualname":"::event::EventHandler::key_up_event","value":"fn (&mut self, _ctx: &mut Context, _keycode: KeyCode, _keymods: KeyMods) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" A keyboard button was released.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":61267,"byte_end":61283,"line_start":118,"line_end":118,"column_start":8,"column_end":24},"name":"text_input_event","qualname":"::event::EventHandler::text_input_event","value":"fn (&mut self, _ctx: &mut Context, _character: char) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" A unicode character was received, usually from keyboard input.\n This is the intended way of facilitating text input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":61516,"byte_end":61541,"line_start":123,"line_end":123,"column_start":8,"column_end":33},"name":"gamepad_button_down_event","qualname":"::event::EventHandler::gamepad_button_down_event","value":"fn (&mut self, _ctx: &mut Context, _btn: Button, _id: GamepadId) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" A gamepad button was pressed; `id` identifies which gamepad.\n Use [`input::gamepad()`](../input/fn.gamepad.html) to get more info about\n the gamepad.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":61787,"byte_end":61810,"line_start":128,"line_end":128,"column_start":8,"column_end":31},"name":"gamepad_button_up_event","qualname":"::event::EventHandler::gamepad_button_up_event","value":"fn (&mut self, _ctx: &mut Context, _btn: Button, _id: GamepadId) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" A gamepad button was released; `id` identifies which gamepad.\n Use [`input::gamepad()`](../input/fn.gamepad.html) to get more info about\n the gamepad.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":62047,"byte_end":62065,"line_start":133,"line_end":133,"column_start":8,"column_end":26},"name":"gamepad_axis_event","qualname":"::event::EventHandler::gamepad_axis_event","value":"fn (&mut self, _ctx: &mut Context, _axis: Axis, _value: f32, _id: GamepadId) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" A gamepad axis moved; `id` identifies which gamepad.\n Use [`input::gamepad()`](../input/fn.gamepad.html) to get more info about\n the gamepad.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":62206,"byte_end":62217,"line_start":137,"line_end":137,"column_start":8,"column_end":19},"name":"focus_event","qualname":"::event::EventHandler::focus_event","value":"fn (&mut self, _ctx: &mut Context, _gained: bool) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Called when the window is shown or hidden.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":62392,"byte_end":62402,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"quit_event","qualname":"::event::EventHandler::quit_event","value":"fn (&mut self, _ctx: &mut Context) -> bool","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Called upon a quit event.  If it returns true,\n the game does not exit (the quit event is cancelled).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":62672,"byte_end":62684,"line_start":148,"line_end":148,"column_start":8,"column_end":20},"name":"resize_event","qualname":"::event::EventHandler::resize_event","value":"fn (&mut self, _ctx: &mut Context, _width: f32, _height: f32) -> ()","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Called when the user resizes the window, or when it is resized\n via [`graphics::set_mode()`](../graphics/fn.set_mode.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":62914,"byte_end":62918,"line_start":154,"line_end":154,"column_start":8,"column_end":12},"name":"quit","qualname":"::event::quit","value":"fn (ctx: &mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Terminates the [`ggez::event::run()`](fn.run.html) loop by setting\n [`Context.continuing`](struct.Context.html#structfield.continuing)\n to `false`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\event.rs","byte_start":63230,"byte_end":63233,"line_start":163,"line_end":163,"column_start":8,"column_end":11},"name":"run","qualname":"::event::run","value":"fn <S> (ctx: &mut Context, events_loop: &mut EventsLoop, state: &mut S) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Runs the game's main loop, calling event callbacks on the given state\n object as events occur.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"filesystem","qualname":"::filesystem","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":2092},{"krate":0,"index":2098},{"krate":0,"index":377},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453}],"decl_id":null,"docs":" A cross-platform interface to the filesystem.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":70147,"byte_end":70157,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"Filesystem","qualname":"::filesystem::Filesystem","value":"Filesystem {  }","parent":null,"children":[{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097}],"decl_id":null,"docs":" A structure that contains the filesystem state and cache.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":70484,"byte_end":70491,"line_start":58,"line_end":58,"column_start":5,"column_end":12},"name":"VfsFile","qualname":"::filesystem::File::VfsFile","value":"File::VfsFile(Box<dyn vfs::VFile>)","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" A wrapper for a VFile trait object.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":70429,"byte_end":70433,"line_start":56,"line_end":56,"column_start":10,"column_end":14},"name":"File","qualname":"::filesystem::File","value":"File::{VfsFile}","parent":null,"children":[{"krate":0,"index":378}],"decl_id":null,"docs":" Represents a file, either in the filesystem, or in the resources zip file,\n or whatever.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":71592,"byte_end":71595,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Filesystem>::new","value":"fn (id: &str, author: &str) -> GameResult<Filesystem>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Filesystem` instance, using the given `id` and (on\n some platforms) the `author` as a portion of the user\n directory path.  This function is called automatically by\n ggez, the end user should never need to call it.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":81084,"byte_end":81088,"line_start":357,"line_end":357,"column_start":8,"column_end":12},"name":"open","qualname":"::filesystem::open","value":"fn <P> (ctx: &mut Context, path: P) -> GameResult<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens the given path and returns the resulting `File`\n in read-only mode.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":81383,"byte_end":81395,"line_start":364,"line_end":364,"column_start":8,"column_end":20},"name":"open_options","qualname":"::filesystem::open_options","value":"fn <P> (ctx: &mut Context, path: P, options: OpenOptions) -> GameResult<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in the user directory with the given `filesystem::OpenOptions`.\n Note that even if you open a file read-only, it can only access\n files in the user directory.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":81678,"byte_end":81684,"line_start":374,"line_end":374,"column_start":8,"column_end":14},"name":"create","qualname":"::filesystem::create","value":"fn <P> (ctx: &mut Context, path: P) -> GameResult<File>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new file in the user directory and opens it\n to be written to, truncating it if it already exists.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":81940,"byte_end":81950,"line_start":381,"line_end":381,"column_start":8,"column_end":18},"name":"create_dir","qualname":"::filesystem::create_dir","value":"fn <P> (ctx: &mut Context, path: P) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Create an empty directory in the user dir\n with the given name.  Any parents to that directory\n that do not exist will be created.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":82120,"byte_end":82126,"line_start":386,"line_end":386,"column_start":8,"column_end":14},"name":"delete","qualname":"::filesystem::delete","value":"fn <P> (ctx: &mut Context, path: P) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Deletes the specified file in the user dir.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":82323,"byte_end":82333,"line_start":392,"line_end":392,"column_start":8,"column_end":18},"name":"delete_dir","qualname":"::filesystem::delete_dir","value":"fn <P> (ctx: &mut Context, path: P) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Deletes the specified directory in the user dir,\n and all its contents!\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":82501,"byte_end":82507,"line_start":397,"line_end":397,"column_start":8,"column_end":14},"name":"exists","qualname":"::filesystem::exists","value":"fn <P> (ctx: &Context, path: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a file or directory exists.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":82658,"byte_end":82665,"line_start":402,"line_end":402,"column_start":8,"column_end":15},"name":"is_file","qualname":"::filesystem::is_file","value":"fn <P> (ctx: &Context, path: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a path points at a file.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":82813,"byte_end":82819,"line_start":407,"line_end":407,"column_start":8,"column_end":14},"name":"is_dir","qualname":"::filesystem::is_dir","value":"fn <P> (ctx: &Context, path: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a path points at a directory.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":82970,"byte_end":82983,"line_start":412,"line_end":412,"column_start":8,"column_end":21},"name":"user_data_dir","qualname":"::filesystem::user_data_dir","value":"fn (ctx: &Context) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Return the full path to the user data directory\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":83115,"byte_end":83130,"line_start":417,"line_end":417,"column_start":8,"column_end":23},"name":"user_config_dir","qualname":"::filesystem::user_config_dir","value":"fn (ctx: &Context) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Return the full path to the user config directory\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":83293,"byte_end":83306,"line_start":423,"line_end":423,"column_start":8,"column_end":21},"name":"resources_dir","qualname":"::filesystem::resources_dir","value":"fn (ctx: &Context) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the resource directory\n (even if it doesn't exist)\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":83547,"byte_end":83555,"line_start":431,"line_end":431,"column_start":8,"column_end":16},"name":"read_dir","qualname":"::filesystem::read_dir","value":"fn <P> (ctx: &mut Context, path: P) -> GameResult<Box<dyn Iterator<Item = path::PathBuf>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a list of all files and directories in the resource directory,\n in no particular order.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":83793,"byte_end":83802,"line_start":440,"line_end":440,"column_start":8,"column_end":17},"name":"print_all","qualname":"::filesystem::print_all","value":"fn (ctx: &mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints the contents of all data directories.\n Useful for debugging.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":84132,"byte_end":84139,"line_start":450,"line_end":450,"column_start":8,"column_end":15},"name":"log_all","qualname":"::filesystem::log_all","value":"fn (ctx: &mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Outputs the contents of all data directories,\n using the \"info\" log level of the `log` crate.\n Useful for debugging.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":84564,"byte_end":84569,"line_start":461,"line_end":461,"column_start":8,"column_end":13},"name":"mount","qualname":"::filesystem::mount","value":"fn (ctx: &mut Context, path: &path::Path, readonly: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds the given (absolute) path to the list of directories\n it will search to look for resources.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":84835,"byte_end":84846,"line_start":468,"line_end":468,"column_start":8,"column_end":19},"name":"read_config","qualname":"::filesystem::read_config","value":"fn (ctx: &mut Context) -> GameResult<conf::Conf>","parent":null,"children":[],"decl_id":null,"docs":" Looks for a file named `/conf.toml` in any resource directory and\n loads it if it finds it.\n If it can't read it for some reason, returns an error.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":85039,"byte_end":85051,"line_start":474,"line_end":474,"column_start":8,"column_end":20},"name":"write_config","qualname":"::filesystem::write_config","value":"fn (ctx: &mut Context, conf: &conf::Conf) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Takes a `Conf` object and saves it to the user directory,\n overwriting any file already there.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"graphics","qualname":"::graphics","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":502},{"krate":0,"index":588},{"krate":0,"index":632},{"krate":0,"index":680},{"krate":0,"index":749},{"krate":0,"index":852},{"krate":0,"index":944},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":2425},{"krate":0,"index":2439},{"krate":0,"index":2438},{"krate":0,"index":2436},{"krate":0,"index":2433},{"krate":0,"index":2431},{"krate":0,"index":2429},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":2454},{"krate":0,"index":2467},{"krate":0,"index":2466},{"krate":0,"index":2464},{"krate":0,"index":2461},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2488},{"krate":0,"index":2507},{"krate":0,"index":2506},{"krate":0,"index":2504},{"krate":0,"index":2501},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2527},{"krate":0,"index":2537},{"krate":0,"index":2536},{"krate":0,"index":2534},{"krate":0,"index":2531},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2541},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1183}],"decl_id":null,"docs":" The `graphics` module performs the actual drawing of images, text, and other\n objects with the [`Drawable`](trait.Drawable.html) trait.  It also handles\n basic loading of images and text.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":125170,"byte_end":125183,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"CanvasGeneric","qualname":"::graphics::canvas::CanvasGeneric","value":"CanvasGeneric {  }","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104}],"decl_id":null,"docs":" A generic canvas independent of graphics backend. This type should\n never need to be used directly; use [`graphics::Canvas`](type.Canvas.html)\n instead.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":126020,"byte_end":126026,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Canvas","qualname":"::graphics::canvas::Canvas","value":"CanvasGeneric<GlBackendSpec>","parent":null,"children":[],"decl_id":null,"docs":" A canvas that can be rendered to instead of the screen (sometimes referred\n to as \"render target\" or \"render to texture\"). Set the canvas with the\n [`graphics::set_canvas()`](fn.set_canvas.html) function, and then anything you\n draw will be drawn to the canvas instead of the screen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":126158,"byte_end":126161,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Canvas>::new","value":"fn (ctx: &mut Context, width: u16, height: u16, samples: conf::NumSamples) -> GameResult<Canvas>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Canvas` with the given size and number of samples.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":127995,"byte_end":128011,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"with_window_size","qualname":"<Canvas>::with_window_size","value":"fn (ctx: &mut Context) -> GameResult<Canvas>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Canvas` with the current window dimensions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":128320,"byte_end":128325,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"image","qualname":"<Canvas>::image","value":"fn (&self) -> &Image","parent":null,"children":[],"decl_id":null,"docs":" Gets the backend `Image` that is being rendered to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":128426,"byte_end":128432,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"filter","qualname":"<Canvas>::filter","value":"fn (&self) -> FilterMode","parent":null,"children":[],"decl_id":null,"docs":" Get the filter mode for the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":128546,"byte_end":128556,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<Canvas>::set_filter","value":"fn (&mut self, mode: FilterMode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the filter mode for the canvas.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":128709,"byte_end":128719,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Canvas>::into_inner","value":"fn (self) -> Image","parent":null,"children":[],"decl_id":null,"docs":" Destroys the `Canvas` and returns the `Image` it contains.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":129941,"byte_end":129951,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"set_canvas","qualname":"::graphics::canvas::set_canvas","value":"fn (ctx: &mut Context, target: Option<&Canvas>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the `Canvas` to render to. Specifying `Option::None` will cause all\n rendering to be done directly to the screen.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":151938,"byte_end":151947,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"DrawParam","qualname":"::graphics::drawparam::DrawParam","value":"DrawParam { src, dest, rotation, scale, offset, color }","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114}],"decl_id":null,"docs":" A struct containing all the necessary info for drawing a [`Drawable`](trait.Drawable.html).","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":151927,"byte_end":152825,"line_start":23,"line_end":41,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":152098,"byte_end":152101,"line_start":26,"line_end":26,"column_start":9,"column_end":12},"name":"src","qualname":"::graphics::drawparam::DrawParam::src","value":"graphics::types::Rect","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" A portion of the drawable to clip, as a fraction of the whole image.\n Defaults to the whole image `(0,0 to 1,1)` if omitted.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":152183,"byte_end":152187,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"name":"dest","qualname":"::graphics::drawparam::DrawParam::dest","value":"mint::Point2<f32>","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" The position to draw the graphic expressed as a `Point2`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":152267,"byte_end":152275,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"name":"rotation","qualname":"::graphics::drawparam::DrawParam::rotation","value":"f32","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" The orientation of the graphic in radians.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":152346,"byte_end":152351,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"name":"scale","qualname":"::graphics::drawparam::DrawParam::scale","value":"mint::Vector2<f32>","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" The x/y scale factors expressed as a `Vector2`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":152710,"byte_end":152716,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"offset","qualname":"::graphics::drawparam::DrawParam::offset","value":"mint::Point2<f32>","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" An offset from the center for transform operations like scale/rotation,\n with `0,0` meaning the origin and `1,1` meaning the opposite corner from the origin.\n By default these operations are done from the top-left corner, so to rotate something\n from the center specify `Point2::new(0.5, 0.5)` here.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":152810,"byte_end":152815,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"color","qualname":"::graphics::drawparam::DrawParam::color","value":"graphics::types::Color","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" A color to draw the target with.\n Default: white.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":153242,"byte_end":153245,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<DrawParam>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new DrawParam with default values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":153328,"byte_end":153331,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"src","qualname":"<DrawParam>::src","value":"fn (mut self, src: Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the source rect\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":153445,"byte_end":153449,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"dest","qualname":"<DrawParam>::dest","value":"fn <P> (mut self, dest: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the dest point\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":153745,"byte_end":153750,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"color","qualname":"<DrawParam>::color","value":"fn (mut self, color: Color) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the drawable color.  This will be blended with whatever\n color the drawn object already is.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":153886,"byte_end":153894,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"rotation","qualname":"<DrawParam>::rotation","value":"fn (mut self, rotation: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the rotation of the drawable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":154044,"byte_end":154049,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"scale","qualname":"<DrawParam>::scale","value":"fn <V> (mut self, scale: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the scaling factors of the drawable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":154294,"byte_end":154300,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"offset","qualname":"<DrawParam>::offset","value":"fn <P> (mut self, offset: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the transformation offset of the drawable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":155421,"byte_end":155430,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"to_matrix","qualname":"<DrawParam>::to_matrix","value":"fn (&self) -> mint::ColumnMatrix4<f32>","parent":null,"children":[],"decl_id":null,"docs":" A [`DrawParam`](struct.DrawParam.html) that has been crunched down to a single\nmatrix.  Because of this it only contains the transform part (rotation/scale/etc),\n with no src/dest/color info.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":159618,"byte_end":159630,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"ImageGeneric","qualname":"::graphics::image::ImageGeneric","value":"ImageGeneric {  }","parent":null,"children":[{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143}],"decl_id":null,"docs":" Generic in-GPU-memory image data available to be drawn on the screen.\n You probably just want to look at the `Image` type.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":163374,"byte_end":163379,"line_start":124,"line_end":124,"column_start":10,"column_end":15},"name":"Image","qualname":"::graphics::image::Image","value":"ImageGeneric<GlBackendSpec>","parent":null,"children":[],"decl_id":null,"docs":" In-GPU-memory image data available to be drawn on the screen,\n using the OpenGL backend.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":163597,"byte_end":163600,"line_start":130,"line_end":130,"column_start":5,"column_end":8},"name":"Png","qualname":"::graphics::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":" .png image format (defaults to RGBA with 8-bit channels.)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":163513,"byte_end":163524,"line_start":128,"line_end":128,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::graphics::image::ImageFormat","value":"ImageFormat::{Png}","parent":null,"children":[{"krate":0,"index":2152}],"decl_id":null,"docs":" The supported formats for saving an image.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":163504,"byte_end":163603,"line_start":128,"line_end":131,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":163504,"byte_end":163603,"line_start":128,"line_end":131,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":163810,"byte_end":163813,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<Image>::new","value":"fn <P> (context: &mut Context, path: P) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Load a new image from the file at the given path. The documentation for the\n [`filesystem`](../filesystem/index.html) module explains how the path must be specified.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":164630,"byte_end":164640,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"from_rgba8","qualname":"<Image>::from_rgba8","value":"fn (context: &mut Context, width: u16, height: u16, rgba: &[u8]) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Image` from the given buffer of `u8` RGBA values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":165196,"byte_end":165204,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"to_rgba8","qualname":"<Image>::to_rgba8","value":"fn (&self, ctx: &mut Context) -> GameResult<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Dumps the `Image`'s data to a `Vec` of `u8` RGBA values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":167205,"byte_end":167211,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"encode","qualname":"<Image>::encode","value":"fn <P> (&self, ctx: &mut Context, format: ImageFormat, path: P) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Encode the `Image` to the given file format and\n write it out to the given path.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":168068,"byte_end":168073,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"solid","qualname":"<Image>::solid","value":"fn (context: &mut Context, size: u16, color: Color) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" A little helper function that creates a new `Image` that is just\n a solid square of the given size and color.  Mainly useful for\n debugging.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":168555,"byte_end":168560,"line_start":266,"line_end":266,"column_start":12,"column_end":17},"name":"width","qualname":"<Image>::width","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Return the width of the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":168654,"byte_end":168660,"line_start":271,"line_end":271,"column_start":12,"column_end":18},"name":"height","qualname":"<Image>::height","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Return the height of the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":168758,"byte_end":168764,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"filter","qualname":"<Image>::filter","value":"fn (&self) -> FilterMode","parent":null,"children":[],"decl_id":null,"docs":" Get the filter mode for the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":168889,"byte_end":168899,"line_start":281,"line_end":281,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<Image>::set_filter","value":"fn (&mut self, mode: FilterMode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the filter mode for the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":169042,"byte_end":169052,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<Image>::dimensions","value":"fn (&self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns the dimensions of the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":169229,"byte_end":169233,"line_start":291,"line_end":291,"column_start":12,"column_end":16},"name":"wrap","qualname":"<Image>::wrap","value":"fn (&self) -> (WrapMode, WrapMode)","parent":null,"children":[],"decl_id":null,"docs":" Gets the `Image`'s `WrapMode` along the X and Y axes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":169418,"byte_end":169426,"line_start":296,"line_end":296,"column_start":12,"column_end":20},"name":"set_wrap","qualname":"<Image>::set_wrap","value":"fn (&mut self, wrap_x: WrapMode, wrap_y: WrapMode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the `Image`'s `WrapMode` along the X and Y axes.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":174759,"byte_end":174770,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"MeshBuilder","qualname":"::graphics::mesh::MeshBuilder","value":"MeshBuilder {  }","parent":null,"children":[{"krate":0,"index":2164},{"krate":0,"index":2165}],"decl_id":null,"docs":" A builder for creating [`Mesh`](struct.Mesh.html)es.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":175091,"byte_end":175094,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<MeshBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `MeshBuilder`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":175221,"byte_end":175225,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"line","qualname":"<MeshBuilder>::line","value":"fn <P> (&mut self, points: &[P], width: f32, color: Color) -> GameResult<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a line of one or more connected segments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":175615,"byte_end":175621,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"circle","qualname":"<MeshBuilder>::circle","value":"fn <P> (&mut self, mode: DrawMode, point: P, radius: f32, tolerance: f32, color: Color) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a circle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":177091,"byte_end":177098,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"ellipse","qualname":"<MeshBuilder>::ellipse","value":"fn <P> (&mut self, mode: DrawMode, point: P, radius1: f32, radius2: f32, tolerance: f32, color: Color) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for an ellipse.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":178648,"byte_end":178656,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"polyline","qualname":"<MeshBuilder>::polyline","value":"fn <P> (&mut self, mode: DrawMode, points: &[P], color: Color) -> GameResult<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a series of connected lines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":179249,"byte_end":179256,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"polygon","qualname":"<MeshBuilder>::polygon","value":"fn <P> (&mut self, mode: DrawMode, points: &[P], color: Color) -> GameResult<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a closed polygon.\n The points given must be in clockwise order,\n otherwise at best the polygon will not draw.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":180979,"byte_end":180988,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"rectangle","qualname":"<MeshBuilder>::rectangle","value":"fn (&mut self, mode: DrawMode, bounds: Rect, color: Color) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a rectangle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":182033,"byte_end":182042,"line_start":285,"line_end":285,"column_start":12,"column_end":21},"name":"triangles","qualname":"<MeshBuilder>::triangles","value":"fn <P> (&mut self, triangles: &[P], color: Color) -> GameResult<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Mesh`](struct.Mesh.html) from a raw list of triangles.\n The length of the list must be a multiple of 3.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":184282,"byte_end":184289,"line_start":340,"line_end":340,"column_start":12,"column_end":19},"name":"texture","qualname":"<MeshBuilder>::texture","value":"fn (&mut self, texture: Image) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Takes an `Image` to apply to the mesh.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":184821,"byte_end":184824,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"raw","qualname":"<MeshBuilder>::raw","value":"fn <V> (&mut self, verts: &[V], indices: &[u32], texture: Option<Image>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Mesh` from a raw list of triangles defined from vertices\n and indices.  You may also\n supply an `Image` to use as a texture, if you pass `None`, it will\n just use a pure white texture.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":185753,"byte_end":185758,"line_start":373,"line_end":373,"column_start":12,"column_end":17},"name":"build","qualname":"<MeshBuilder>::build","value":"fn (&self, ctx: &mut Context) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Takes the accumulated geometry and load it into GPU memory,\n creating a single `Mesh`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2180},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":186878,"byte_end":186882,"line_start":413,"line_end":413,"column_start":12,"column_end":16},"name":"Mesh","qualname":"::graphics::mesh::Mesh","value":"Mesh {  }","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186}],"decl_id":null,"docs":" 2D polygon mesh.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":187191,"byte_end":187199,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"new_line","qualname":"<Mesh>::new_line","value":"fn <P> (ctx: &mut Context, points: &[P], width: f32, color: Color) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a line of one or more connected segments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":187571,"byte_end":187581,"line_start":439,"line_end":439,"column_start":12,"column_end":22},"name":"new_circle","qualname":"<Mesh>::new_circle","value":"fn <P> (ctx: &mut Context, mode: DrawMode, point: P, radius: f32, tolerance: f32, color: Color) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a circle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":187989,"byte_end":188000,"line_start":456,"line_end":456,"column_start":12,"column_end":23},"name":"new_ellipse","qualname":"<Mesh>::new_ellipse","value":"fn <P> (ctx: &mut Context, mode: DrawMode, point: P, radius1: f32, radius2: f32, tolerance: f32, color: Color) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for an ellipse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":188457,"byte_end":188469,"line_start":474,"line_end":474,"column_start":12,"column_end":24},"name":"new_polyline","qualname":"<Mesh>::new_polyline","value":"fn <P> (ctx: &mut Context, mode: DrawMode, points: &[P], color: Color) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for series of connected lines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":188938,"byte_end":188949,"line_start":491,"line_end":491,"column_start":12,"column_end":23},"name":"new_polygon","qualname":"<Mesh>::new_polygon","value":"fn <P> (ctx: &mut Context, mode: DrawMode, points: &[P], color: Color) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for closed polygon.\n The points given must be in clockwise order,\n otherwise at best the polygon will not draw.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":189484,"byte_end":189497,"line_start":511,"line_end":511,"column_start":12,"column_end":25},"name":"new_rectangle","qualname":"<Mesh>::new_rectangle","value":"fn (ctx: &mut Context, mode: DrawMode, bounds: Rect, color: Color) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a rectangle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":189818,"byte_end":189832,"line_start":523,"line_end":523,"column_start":12,"column_end":26},"name":"from_triangles","qualname":"<Mesh>::from_triangles","value":"fn <P> (ctx: &mut Context, triangles: &[P], color: Color) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Mesh` from a raw list of triangle points.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":190930,"byte_end":190938,"line_start":546,"line_end":546,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<Mesh>::from_raw","value":"fn <V> (ctx: &mut Context, verts: &[V], indices: &[u32], texture: Option<Image>) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Mesh` from a raw list of triangles defined from points\n and indices, with the given UV texture coordinates.  You may also\n supply an `Image` to use as a texture, if you pass `None`, it will\n just use a pure white texture.  The indices should draw the points in\n clockwise order, otherwise at best the mesh will not draw.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":193481,"byte_end":193493,"line_start":605,"line_end":605,"column_start":12,"column_end":24},"name":"set_vertices","qualname":"<Mesh>::set_vertices","value":"fn (&mut self, ctx: &mut Context, verts: &[Vertex], indices: &[u32]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces the vertices in the `Mesh` with the given ones.  This MAY be faster\n than re-creating a `Mesh` with [`Mesh::from_raw()`](#method.from_raw) due to\n reusing memory instead of allocating and deallocating it, both on the CPU and\n GPU side.  There's too much variation in implementations and drivers to promise\n it will actually be faster though.  At worst, it will be the same speed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197102,"byte_end":197112,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"EmptyConst","qualname":"::graphics::shader::EmptyConst","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type for empty shader data for shaders that do not require any additional\n data to be sent to the GPU\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197091,"byte_end":197113,"line_start":32,"line_end":32,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197485,"byte_end":197488,"line_start":47,"line_end":47,"column_start":5,"column_end":8},"name":"Add","qualname":"::graphics::shader::BlendMode::Add","value":"BlendMode::Add","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" When combining two fragments, add their values together, saturating\n at 1.0\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197593,"byte_end":197601,"line_start":50,"line_end":50,"column_start":5,"column_end":13},"name":"Subtract","qualname":"::graphics::shader::BlendMode::Subtract","value":"BlendMode::Subtract","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" When combining two fragments, subtract the source value from the\n destination value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2206},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197933,"byte_end":197938,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"Alpha","qualname":"::graphics::shader::BlendMode::Alpha","value":"BlendMode::Alpha","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" When combining two fragments, add the value of the source times its\n alpha channel with the value of the destination multiplied by the inverse\n of the source alpha channel. Has the usual transparency effect: mixes the\n two colors using a fraction of each one specified by the alpha of the source.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":198328,"byte_end":198334,"line_start":61,"line_end":61,"column_start":5,"column_end":11},"name":"Invert","qualname":"::graphics::shader::BlendMode::Invert","value":"BlendMode::Invert","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" When combining two fragments, subtract the destination color from a constant\n color using the source color as weight. Has an invert effect with the constant\n color as base and source color controlling displacement from the base color.\n A white source color and a white value results in plain invert. The output\n alpha is same as destination alpha.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":198410,"byte_end":198418,"line_start":63,"line_end":63,"column_start":5,"column_end":13},"name":"Multiply","qualname":"::graphics::shader::BlendMode::Multiply","value":"BlendMode::Multiply","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" When combining two fragments, multiply their values together.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2212},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":198486,"byte_end":198493,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"Replace","qualname":"::graphics::shader::BlendMode::Replace","value":"BlendMode::Replace","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" When combining two fragments, choose the source value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":198562,"byte_end":198569,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Lighten","qualname":"::graphics::shader::BlendMode::Lighten","value":"BlendMode::Lighten","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" When combining two fragments, choose the lighter value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":198637,"byte_end":198643,"line_start":69,"line_end":69,"column_start":5,"column_end":11},"name":"Darken","qualname":"::graphics::shader::BlendMode::Darken","value":"BlendMode::Darken","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" When combining two fragments, choose the darker value\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197378,"byte_end":197387,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"BlendMode","qualname":"::graphics::shader::BlendMode","value":"BlendMode::{Add, Subtract, Alpha, Invert, Multiply, Replace, Lighten, Darken}","parent":null,"children":[{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2216}],"decl_id":null,"docs":" An enum for specifying default and custom blend modes\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197369,"byte_end":198646,"line_start":44,"line_end":70,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197369,"byte_end":198646,"line_start":44,"line_end":70,"column_start":1,"column_end":2}}]},{"kind":"Type","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":202126,"byte_end":202134,"line_start":173,"line_end":173,"column_start":10,"column_end":18},"name":"ShaderId","qualname":"::graphics::shader::ShaderId","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" An ID used by the ggez graphics context to uniquely identify a shader\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":202442,"byte_end":202455,"line_start":181,"line_end":181,"column_start":12,"column_end":25},"name":"ShaderGeneric","qualname":"::graphics::shader::ShaderGeneric","value":"ShaderGeneric {  }","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235}],"decl_id":null,"docs":" A `ShaderGeneric` reprensents a handle user-defined shader that can be used\n with a ggez graphics context that is generic over `gfx::Resources`","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":202717,"byte_end":202723,"line_start":189,"line_end":189,"column_start":10,"column_end":16},"name":"Shader","qualname":"::graphics::shader::Shader","value":"ShaderGeneric<graphics::GlBackendSpec, C>","parent":null,"children":[],"decl_id":null,"docs":" A `Shader` represents a handle to a user-defined shader that can be used\n with a ggez graphics context\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":205456,"byte_end":205459,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"new","qualname":"<ShaderGeneric<Spec, C>>::new","value":"fn <P, S> (ctx: &mut Context, vertex_path: P, pixel_path: P, consts: C, name: S, blend_modes: Option<&[BlendMode]>) -> GameResult<Shader<C>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Shader` given source files, constants and a name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":206645,"byte_end":206652,"line_start":313,"line_end":313,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<ShaderGeneric<Spec, C>>::from_u8","value":"fn <S> (ctx: &mut Context, vertex_source: &[u8], pixel_source: &[u8], consts: C, name: S, blend_modes: Option<&[BlendMode]>) -> GameResult<Shader<C>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Shader` directly from GLSL source code.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":207606,"byte_end":207610,"line_start":347,"line_end":347,"column_start":12,"column_end":16},"name":"send","qualname":"<Shader<C>>::send","value":"fn (&self, ctx: &mut Context, consts: C) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Send data to the GPU for use with the `Shader`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":207926,"byte_end":207935,"line_start":356,"line_end":356,"column_start":12,"column_end":21},"name":"shader_id","qualname":"<Shader<C>>::shader_id","value":"fn (&self) -> ShaderId","parent":null,"children":[],"decl_id":null,"docs":" Gets the shader ID for the `Shader` which is used by the\n graphics context for identifying shaders in its cache\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":208837,"byte_end":208849,"line_start":389,"line_end":389,"column_start":11,"column_end":23},"name":"ShaderHandle","qualname":"::graphics::shader::ShaderHandle","value":"ShaderHandle<Spec: graphics::BackendSpec>: fmt::Debug","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825}],"decl_id":null,"docs":" A trait that is used to create trait objects to abstract away the\n `gfx::Structure<ConstFormat>` type of the constant data for drawing\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":208937,"byte_end":208941,"line_start":391,"line_end":391,"column_start":8,"column_end":12},"name":"draw","qualname":"::graphics::shader::ShaderHandle::draw","value":"fn (&self, encoder: &mut Encoder<Spec::Resources, Spec::CommandBuffer>, slice: &Slice<Spec::Resources>, data: &graphics::pipe::Data<Spec::Resources>) -> GameResult","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":" Draw with the current Shader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":209195,"byte_end":209209,"line_start":399,"line_end":399,"column_start":8,"column_end":22},"name":"set_blend_mode","qualname":"::graphics::shader::ShaderHandle::set_blend_mode","value":"fn (&mut self, mode: BlendMode) -> GameResult","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":" Sets the shader program's blend mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":209314,"byte_end":209324,"line_start":402,"line_end":402,"column_start":8,"column_end":18},"name":"blend_mode","qualname":"::graphics::shader::ShaderHandle::blend_mode","value":"fn (&self) -> BlendMode","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":" Gets the shader program's current blend mode\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":210488,"byte_end":210498,"line_start":439,"line_end":439,"column_start":12,"column_end":22},"name":"ShaderLock","qualname":"::graphics::shader::ShaderLock","value":"ShaderLock {  }","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2242}],"decl_id":null,"docs":" A lock for RAII shader regions. The shader automatically gets cleared once\n the lock goes out of scope, restoring the previous shader (if any).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":210767,"byte_end":210777,"line_start":451,"line_end":451,"column_start":8,"column_end":18},"name":"use_shader","qualname":"::graphics::shader::use_shader","value":"fn <C> (ctx: &mut Context, ps: &Shader<C>) -> ShaderLock","parent":null,"children":[],"decl_id":null,"docs":" Use a shader until the returned lock goes out of scope\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":211156,"byte_end":211166,"line_start":466,"line_end":466,"column_start":8,"column_end":18},"name":"set_shader","qualname":"::graphics::shader::set_shader","value":"fn <C> (ctx: &mut Context, ps: &Shader<C>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the current shader for the `Context` to render with\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":211604,"byte_end":211616,"line_start":478,"line_end":478,"column_start":8,"column_end":20},"name":"clear_shader","qualname":"::graphics::shader::clear_shader","value":"fn (ctx: &mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the the current shader for the `Context`, restoring the default shader.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":215712,"byte_end":215730,"line_start":15,"line_end":15,"column_start":11,"column_end":29},"name":"DEFAULT_FONT_SCALE","qualname":"::graphics::text::DEFAULT_FONT_SCALE","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default size for fonts.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2285},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":216186,"byte_end":216190,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"Font","qualname":"::graphics::text::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":2286}],"decl_id":null,"docs":" A handle referring to a loaded Truetype font.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":216175,"byte_end":216278,"line_start":25,"line_end":28,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":216175,"byte_end":216278,"line_start":25,"line_end":28,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":216598,"byte_end":216610,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"TextFragment","qualname":"::graphics::text::TextFragment","value":"TextFragment { text, color, font, scale }","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301}],"decl_id":null,"docs":" A piece of text with optional color, font and font scale information.\n Drawing text generally involves one or more of these.\n These options take precedence over any similar field/argument.\n Implements `From` for `char`, `&str`, `String` and\n `(String, Font, Scale)`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":216649,"byte_end":216653,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"text","qualname":"::graphics::text::TextFragment::text","value":"std::string::String","parent":{"krate":0,"index":2297},"children":[],"decl_id":null,"docs":" Text string itself.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2299},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":216723,"byte_end":216728,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"color","qualname":"::graphics::text::TextFragment::color","value":"std::option::Option<graphics::types::Color>","parent":{"krate":0,"index":2297},"children":[],"decl_id":null,"docs":" Fragment's color, defaults to text's color.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":216803,"byte_end":216807,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"font","qualname":"::graphics::text::TextFragment::font","value":"std::option::Option<graphics::text::Font>","parent":{"krate":0,"index":2297},"children":[],"decl_id":null,"docs":" Fragment's font, defaults to text's font.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2301},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":216883,"byte_end":216888,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"name":"scale","qualname":"::graphics::text::TextFragment::scale","value":"std::option::Option<rusttype::Scale>","parent":{"krate":0,"index":2297},"children":[],"decl_id":null,"docs":" Fragment's scale, defaults to text's scale.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":217199,"byte_end":217202,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<TextFragment>::new","value":"fn <T> (text: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new fragment from `String` or `&str`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":217329,"byte_end":217334,"line_start":65,"line_end":65,"column_start":12,"column_end":17},"name":"color","qualname":"<TextFragment>::color","value":"fn (mut self, color: Color) -> TextFragment","parent":null,"children":[],"decl_id":null,"docs":" Set fragment's color, overrides text's color.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":217494,"byte_end":217498,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"font","qualname":"<TextFragment>::font","value":"fn (mut self, font: Font) -> TextFragment","parent":null,"children":[],"decl_id":null,"docs":" Set fragment's font, overrides text's font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":217656,"byte_end":217661,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"scale","qualname":"<TextFragment>::scale","value":"fn (mut self, scale: Scale) -> TextFragment","parent":null,"children":[],"decl_id":null,"docs":" Set fragment's scale, overrides text's scale.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2314},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":219436,"byte_end":219440,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"Text","qualname":"::graphics::text::Text","value":"Text {  }","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322}],"decl_id":null,"docs":" Drawable text object.  Essentially a list of [`TextFragment`](struct.TextFragment.html)'s\n and some cached size information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":220384,"byte_end":220387,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"new","qualname":"<Text>::new","value":"fn <F> (fragment: F) -> Text","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Text` from a `TextFragment`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":220614,"byte_end":220617,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"add","qualname":"<Text>::add","value":"fn <F> (&mut self, fragment: F) -> &mut Text","parent":null,"children":[],"decl_id":null,"docs":" Appends a `TextFragment` to the `Text`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":220883,"byte_end":220892,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"fragments","qualname":"<Text>::fragments","value":"fn (&self) -> &[TextFragment]","parent":null,"children":[],"decl_id":null,"docs":" Returns a read-only slice of all `TextFragment`'s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":221015,"byte_end":221028,"line_start":205,"line_end":205,"column_start":12,"column_end":25},"name":"fragments_mut","qualname":"<Text>::fragments_mut","value":"fn (&mut self) -> &mut [TextFragment]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable slice with all fragments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":221321,"byte_end":221331,"line_start":212,"line_end":212,"column_start":12,"column_end":22},"name":"set_bounds","qualname":"<Text>::set_bounds","value":"fn <P> (&mut self, bounds: P, alignment: Align) -> &mut Text","parent":null,"children":[],"decl_id":null,"docs":" Specifies rectangular dimensions to try and fit contents inside of,\n by wrapping, and alignment within the bounds.  To disable wrapping,\n give it a layout with `f32::INF` for the x value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":221904,"byte_end":221912,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"set_font","qualname":"<Text>::set_font","value":"fn (&mut self, font: Font, font_scale: Scale) -> &mut Text","parent":null,"children":[],"decl_id":null,"docs":" Specifies text's font and font scale; used for fragments that don't have their own.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":224456,"byte_end":224464,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"contents","qualname":"<Text>::contents","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the string that the text represents.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":226434,"byte_end":226444,"line_start":348,"line_end":348,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<Text>::dimensions","value":"fn (&self, context: &mut Context) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the width and height of the formatted and wrapped text.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":226843,"byte_end":226848,"line_start":358,"line_end":358,"column_start":12,"column_end":17},"name":"width","qualname":"<Text>::width","value":"fn (&self, context: &mut Context) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of formatted and wrapped text, in screen coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":227022,"byte_end":227028,"line_start":363,"line_end":363,"column_start":12,"column_end":18},"name":"height","qualname":"<Text>::height","value":"fn (&self, context: &mut Context) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of formatted and wrapped text, in screen coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":227942,"byte_end":227945,"line_start":396,"line_end":396,"column_start":12,"column_end":15},"name":"new","qualname":"<Font>::new","value":"fn <P> (context: &mut Context, path: P) -> GameResult<Font>","parent":null,"children":[],"decl_id":null,"docs":" Load a new TTF font from the given file.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":228421,"byte_end":228441,"line_start":410,"line_end":410,"column_start":12,"column_end":32},"name":"new_glyph_font_bytes","qualname":"<Font>::new_glyph_font_bytes","value":"fn (context: &mut Context, bytes: &[u8]) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Loads a new TrueType font from given bytes and into a `gfx::GlyphBrush` owned\n by the `Context`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":229478,"byte_end":229488,"line_start":438,"line_end":438,"column_start":8,"column_end":18},"name":"queue_text","qualname":"::graphics::text::queue_text","value":"fn <P> (context: &mut Context, batch: &Text, relative_dest: P, color: Option<Color>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Queues the `Text` to be drawn by [`draw_queued_text()`](fn.draw_queued_text.html).\n `relative_dest` is relative to the [`DrawParam::dest`](struct.DrawParam.html#structfield.dest)\n passed to `draw_queued()`. Note, any `Text` drawn via [`graphics::draw()`](fn.draw.html)\n will also draw everything already the queue.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":230011,"byte_end":230025,"line_start":450,"line_end":450,"column_start":8,"column_end":22},"name":"queue_text_raw","qualname":"::graphics::text::queue_text_raw","value":"fn <'a, S, G> (context: &mut Context, section: S, custom_layout: Option<&G>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Exposes `glyph_brush`'s drawing API in case `ggez`'s text drawing is insufficient.\n It takes `glyph_brush`'s `VariedSection` and `GlyphPositioner`, which give you lower-\n level control over how text is drawn.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":230873,"byte_end":230889,"line_start":472,"line_end":472,"column_start":8,"column_end":24},"name":"draw_queued_text","qualname":"::graphics::text::draw_queued_text","value":"fn <D> (ctx: &mut Context, param: D, blend: Option<BlendMode>, filter: FilterMode) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Draws all of the [`Text`](struct.Text.html)s added via [`queue_text()`](fn.queue_text.html).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2327},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":239797,"byte_end":239801,"line_start":19,"line_end":19,"column_start":12,"column_end":16},"name":"Rect","qualname":"::graphics::types::Rect","value":"Rect { x, y, w, h }","parent":null,"children":[{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331}],"decl_id":null,"docs":" A simple 2D rectangle.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":239786,"byte_end":240036,"line_start":19,"line_end":28,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2328},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":239863,"byte_end":239864,"line_start":21,"line_end":21,"column_start":9,"column_end":10},"name":"x","qualname":"::graphics::types::Rect::x","value":"f32","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":" X coordinate of the left edge of the rect.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":239929,"byte_end":239930,"line_start":23,"line_end":23,"column_start":9,"column_end":10},"name":"y","qualname":"::graphics::types::Rect::y","value":"f32","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":" Y coordinate of the top edge of the rect.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2330},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":239977,"byte_end":239978,"line_start":25,"line_end":25,"column_start":9,"column_end":10},"name":"w","qualname":"::graphics::types::Rect::w","value":"f32","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":" Total width of the rect\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":240027,"byte_end":240028,"line_start":27,"line_end":27,"column_start":9,"column_end":10},"name":"h","qualname":"::graphics::types::Rect::h","value":"f32","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":" Total height of the rect.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":240096,"byte_end":240099,"line_start":32,"line_end":32,"column_start":18,"column_end":21},"name":"new","qualname":"<Rect>::new","value":"fn (x: f32, y: f32, w: f32, h: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rect`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":240308,"byte_end":240316,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"fraction","qualname":"<Rect>::fraction","value":"fn (x: f32, y: f32, w: f32, h: f32, reference: &Rect) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Rect` a la Love2D's `love.graphics.newQuad`,\n as a fraction of the reference rect's size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":240604,"byte_end":240611,"line_start":48,"line_end":48,"column_start":18,"column_end":25},"name":"new_i32","qualname":"<Rect>::new_i32","value":"fn (x: i32, y: i32, w: i32, h: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new rect from `i32` coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":240853,"byte_end":240857,"line_start":58,"line_end":58,"column_start":18,"column_end":22},"name":"zero","qualname":"<Rect>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rect` with all values zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":240995,"byte_end":240998,"line_start":63,"line_end":63,"column_start":18,"column_end":21},"name":"one","qualname":"<Rect>::one","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Rect` at `0,0` with width and height 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":241134,"byte_end":241139,"line_start":68,"line_end":68,"column_start":18,"column_end":23},"name":"point","qualname":"<Rect>::point","value":"fn (&self) -> mint::Point2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the `Rect`'s x and y coordinates as a `Point2`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":241317,"byte_end":241321,"line_start":76,"line_end":76,"column_start":18,"column_end":22},"name":"left","qualname":"<Rect>::left","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the left edge of the `Rect`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":241416,"byte_end":241421,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"right","qualname":"<Rect>::right","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the right edge of the `Rect`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":241529,"byte_end":241532,"line_start":86,"line_end":86,"column_start":18,"column_end":21},"name":"top","qualname":"<Rect>::top","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the top edge of the `Rect`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":241628,"byte_end":241634,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Rect>::bottom","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the bottom edge of the `Rect`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":241746,"byte_end":241754,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"contains","qualname":"<Rect>::contains","value":"fn <P> (&self, point: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the `Rect` contains a `Point`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":242092,"byte_end":242100,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"overlaps","qualname":"<Rect>::overlaps","value":"fn (&self, other: &Rect) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the `Rect` overlaps another `Rect`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":242372,"byte_end":242381,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"translate","qualname":"<Rect>::translate","value":"fn <V> (&mut self, offset: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Translates the `Rect` by an offset of (x, y)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":242614,"byte_end":242621,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"move_to","qualname":"<Rect>::move_to","value":"fn <P> (&mut self, destination: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the `Rect`'s origin to (x, y)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":242923,"byte_end":242928,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"scale","qualname":"<Rect>::scale","value":"fn (&mut self, sx: f32, sy: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scales the `Rect` by a factor of (sx, sy),\n growing towards the bottom-left\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":243078,"byte_end":243084,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"rotate","qualname":"<Rect>::rotate","value":"fn (&mut self, rotation: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Calculated the new Rect around the rotated one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":244089,"byte_end":244101,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"combine_with","qualname":"<Rect>::combine_with","value":"fn (self, other: Rect) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Rect` that includes all points of these two `Rect`s.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2342},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":245883,"byte_end":245888,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"name":"Color","qualname":"::graphics::types::Color","value":"Color { r, g, b, a }","parent":null,"children":[{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346}],"decl_id":null,"docs":" A RGBA color in the `sRGB` color space represented as `f32`'s in the range `[0.0-1.0]`","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":245872,"byte_end":246049,"line_start":233,"line_end":242,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":245921,"byte_end":245922,"line_start":235,"line_end":235,"column_start":9,"column_end":10},"name":"r","qualname":"::graphics::types::Color::r","value":"f32","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Red component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":245961,"byte_end":245962,"line_start":237,"line_end":237,"column_start":9,"column_end":10},"name":"g","qualname":"::graphics::types::Color::g","value":"f32","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Green component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2345},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":246000,"byte_end":246001,"line_start":239,"line_end":239,"column_start":9,"column_end":10},"name":"b","qualname":"::graphics::types::Color::b","value":"f32","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Blue component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":246040,"byte_end":246041,"line_start":241,"line_end":241,"column_start":9,"column_end":10},"name":"a","qualname":"::graphics::types::Color::a","value":"f32","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Alpha component\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":246071,"byte_end":246076,"line_start":245,"line_end":245,"column_start":11,"column_end":16},"name":"WHITE","qualname":"::graphics::types::WHITE","value":"Color","parent":null,"children":[],"decl_id":null,"docs":" White\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":246166,"byte_end":246171,"line_start":253,"line_end":253,"column_start":11,"column_end":16},"name":"BLACK","qualname":"::graphics::types::BLACK","value":"Color","parent":null,"children":[],"decl_id":null,"docs":" Black\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":246343,"byte_end":246346,"line_start":262,"line_end":262,"column_start":18,"column_end":21},"name":"new","qualname":"<Color>::new","value":"fn (r: f32, g: f32, b: f32, a: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Color` from four `f32`'s in the range `[0.0-1.0]`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":246505,"byte_end":246514,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"name":"from_rgba","qualname":"<Color>::from_rgba","value":"fn (r: u8, g: u8, b: u8, a: u8) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Color` from four `u8`'s in the range `[0-255]`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":246730,"byte_end":246738,"line_start":273,"line_end":273,"column_start":12,"column_end":20},"name":"from_rgb","qualname":"<Color>::from_rgb","value":"fn (r: u8, g: u8, b: u8) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Color` from three u8's in the range `[0-255]`,\n with the alpha component fixed to 255 (opaque)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":246920,"byte_end":246927,"line_start":279,"line_end":279,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<Color>::to_rgba","value":"fn (self) -> (u8, u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Return a tuple of four `u8`'s in the range `[0-255]` with the `Color`'s\n components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":247095,"byte_end":247101,"line_start":285,"line_end":285,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<Color>::to_rgb","value":"fn (self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Return a tuple of three `u8`'s in the range `[0-255]` with the `Color`'s\n components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":247234,"byte_end":247247,"line_start":290,"line_end":290,"column_start":12,"column_end":25},"name":"from_rgba_u32","qualname":"<Color>::from_rgba_u32","value":"fn (c: u32) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Convert a packed `u32` containing `0xRRGGBBAA` into a `Color`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":247525,"byte_end":247537,"line_start":298,"line_end":298,"column_start":12,"column_end":24},"name":"from_rgb_u32","qualname":"<Color>::from_rgb_u32","value":"fn (c: u32) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Convert a packed `u32` containing `0x00RRGGBB` into a `Color`.\n This lets you do things like `Color::from_rgb_u32(0xCD09AA)` easily if you want.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":247730,"byte_end":247741,"line_start":305,"line_end":305,"column_start":12,"column_end":23},"name":"to_rgba_u32","qualname":"<Color>::to_rgba_u32","value":"fn (self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Color` into a packed `u32`, containing `0xRRGGBBAA` as bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":247956,"byte_end":247966,"line_start":312,"line_end":312,"column_start":12,"column_end":22},"name":"to_rgb_u32","qualname":"<Color>::to_rgb_u32","value":"fn (self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Color` into a packed `u32`, containing `0x00RRGGBB` as bytes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2356},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":250687,"byte_end":250688,"line_start":397,"line_end":397,"column_start":9,"column_end":10},"name":"r","qualname":"::graphics::types::LinearColor::r","value":"f32","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Red component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2357},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":250727,"byte_end":250728,"line_start":399,"line_end":399,"column_start":9,"column_end":10},"name":"g","qualname":"::graphics::types::LinearColor::g","value":"f32","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Green component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2358},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":250766,"byte_end":250767,"line_start":401,"line_end":401,"column_start":9,"column_end":10},"name":"b","qualname":"::graphics::types::LinearColor::b","value":"f32","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Blue component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2359},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":250806,"byte_end":250807,"line_start":403,"line_end":403,"column_start":9,"column_end":10},"name":"a","qualname":"::graphics::types::LinearColor::a","value":"f32","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Alpha component\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2369},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252159,"byte_end":252165,"line_start":457,"line_end":457,"column_start":5,"column_end":11},"name":"Stroke","qualname":"::graphics::types::DrawMode::Stroke","value":"DrawMode::Stroke(StrokeOptions)","parent":{"krate":0,"index":2368},"children":[],"decl_id":null,"docs":" A stroked line with given parameters, see `StrokeOptions` documentation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2372},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252265,"byte_end":252269,"line_start":459,"line_end":459,"column_start":5,"column_end":9},"name":"Fill","qualname":"::graphics::types::DrawMode::Fill","value":"DrawMode::Fill(FillOptions)","parent":{"krate":0,"index":2368},"children":[],"decl_id":null,"docs":" A filled shape with given parameters, see `FillOptions` documentation.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252063,"byte_end":252071,"line_start":455,"line_end":455,"column_start":10,"column_end":18},"name":"DrawMode","qualname":"::graphics::types::DrawMode","value":"DrawMode::{Stroke, Fill}","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":2372}],"decl_id":null,"docs":" Specifies whether a mesh should be drawn\n filled or as an outline.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252054,"byte_end":252285,"line_start":455,"line_end":460,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252385,"byte_end":252391,"line_start":464,"line_end":464,"column_start":12,"column_end":18},"name":"stroke","qualname":"<DrawMode>::stroke","value":"fn (width: f32) -> DrawMode","parent":null,"children":[],"decl_id":null,"docs":" Constructs a DrawMode that draws a stroke with the given width\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252585,"byte_end":252589,"line_start":469,"line_end":469,"column_start":12,"column_end":16},"name":"fill","qualname":"<DrawMode>::fill","value":"fn () -> DrawMode","parent":null,"children":[],"decl_id":null,"docs":" Constructs a DrawMode that fills shapes with default fill options.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2381},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252835,"byte_end":252841,"line_start":478,"line_end":478,"column_start":5,"column_end":11},"name":"Linear","qualname":"::graphics::types::FilterMode::Linear","value":"FilterMode::Linear","parent":{"krate":0,"index":2380},"children":[],"decl_id":null,"docs":" Use linear interpolation (ie, smooth)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2383},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252906,"byte_end":252913,"line_start":480,"line_end":480,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::graphics::types::FilterMode::Nearest","value":"FilterMode::Nearest","parent":{"krate":0,"index":2380},"children":[],"decl_id":null,"docs":" Use nearest-neighbor interpolation (ie, pixelated)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2380},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252772,"byte_end":252782,"line_start":476,"line_end":476,"column_start":10,"column_end":20},"name":"FilterMode","qualname":"::graphics::types::FilterMode","value":"FilterMode::{Linear, Nearest}","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2383}],"decl_id":null,"docs":" Specifies what blending method to use when scaling up/down images.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252763,"byte_end":252916,"line_start":476,"line_end":481,"column_start":1,"column_end":2}}]},{"kind":"Mod","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spritebatch","qualname":"::graphics::spritebatch","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":2390},{"krate":0,"index":2399},{"krate":0,"index":2397},{"krate":0,"index":2394},{"krate":0,"index":2401},{"krate":0,"index":2424},{"krate":0,"index":2422},{"krate":0,"index":2420},{"krate":0,"index":2417},{"krate":0,"index":2415},{"krate":0,"index":2409},{"krate":0,"index":2407},{"krate":0,"index":2404},{"krate":0,"index":1055},{"krate":0,"index":1069}],"decl_id":null,"docs":" A [`SpriteBatch`](spritebatch/struct.SpriteBatch.html) is a way to\n efficiently draw a large number of copies of the same image, or part\n of the same image.  It's useful for implementing tiled maps,\n spritesheets, particles, and other such things.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2390},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":261322,"byte_end":261333,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"SpriteBatch","qualname":"::graphics::spritebatch::SpriteBatch","value":"SpriteBatch {  }","parent":null,"children":[{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393}],"decl_id":null,"docs":" A `SpriteBatch` draws a number of copies of the same image, using a single draw call.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2401},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":261576,"byte_end":261585,"line_start":41,"line_end":41,"column_start":12,"column_end":21},"name":"SpriteIdx","qualname":"::graphics::spritebatch::SpriteIdx","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index of a particular sprite in a `SpriteBatch`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":261565,"byte_end":261593,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":261565,"byte_end":261593,"line_start":41,"line_end":41,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":261856,"byte_end":261859,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<SpriteBatch>::new","value":"fn (image: graphics::Image) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SpriteBatch`, drawing with the given image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":262164,"byte_end":262167,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"add","qualname":"<SpriteBatch>::add","value":"fn <P> (&mut self, param: P) -> SpriteIdx","parent":null,"children":[],"decl_id":null,"docs":" Adds a new sprite to the sprite batch.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":262426,"byte_end":262429,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"set","qualname":"<SpriteBatch>::set","value":"fn <P> (&mut self, handle: SpriteIdx, param: P) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Alters a sprite in the batch to use the given draw params\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":264925,"byte_end":264930,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"clear","qualname":"<SpriteBatch>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all data from the sprite batch.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":265042,"byte_end":265052,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SpriteBatch>::into_inner","value":"fn (self) -> graphics::Image","parent":null,"children":[],"decl_id":null,"docs":" Unwraps and returns the contained `Image`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":265180,"byte_end":265189,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"set_image","qualname":"<SpriteBatch>::set_image","value":"fn (&mut self, image: graphics::Image) -> graphics::Image","parent":null,"children":[],"decl_id":null,"docs":" Replaces the contained `Image`, returning the old one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":265380,"byte_end":265386,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"filter","qualname":"<SpriteBatch>::filter","value":"fn (&self) -> FilterMode","parent":null,"children":[],"decl_id":null,"docs":" Get the filter mode for the SpriteBatch.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":265505,"byte_end":265515,"line_start":151,"line_end":151,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<SpriteBatch>::set_filter","value":"fn (&mut self, mode: FilterMode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the filter mode for the SpriteBatch.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":91090,"byte_end":91101,"line_start":78,"line_end":78,"column_start":11,"column_end":22},"name":"BackendSpec","qualname":"::graphics::BackendSpec","value":"BackendSpec: fmt::Debug","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1100}],"decl_id":null,"docs":" A trait providing methods for working with a particular backend, such as OpenGL,\n with associated gfx-rs types for that backend.  As a user you probably\n don't need to touch this unless you want to write a new graphics backend\n for ggez.  (Trust me, you don't.)\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":91151,"byte_end":91160,"line_start":80,"line_end":80,"column_start":10,"column_end":19},"name":"Resources","qualname":"::graphics::BackendSpec::Resources","value":"type Resources: gfx::Resources;","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" gfx resource type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":91212,"byte_end":91219,"line_start":82,"line_end":82,"column_start":10,"column_end":17},"name":"Factory","qualname":"::graphics::BackendSpec::Factory","value":"type Factory: gfx::Factory<Self::Resources> + Clone;","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" gfx factory type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":91301,"byte_end":91314,"line_start":84,"line_end":84,"column_start":10,"column_end":23},"name":"CommandBuffer","qualname":"::graphics::BackendSpec::CommandBuffer","value":"type CommandBuffer: gfx::CommandBuffer<Self::Resources>;","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" gfx command buffer type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":91386,"byte_end":91392,"line_start":86,"line_end":86,"column_start":10,"column_end":16},"name":"Device","qualname":"::graphics::BackendSpec::Device","value":"type Device: gfx::Device<Resources = Self::Resources, CommandBuffer = Self::CommandBuffer>;","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" gfx device type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":91781,"byte_end":91809,"line_start":93,"line_end":93,"column_start":8,"column_end":36},"name":"raw_to_typed_shader_resource","qualname":"::graphics::BackendSpec::raw_to_typed_shader_resource","value":"fn (&self, texture_view: gfx::handle::RawShaderResourceView<Self::Resources>) -> gfx::handle::ShaderResourceView<<Self as BackendSpec>::Resources,\n                                ShaderResourceType>","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" A helper function to take a RawShaderResourceView and turn it into a typed one based on\n the surface type defined in a `BackendSpec`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":92986,"byte_end":93006,"line_start":114,"line_end":114,"column_start":8,"column_end":28},"name":"raw_to_typed_texture","qualname":"::graphics::BackendSpec::raw_to_typed_texture","value":"fn (&self, texture_view: gfx::handle::RawTexture<Self::Resources>) -> gfx::handle::Texture<<Self as BackendSpec>::Resources,\n                     <BuggoSurfaceFormat as gfx::format::Formatted>::Surface>","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Helper function that turns a raw to typed texture.\n A bit hacky since we can't really specify surface formats as part\n of this that well, alas.  There's some functions, like\n `gfx::Encoder::update_texture()`, that don't seem to have a `_raw()`\n counterpart, so we need this, so we need `BuggoSurfaceFormat` to\n keep fixed at compile time what texture format we're actually using.\n Oh well!\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":93619,"byte_end":93632,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"version_tuple","qualname":"::graphics::BackendSpec::version_tuple","value":"fn (&self) -> (u8, u8)","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Returns the version of the backend, `(major, minor)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":93717,"byte_end":93720,"line_start":135,"line_end":135,"column_start":8,"column_end":11},"name":"api","qualname":"::graphics::BackendSpec::api","value":"fn (&self) -> glutin::Api","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Returns the glutin `Api` enum for this backend.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":93869,"byte_end":93876,"line_start":139,"line_end":139,"column_start":8,"column_end":15},"name":"shaders","qualname":"::graphics::BackendSpec::shaders","value":"fn (&self) -> (&'static [u8], &'static [u8])","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Returns the text of the vertex and fragment shader files\n to create default shaders for this backend.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":93992,"byte_end":93996,"line_start":142,"line_end":142,"column_start":8,"column_end":12},"name":"info","qualname":"::graphics::BackendSpec::info","value":"fn (&self, device: &Self::Device) -> String","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Returns a string containing some backend-dependent info.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":94074,"byte_end":94078,"line_start":145,"line_end":145,"column_start":8,"column_end":12},"name":"init","qualname":"::graphics::BackendSpec::init","value":"fn <'a> (&self, window_builder: glutin::WindowBuilder, gl_builder: glutin::ContextBuilder<'a>, events_loop: &glutin::EventsLoop, color_format: gfx::format::Format, depth_format: gfx::format::Format) -> Result<(glutin::WindowedContext, Self::Device, Self::Factory,\n        gfx::handle::RawRenderTargetView<Self::Resources>,\n        gfx::handle::RawDepthStencilView<Self::Resources>),\n       glutin::CreationError>","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Creates the window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":94665,"byte_end":94672,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"encoder","qualname":"::graphics::BackendSpec::encoder","value":"fn (factory: &mut Self::Factory) -> gfx::Encoder<Self::Resources, Self::CommandBuffer>","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Create an Encoder for the backend.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":94850,"byte_end":94865,"line_start":167,"line_end":167,"column_start":8,"column_end":23},"name":"resize_viewport","qualname":"::graphics::BackendSpec::resize_viewport","value":"fn (&self, color_view: &gfx::handle::RawRenderTargetView<Self::Resources>, depth_view: &gfx::handle::RawDepthStencilView<Self::Resources>, color_format: gfx::format::Format, depth_format: gfx::format::Format, window: &glutin::WindowedContext) -> Option<(gfx::handle::RawRenderTargetView<Self::Resources>,\n        gfx::handle::RawDepthStencilView<Self::Resources>)>","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Resizes the viewport for the backend. (right now assumes a Glutin window...)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":95894,"byte_end":95907,"line_start":191,"line_end":191,"column_start":12,"column_end":25},"name":"GlBackendSpec","qualname":"::graphics::GlBackendSpec","value":"GlBackendSpec {  }","parent":null,"children":[{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428}],"decl_id":null,"docs":" A backend specification for OpenGL.\n This is different from [`Backend`](../conf/enum.Backend.html)\n because this needs to be its own struct to implement traits\n upon, and because there may need to be a layer of translation\n between what the user asks for in the config, and what the\n graphics backend code actually gets from the driver.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":95883,"byte_end":96037,"line_start":191,"line_end":198,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":95883,"byte_end":96037,"line_start":191,"line_end":198,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":2454},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100065,"byte_end":100071,"line_start":338,"line_end":338,"column_start":12,"column_end":18},"name":"Vertex","qualname":"::graphics::Vertex","value":"Vertex { pos, uv, color }","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2459}],"decl_id":null,"docs":" Structure containing fundamental vertex data.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"<::gfx::macros::structure::gfx_impl_struct_meta macros>","byte_start":13347789,"byte_end":13347817,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"rustc_copy_clone_marker","span":{"file_name":"<::gfx::macros::structure::gfx_impl_struct_meta macros>","byte_start":13347889,"byte_end":13347966,"line_start":8,"line_end":9,"column_start":22,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2455},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100082,"byte_end":100085,"line_start":339,"line_end":339,"column_start":9,"column_end":12},"name":"pos","qualname":"::graphics::Vertex::pos","value":"[f32; _]","parent":{"krate":0,"index":2454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2457},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100115,"byte_end":100117,"line_start":340,"line_end":340,"column_start":9,"column_end":11},"name":"uv","qualname":"::graphics::Vertex::uv","value":"[f32; _]","parent":{"krate":0,"index":2454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100146,"byte_end":100151,"line_start":341,"line_end":341,"column_start":9,"column_end":14},"name":"color","qualname":"::graphics::Vertex::color","value":"[f32; _]","parent":{"krate":0,"index":2454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2488},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100363,"byte_end":100381,"line_start":347,"line_end":347,"column_start":12,"column_end":30},"name":"InstanceProperties","qualname":"::graphics::InstanceProperties","value":"InstanceProperties { col1, col2, col3, col4, src, color }","parent":null,"children":[{"krate":0,"index":2489},{"krate":0,"index":2491},{"krate":0,"index":2493},{"krate":0,"index":2495},{"krate":0,"index":2497},{"krate":0,"index":2499}],"decl_id":null,"docs":" Internal structure containing values that are different for each\n drawable object.  This is the per-object data that\n gets fed into the shaders.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"<::gfx::macros::structure::gfx_impl_struct_meta macros>","byte_start":13347789,"byte_end":13347817,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"rustc_copy_clone_marker","span":{"file_name":"<::gfx::macros::structure::gfx_impl_struct_meta macros>","byte_start":13347889,"byte_end":13347966,"line_start":8,"line_end":9,"column_start":22,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2489},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100539,"byte_end":100543,"line_start":351,"line_end":351,"column_start":9,"column_end":13},"name":"col1","qualname":"::graphics::InstanceProperties::col1","value":"[f32; _]","parent":{"krate":0,"index":2488},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2491},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100575,"byte_end":100579,"line_start":352,"line_end":352,"column_start":9,"column_end":13},"name":"col2","qualname":"::graphics::InstanceProperties::col2","value":"[f32; _]","parent":{"krate":0,"index":2488},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2493},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100611,"byte_end":100615,"line_start":353,"line_end":353,"column_start":9,"column_end":13},"name":"col3","qualname":"::graphics::InstanceProperties::col3","value":"[f32; _]","parent":{"krate":0,"index":2488},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2495},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100647,"byte_end":100651,"line_start":354,"line_end":354,"column_start":9,"column_end":13},"name":"col4","qualname":"::graphics::InstanceProperties::col4","value":"[f32; _]","parent":{"krate":0,"index":2488},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2497},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100683,"byte_end":100686,"line_start":355,"line_end":355,"column_start":9,"column_end":12},"name":"src","qualname":"::graphics::InstanceProperties::src","value":"[f32; _]","parent":{"krate":0,"index":2488},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100716,"byte_end":100721,"line_start":356,"line_end":356,"column_start":9,"column_end":14},"name":"color","qualname":"::graphics::InstanceProperties::color","value":"[f32; _]","parent":{"krate":0,"index":2488},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2527},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100824,"byte_end":100831,"line_start":360,"line_end":360,"column_start":14,"column_end":21},"name":"Globals","qualname":"::graphics::Globals","value":"Globals { mvp_matrix }","parent":null,"children":[{"krate":0,"index":2528}],"decl_id":null,"docs":" Internal structure containing global shader state.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"<::gfx::macros::structure::gfx_impl_struct_meta macros>","byte_start":13347789,"byte_end":13347817,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"rustc_copy_clone_marker","span":{"file_name":"<::gfx::macros::structure::gfx_impl_struct_meta macros>","byte_start":13347889,"byte_end":13347966,"line_start":8,"line_end":9,"column_start":22,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":100842,"byte_end":100852,"line_start":361,"line_end":361,"column_start":9,"column_end":19},"name":"mvp_matrix","qualname":"::graphics::Globals::mvp_matrix","value":"[[f32; _]; _]","parent":{"krate":0,"index":2527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2541},"span":{"file_name":"<::gfx::macros::pso::gfx_pipeline macros>","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pipe","qualname":"::graphics::pipe","value":"<::gfx::macros::pso::gfx_pipeline macros>","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2545},{"krate":0,"index":2563},{"krate":0,"index":2578},{"krate":0,"index":2575},{"krate":0,"index":2571},{"krate":0,"index":2581},{"krate":0,"index":2596},{"krate":0,"index":2594},{"krate":0,"index":2591},{"krate":0,"index":2588},{"krate":0,"index":2598},{"krate":0,"index":2613},{"krate":0,"index":2610},{"krate":0,"index":2606},{"krate":0,"index":2552},{"krate":0,"index":2559},{"krate":0,"index":2544}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"<::gfx::macros::pso::gfx_pipeline macros>","byte_start":13349551,"byte_end":13349579,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2565},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101087,"byte_end":101091,"line_start":368,"line_end":368,"column_start":9,"column_end":13},"name":"vbuf","qualname":"::graphics::pipe::Data::vbuf","value":"<gfx::pso::buffer::VertexBufferCommon<graphics::Vertex, gfx::pso::buffer::NonInstanced> as gfx::pso::DataBind<R>>::Data","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101133,"byte_end":101136,"line_start":369,"line_end":369,"column_start":9,"column_end":12},"name":"tex","qualname":"::graphics::pipe::Data::tex","value":"<gfx::TextureSampler<[f32; _]> as gfx::pso::DataBind<R>>::Data","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101191,"byte_end":101198,"line_start":370,"line_end":370,"column_start":9,"column_end":16},"name":"globals","qualname":"::graphics::pipe::Data::globals","value":"<gfx::ConstantBuffer<graphics::Globals> as gfx::pso::DataBind<R>>::Data","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101250,"byte_end":101274,"line_start":371,"line_end":371,"column_start":9,"column_end":33},"name":"rect_instance_properties","qualname":"::graphics::pipe::Data::rect_instance_properties","value":"<gfx::pso::buffer::VertexBufferCommon<graphics::InstanceProperties, gfx::pso::buffer::Instanced> as gfx::pso::DataBind<R>>::Data","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2570},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101450,"byte_end":101453,"line_start":374,"line_end":374,"column_start":9,"column_end":12},"name":"out","qualname":"::graphics::pipe::Data::out","value":"<gfx::RawRenderTarget as gfx::pso::DataBind<R>>::Data","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2600},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101087,"byte_end":101091,"line_start":368,"line_end":368,"column_start":9,"column_end":13},"name":"vbuf","qualname":"::graphics::pipe::Init::vbuf","value":"<gfx::pso::buffer::VertexBufferCommon<graphics::Vertex, gfx::pso::buffer::NonInstanced> as gfx::pso::DataLink<'a>>::Init","parent":{"krate":0,"index":2598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2601},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101133,"byte_end":101136,"line_start":369,"line_end":369,"column_start":9,"column_end":12},"name":"tex","qualname":"::graphics::pipe::Init::tex","value":"<gfx::TextureSampler<[f32; _]> as gfx::pso::DataLink<'a>>::Init","parent":{"krate":0,"index":2598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101191,"byte_end":101198,"line_start":370,"line_end":370,"column_start":9,"column_end":16},"name":"globals","qualname":"::graphics::pipe::Init::globals","value":"<gfx::ConstantBuffer<graphics::Globals> as gfx::pso::DataLink<'a>>::Init","parent":{"krate":0,"index":2598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2604},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101250,"byte_end":101274,"line_start":371,"line_end":371,"column_start":9,"column_end":33},"name":"rect_instance_properties","qualname":"::graphics::pipe::Init::rect_instance_properties","value":"<gfx::pso::buffer::VertexBufferCommon<graphics::InstanceProperties, gfx::pso::buffer::Instanced> as gfx::pso::DataLink<'a>>::Init","parent":{"krate":0,"index":2598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101450,"byte_end":101453,"line_start":374,"line_end":374,"column_start":9,"column_end":12},"name":"out","qualname":"::graphics::pipe::Init::out","value":"<gfx::RawRenderTarget as gfx::pso::DataLink<'a>>::Init","parent":{"krate":0,"index":2598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":104284,"byte_end":104289,"line_start":468,"line_end":468,"column_start":8,"column_end":13},"name":"clear","qualname":"::graphics::clear","value":"fn (ctx: &mut Context, color: Color) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the screen to the background color.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":104648,"byte_end":104652,"line_start":477,"line_end":477,"column_start":8,"column_end":12},"name":"draw","qualname":"::graphics::draw","value":"fn <D, T> (ctx: &mut Context, drawable: &D, params: T) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Draws the given `Drawable` object to the screen by calling its\n [`draw()`](trait.Drawable.html#tymethod.draw) method.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":105102,"byte_end":105109,"line_start":491,"line_end":491,"column_start":8,"column_end":15},"name":"present","qualname":"::graphics::present","value":"fn (ctx: &mut Context) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tells the graphics system to actually put everything on the screen.\n Call this at the end of your [`EventHandler`](../event/trait.EventHandler.html)'s\n [`draw()`](../event/trait.EventHandler.html#tymethod.draw) method.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":105728,"byte_end":105738,"line_start":506,"line_end":506,"column_start":8,"column_end":18},"name":"screenshot","qualname":"::graphics::screenshot","value":"fn (ctx: &mut Context) -> GameResult<Image>","parent":null,"children":[],"decl_id":null,"docs":" Take a screenshot by outputting the current render surface\n (screen or selected canvas) to an `Image`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":108064,"byte_end":108078,"line_start":582,"line_end":582,"column_start":8,"column_end":22},"name":"default_filter","qualname":"::graphics::default_filter","value":"fn (ctx: &Context) -> FilterMode","parent":null,"children":[],"decl_id":null,"docs":" Get the default filter mode for new images.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":108375,"byte_end":108388,"line_start":590,"line_end":590,"column_start":8,"column_end":21},"name":"renderer_info","qualname":"::graphics::renderer_info","value":"fn (ctx: &Context) -> GameResult<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a string that tells a little about the obtained rendering mode.\n It is supposed to be human-readable and will change; do not try to parse\n information out of it!\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":108984,"byte_end":109002,"line_start":606,"line_end":606,"column_start":8,"column_end":26},"name":"screen_coordinates","qualname":"::graphics::screen_coordinates","value":"fn (ctx: &Context) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a rectangle defining the coordinate system of the screen.\n It will be `Rect { x: left, y: top, w: width, h: height }`","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":109194,"byte_end":109212,"line_start":613,"line_end":613,"column_start":8,"column_end":26},"name":"set_default_filter","qualname":"::graphics::set_default_filter","value":"fn (ctx: &mut Context, mode: FilterMode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the default filter mode used to scale images.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":110162,"byte_end":110184,"line_start":633,"line_end":633,"column_start":8,"column_end":30},"name":"set_screen_coordinates","qualname":"::graphics::set_screen_coordinates","value":"fn (context: &mut Context, rect: Rect) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the bounds of the screen viewport.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1148},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":110648,"byte_end":110662,"line_start":646,"line_end":646,"column_start":8,"column_end":22},"name":"set_projection","qualname":"::graphics::set_projection","value":"fn <M> (context: &mut Context, proj: M) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the raw projection matrix to the given homogeneous\n transformation matrix.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":111130,"byte_end":111144,"line_start":660,"line_end":660,"column_start":8,"column_end":22},"name":"mul_projection","qualname":"::graphics::mul_projection","value":"fn <M> (context: &mut Context, transform: M) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Premultiplies the given transformation matrix with the current projection matrix","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":111465,"byte_end":111475,"line_start":671,"line_end":671,"column_start":8,"column_end":18},"name":"projection","qualname":"::graphics::projection","value":"fn (context: &Context) -> mint::ColumnMatrix4<f32>","parent":null,"children":[],"decl_id":null,"docs":" Gets a copy of the context's raw projection matrix\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":112502,"byte_end":112516,"line_start":698,"line_end":698,"column_start":8,"column_end":22},"name":"push_transform","qualname":"::graphics::push_transform","value":"fn <M> (context: &mut Context, transform: Option<M>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes a homogeneous transform matrix to the top of the transform\n (model) matrix stack of the `Context`. If no matrix is given, then\n pushes a copy of the current transform matrix to the top of the stack.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":113275,"byte_end":113288,"line_start":721,"line_end":721,"column_start":8,"column_end":21},"name":"pop_transform","qualname":"::graphics::pop_transform","value":"fn (context: &mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pops the transform matrix off the top of the transform\n (model) matrix stack of the `Context`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":114123,"byte_end":114136,"line_start":746,"line_end":746,"column_start":8,"column_end":21},"name":"set_transform","qualname":"::graphics::set_transform","value":"fn <M> (context: &mut Context, transform: M) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the current model transformation to the given homogeneous\n transformation matrix.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":114419,"byte_end":114428,"line_start":756,"line_end":756,"column_start":8,"column_end":17},"name":"transform","qualname":"::graphics::transform","value":"fn (context: &Context) -> mint::ColumnMatrix4<f32>","parent":null,"children":[],"decl_id":null,"docs":" Gets a copy of the context's current transform matrix\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":115335,"byte_end":115348,"line_start":782,"line_end":782,"column_start":8,"column_end":21},"name":"mul_transform","qualname":"::graphics::mul_transform","value":"fn <M> (context: &mut Context, transform: M) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Premultiplies the given transform with the current model transform.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":115870,"byte_end":115876,"line_start":797,"line_end":797,"column_start":8,"column_end":14},"name":"origin","qualname":"::graphics::origin","value":"fn (context: &mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the current model transform to the origin transform (no transformation)","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":116187,"byte_end":116208,"line_start":805,"line_end":805,"column_start":8,"column_end":29},"name":"apply_transformations","qualname":"::graphics::apply_transformations","value":"fn (context: &mut Context) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Calculates the new total transformation (Model-View-Projection) matrix\n based on the matrices at the top of the transform and view matrix stacks\n and sends it to the graphics card.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":116424,"byte_end":116438,"line_start":812,"line_end":812,"column_start":8,"column_end":22},"name":"set_blend_mode","qualname":"::graphics::set_blend_mode","value":"fn (ctx: &mut Context, mode: BlendMode) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the blend mode of the currently active shader program\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":116990,"byte_end":116998,"line_start":825,"line_end":825,"column_start":8,"column_end":16},"name":"set_mode","qualname":"::graphics::set_mode","value":"fn (context: &mut Context, mode: WindowMode) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the window mode, such as the size and other properties.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":117255,"byte_end":117269,"line_start":834,"line_end":834,"column_start":8,"column_end":22},"name":"set_fullscreen","qualname":"::graphics::set_fullscreen","value":"fn (context: &mut Context, fullscreen: conf::FullscreenType) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the window to fullscreen or back.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":117557,"byte_end":117574,"line_start":841,"line_end":841,"column_start":8,"column_end":25},"name":"set_drawable_size","qualname":"::graphics::set_drawable_size","value":"fn (context: &mut Context, width: f32, height: f32) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the window size/resolution to the specified width and height.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":117849,"byte_end":117862,"line_start":849,"line_end":849,"column_start":8,"column_end":21},"name":"set_resizable","qualname":"::graphics::set_resizable","value":"fn (context: &mut Context, resizable: bool) -> GameResult","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the window is resizable.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":118081,"byte_end":118096,"line_start":856,"line_end":856,"column_start":8,"column_end":23},"name":"set_window_icon","qualname":"::graphics::set_window_icon","value":"fn <P> (context: &mut Context, path: Option<P>) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the window icon.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":118468,"byte_end":118484,"line_start":869,"line_end":869,"column_start":8,"column_end":24},"name":"set_window_title","qualname":"::graphics::set_window_title","value":"fn (context: &Context, title: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the window title.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":118802,"byte_end":118808,"line_start":877,"line_end":877,"column_start":8,"column_end":14},"name":"window","qualname":"::graphics::window","value":"fn (context: &Context) -> &glutin::Window","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the Glutin window.\n Ideally you should not need to use this because ggez\n would provide all the functions you need without having\n to dip into Glutin itself.  But life isn't always ideal.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":119061,"byte_end":119065,"line_start":885,"line_end":885,"column_start":8,"column_end":12},"name":"size","qualname":"::graphics::size","value":"fn (context: &Context) -> (f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the window in pixels as (width, height),\n including borders, titlebar, etc.\n Returns zeros if the window doesn't exist.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":119434,"byte_end":119447,"line_start":895,"line_end":895,"column_start":8,"column_end":21},"name":"drawable_size","qualname":"::graphics::drawable_size","value":"fn (context: &Context) -> (f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the window's underlying drawable in pixels as (width, height).\n Returns zeros if window doesn't exist.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":120008,"byte_end":120019,"line_start":910,"line_end":910,"column_start":8,"column_end":19},"name":"gfx_objects","qualname":"::graphics::gfx_objects","value":"fn (context: &mut Context) -> (&mut <GlBackendSpec as BackendSpec>::Factory,\n &mut <GlBackendSpec as BackendSpec>::Device,\n &mut gfx::Encoder<<GlBackendSpec as BackendSpec>::Resources,\n                   <GlBackendSpec as BackendSpec>::CommandBuffer>,\n gfx::handle::RawDepthStencilView<<GlBackendSpec as BackendSpec>::Resources>,\n gfx::handle::RawRenderTargetView<<GlBackendSpec as BackendSpec>::Resources>)","parent":null,"children":[],"decl_id":null,"docs":" Returns raw `gfx-rs` state objects, if you want to use `gfx-rs` to write\n your own graphics pipeline then this gets you the interfaces you need\n to do so.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":120774,"byte_end":120782,"line_start":932,"line_end":932,"column_start":11,"column_end":19},"name":"Drawable","qualname":"::graphics::Drawable","value":"Drawable","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182}],"decl_id":null,"docs":" All types that can be drawn on the screen implement the `Drawable` trait.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":120846,"byte_end":120850,"line_start":934,"line_end":934,"column_start":8,"column_end":12},"name":"draw","qualname":"::graphics::Drawable::draw","value":"fn (&self, ctx: &mut Context, param: DrawParam) -> GameResult","parent":{"krate":0,"index":1178},"children":[],"decl_id":null,"docs":" Draws the drawable onto the rendering target.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":121106,"byte_end":121116,"line_start":940,"line_end":940,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::graphics::Drawable::dimensions","value":"fn (&self, ctx: &mut Context) -> Option<Rect>","parent":{"krate":0,"index":1178},"children":[],"decl_id":null,"docs":" Returns a bounding box in the form of a `Rect`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":121422,"byte_end":121436,"line_start":946,"line_end":946,"column_start":8,"column_end":22},"name":"set_blend_mode","qualname":"::graphics::Drawable::set_blend_mode","value":"fn (&mut self, mode: Option<BlendMode>) -> ()","parent":{"krate":0,"index":1178},"children":[],"decl_id":null,"docs":" Sets the blend mode to be used when drawing this drawable.\n This overrides the general [`graphics::set_blend_mode()`](fn.set_blend_mode.html).\n If `None` is set, defers to the blend mode set by\n `graphics::set_blend_mode()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":121549,"byte_end":121559,"line_start":949,"line_end":949,"column_start":8,"column_end":18},"name":"blend_mode","qualname":"::graphics::Drawable::blend_mode","value":"fn (&self) -> Option<BlendMode>","parent":{"krate":0,"index":1178},"children":[],"decl_id":null,"docs":" Gets the blend mode to be used when drawing this drawable.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":121634,"byte_end":121648,"line_start":953,"line_end":953,"column_start":8,"column_end":22},"name":"transform_rect","qualname":"::graphics::transform_rect","value":"fn (rect: Rect, param: DrawParam) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Applies `DrawParam` to `Rect`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"input","qualname":"::input","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mod.rs","parent":null,"children":[{"krate":0,"index":1185},{"krate":0,"index":1210},{"krate":0,"index":1233}],"decl_id":null,"docs":" Input handling modules for keyboard, mouse and gamepad.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gamepad","qualname":"::input::gamepad","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":2616},{"krate":0,"index":2631},{"krate":0,"index":2629},{"krate":0,"index":2627},{"krate":0,"index":2624},{"krate":0,"index":2622},{"krate":0,"index":2619},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":2632},{"krate":0,"index":2638},{"krate":0,"index":2636},{"krate":0,"index":2635},{"krate":0,"index":2633},{"krate":0,"index":1206},{"krate":0,"index":1209}],"decl_id":null,"docs":" Gamepad utility functions.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268427,"byte_end":268436,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"GamepadId","qualname":"::input::gamepad::GamepadId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a particular GamePad\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268416,"byte_end":268466,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268416,"byte_end":268466,"line_start":12,"line_end":12,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268592,"byte_end":268606,"line_start":18,"line_end":18,"column_start":11,"column_end":25},"name":"GamepadContext","qualname":"::input::gamepad::GamepadContext","value":"GamepadContext","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196}],"decl_id":null,"docs":" Trait object defining a gamepad/joystick context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268649,"byte_end":268659,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"next_event","qualname":"::input::gamepad::GamepadContext::next_event","value":"fn (&mut self) -> Option<Event>","parent":{"krate":0,"index":1194},"children":[],"decl_id":null,"docs":" Returns a gamepad event.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268750,"byte_end":268757,"line_start":23,"line_end":23,"column_start":8,"column_end":15},"name":"gamepad","qualname":"::input::gamepad::GamepadContext::gamepad","value":"fn (&self, id: GamepadId) -> Gamepad","parent":{"krate":0,"index":1194},"children":[],"decl_id":null,"docs":" returns the `Gamepad` associated with an id.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268865,"byte_end":268884,"line_start":27,"line_end":27,"column_start":12,"column_end":31},"name":"GilrsGamepadContext","qualname":"::input::gamepad::GilrsGamepadContext","value":"GilrsGamepadContext {  }","parent":null,"children":[{"krate":0,"index":1198}],"decl_id":null,"docs":" A structure that contains gamepad state using `gilrs`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":270039,"byte_end":270046,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"gamepad","qualname":"::input::gamepad::gamepad","value":"fn (ctx: &Context, id: GamepadId) -> Gamepad","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Gamepad` associated with an `id`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"keyboard","qualname":"::input::keyboard","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":2640},{"krate":0,"index":2661},{"krate":0,"index":2660},{"krate":0,"index":2657},{"krate":0,"index":2655},{"krate":0,"index":2653},{"krate":0,"index":2647},{"krate":0,"index":2645},{"krate":0,"index":2642},{"krate":0,"index":2663},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2676},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2701},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2711},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":1215},{"krate":0,"index":2745},{"krate":0,"index":2752},{"krate":0,"index":2750},{"krate":0,"index":1217},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"decl_id":null,"docs":" Keyboard utility functions; allow querying state of keyboard keys and modifiers.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":273463,"byte_end":273470,"line_start":78,"line_end":78,"column_start":16,"column_end":23},"name":"KeyMods","qualname":"::input::keyboard::KeyMods","value":"KeyMods {  }","parent":null,"children":[{"krate":0,"index":2641}],"decl_id":null,"docs":" Bitflags describing the state of keyboard modifiers, such as `Control` or `Shift`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":13355485,"byte_end":13356580,"line_start":7,"line_end":9,"column_start":25,"column_end":39}},{"value":"rustc_copy_clone_marker","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":13355485,"byte_end":13356580,"line_start":7,"line_end":9,"column_start":25,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":273624,"byte_end":273628,"line_start":81,"line_end":81,"column_start":15,"column_end":19},"name":"NONE","qualname":"::input::keyboard::KeyMods::NONE","value":"KeyMods","parent":{"krate":0,"index":2680},"children":[],"decl_id":null,"docs":" No modifiers; equivalent to `KeyMods::default()` and\n [`KeyMods::empty()`](struct.KeyMods.html#method.empty).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":273696,"byte_end":273701,"line_start":83,"line_end":83,"column_start":15,"column_end":20},"name":"SHIFT","qualname":"::input::keyboard::KeyMods::SHIFT","value":"KeyMods","parent":{"krate":0,"index":2680},"children":[],"decl_id":null,"docs":" Left or right Shift key.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":273770,"byte_end":273774,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"name":"CTRL","qualname":"::input::keyboard::KeyMods::CTRL","value":"KeyMods","parent":{"krate":0,"index":2680},"children":[],"decl_id":null,"docs":" Left or right Control key.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":273840,"byte_end":273843,"line_start":87,"line_end":87,"column_start":15,"column_end":18},"name":"ALT","qualname":"::input::keyboard::KeyMods::ALT","value":"KeyMods","parent":{"krate":0,"index":2680},"children":[],"decl_id":null,"docs":" Left or right Alt key.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":273925,"byte_end":273929,"line_start":89,"line_end":89,"column_start":15,"column_end":19},"name":"LOGO","qualname":"::input::keyboard::KeyMods::LOGO","value":"KeyMods","parent":{"krate":0,"index":2680},"children":[],"decl_id":null,"docs":" Left or right Win/Cmd/equivalent key.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":274541,"byte_end":274556,"line_start":115,"line_end":115,"column_start":12,"column_end":27},"name":"KeyboardContext","qualname":"::input::keyboard::KeyboardContext","value":"KeyboardContext {  }","parent":null,"children":[{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749}],"decl_id":null,"docs":" Tracks held down keyboard keys, active keyboard modifiers,\n and figures out if the system is sending repeat keystrokes.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":277967,"byte_end":277981,"line_start":212,"line_end":212,"column_start":8,"column_end":22},"name":"is_key_pressed","qualname":"::input::keyboard::is_key_pressed","value":"fn (ctx: &Context, key: KeyCode) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a key is currently pressed down.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":278196,"byte_end":278211,"line_start":218,"line_end":218,"column_start":8,"column_end":23},"name":"is_key_repeated","qualname":"::input::keyboard::is_key_repeated","value":"fn (ctx: &Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the last keystroke sent by the system is repeated,\n like when a key is held down for a period of time.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":278352,"byte_end":278364,"line_start":223,"line_end":223,"column_start":8,"column_end":20},"name":"pressed_keys","qualname":"::input::keyboard::pressed_keys","value":"fn (ctx: &Context) -> &HashSet<KeyCode>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set of currently pressed keys.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":278509,"byte_end":278522,"line_start":228,"line_end":228,"column_start":8,"column_end":21},"name":"is_mod_active","qualname":"::input::keyboard::is_mod_active","value":"fn (ctx: &Context, keymods: KeyMods) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if keyboard modifier (or several) is active.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":278682,"byte_end":278693,"line_start":233,"line_end":233,"column_start":8,"column_end":19},"name":"active_mods","qualname":"::input::keyboard::active_mods","value":"fn (ctx: &Context) -> KeyMods","parent":null,"children":[],"decl_id":null,"docs":" Returns currently active keyboard modifiers.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mouse","qualname":"::input::mouse","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":2754},{"krate":0,"index":2763},{"krate":0,"index":2761},{"krate":0,"index":1244},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1264}],"decl_id":null,"docs":" Mouse utility functions.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2754},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":285055,"byte_end":285067,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"MouseContext","qualname":"::input::mouse::MouseContext","value":"MouseContext {  }","parent":null,"children":[{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760}],"decl_id":null,"docs":" Stores state information for the mouse.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":286211,"byte_end":286222,"line_start":59,"line_end":59,"column_start":8,"column_end":19},"name":"cursor_type","qualname":"::input::mouse::cursor_type","value":"fn (ctx: &Context) -> MouseCursor","parent":null,"children":[],"decl_id":null,"docs":" Returns the current mouse cursor type of the window.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":286349,"byte_end":286364,"line_start":64,"line_end":64,"column_start":8,"column_end":23},"name":"set_cursor_type","qualname":"::input::mouse::set_cursor_type","value":"fn (ctx: &mut Context, cursor_type: MouseCursor) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the mouse cursor type of the window.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":286591,"byte_end":286605,"line_start":70,"line_end":70,"column_start":8,"column_end":22},"name":"cursor_grabbed","qualname":"::input::mouse::cursor_grabbed","value":"fn (ctx: &Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether or not the mouse is grabbed (confined to the window)\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":286747,"byte_end":286765,"line_start":75,"line_end":75,"column_start":8,"column_end":26},"name":"set_cursor_grabbed","qualname":"::input::mouse::set_cursor_grabbed","value":"fn (ctx: &mut Context, grabbed: bool) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not the mouse is grabbed (confined to the window)\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":287049,"byte_end":287062,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"cursor_hidden","qualname":"::input::mouse::cursor_hidden","value":"fn (ctx: &Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not the mouse is hidden (invisible)\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":287190,"byte_end":287207,"line_start":88,"line_end":88,"column_start":8,"column_end":25},"name":"set_cursor_hidden","qualname":"::input::mouse::set_cursor_hidden","value":"fn (ctx: &mut Context, hidden: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not the mouse is hidden (invisible).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":287509,"byte_end":287517,"line_start":96,"line_end":96,"column_start":8,"column_end":16},"name":"position","qualname":"::input::mouse::position","value":"fn (ctx: &Context) -> mint::Point2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Get the current position of the mouse cursor, in pixels.\n Complement to [`set_position()`](fn.set_position.html).\n Uses strictly window-only coordinates.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":287713,"byte_end":287725,"line_start":102,"line_end":102,"column_start":8,"column_end":20},"name":"set_position","qualname":"::input::mouse::set_position","value":"fn <P> (ctx: &mut Context, point: P) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the current position of the mouse cursor, in pixels.\n Uses strictly window-only coordinates.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":288257,"byte_end":288262,"line_start":117,"line_end":117,"column_start":8,"column_end":13},"name":"delta","qualname":"::input::mouse::delta","value":"fn (ctx: &Context) -> mint::Point2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Get the distance the cursor was moved during last frame, in pixels.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":288413,"byte_end":288427,"line_start":122,"line_end":122,"column_start":8,"column_end":22},"name":"button_pressed","qualname":"::input::mouse::button_pressed","value":"fn (ctx: &Context, button: MouseButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the given mouse button is pressed.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":2765},{"krate":0,"index":2774},{"krate":0,"index":2771},{"krate":0,"index":1271},{"krate":0,"index":2777},{"krate":0,"index":2783},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294}],"decl_id":null,"docs":" Timing and measurement functions.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":291404,"byte_end":291415,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"TimeContext","qualname":"::timer::TimeContext","value":"TimeContext {  }","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782}],"decl_id":null,"docs":" A structure that contains our time-tracking state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":291789,"byte_end":291792,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<TimeContext>::new","value":"fn () -> TimeContext","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TimeContext` and initializes the start to this instant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":292544,"byte_end":292548,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"tick","qualname":"<TimeContext>::tick","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update the state of the `TimeContext` to record that\n another frame has taken place.  Necessary for the FPS\n tracking and [`check_update_time()`](fn.check_update_time.html)\n functions to work.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":293053,"byte_end":293058,"line_start":141,"line_end":141,"column_start":8,"column_end":13},"name":"delta","qualname":"::timer::delta","value":"fn (ctx: &Context) -> time::Duration","parent":null,"children":[],"decl_id":null,"docs":" Get the time between the start of the last frame and the current one;\n in other words, the length of the last frame.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":293246,"byte_end":293259,"line_start":148,"line_end":148,"column_start":8,"column_end":21},"name":"average_delta","qualname":"::timer::average_delta","value":"fn (ctx: &Context) -> time::Duration","parent":null,"children":[],"decl_id":null,"docs":" Gets the average time of a frame, averaged\n over the last 200 frames.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":293904,"byte_end":293919,"line_start":165,"line_end":165,"column_start":8,"column_end":23},"name":"duration_to_f64","qualname":"::timer::duration_to_f64","value":"fn (d: time::Duration) -> f64","parent":null,"children":[],"decl_id":null,"docs":" A convenience function to convert a Rust `Duration` type\n to a (less precise but more useful) `f64`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":294228,"byte_end":294243,"line_start":175,"line_end":175,"column_start":8,"column_end":23},"name":"f64_to_duration","qualname":"::timer::f64_to_duration","value":"fn (t: f64) -> time::Duration","parent":null,"children":[],"decl_id":null,"docs":" A convenience function to create a Rust `Duration` type\n from a (less precise but more useful) `f64`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":294800,"byte_end":294803,"line_start":193,"line_end":193,"column_start":8,"column_end":11},"name":"fps","qualname":"::timer::fps","value":"fn (ctx: &Context) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Gets the FPS of the game, averaged over the last\n 200 frames.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":295070,"byte_end":295086,"line_start":201,"line_end":201,"column_start":8,"column_end":24},"name":"time_since_start","qualname":"::timer::time_since_start","value":"fn (ctx: &Context) -> time::Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the time since the game was initialized,\n as reported by the system clock.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1290},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":296381,"byte_end":296398,"line_start":236,"line_end":236,"column_start":8,"column_end":25},"name":"check_update_time","qualname":"::timer::check_update_time","value":"fn (ctx: &mut Context, target_fps: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether or not the desired amount of time has elapsed\n since the last frame.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":297375,"byte_end":297396,"line_start":261,"line_end":261,"column_start":8,"column_end":29},"name":"remaining_update_time","qualname":"::timer::remaining_update_time","value":"fn (ctx: &mut Context) -> time::Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the fractional amount of a frame not consumed\n by  [`check_update_time()`](fn.check_update_time.html).\n For example, if the desired\n update frame time is 40 ms (25 fps), and 45 ms have\n passed since the last frame, [`check_update_time()`](fn.check_update_time.html)\n will return `true` and `remaining_update_time()` will\n return 5 ms -- the amount of time \"overflowing\" from one\n frame to the next.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":297698,"byte_end":297703,"line_start":268,"line_end":268,"column_start":8,"column_end":13},"name":"sleep","qualname":"::timer::sleep","value":"fn (duration: time::Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pauses the current thread for the target duration.\n Just calls [`std::thread::sleep()`](https://doc.rust-lang.org/std/thread/fn.sleep.html)\n so it's as accurate as that is (which is usually not very).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":297957,"byte_end":297966,"line_start":276,"line_end":276,"column_start":8,"column_end":17},"name":"yield_now","qualname":"::timer::yield_now","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Yields the current timeslice to the OS.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":298212,"byte_end":298217,"line_start":284,"line_end":284,"column_start":8,"column_end":13},"name":"ticks","qualname":"::timer::ticks","value":"fn (ctx: &Context) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of times the game has gone through its event loop.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299252,"byte_end":299257,"line_start":30,"line_end":30,"column_start":11,"column_end":16},"name":"VFile","qualname":"::vfs::VFile","value":"VFile: Read + Write + Seek + Debug","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299613,"byte_end":299624,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::vfs::OpenOptions","value":"OpenOptions {  }","parent":null,"children":[{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790}],"decl_id":null,"docs":" Options for opening files","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299540,"byte_end":299551,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299602,"byte_end":299717,"line_start":41,"line_end":47,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299779,"byte_end":299782,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"fn () -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299872,"byte_end":299876,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"fn (mut self, read: bool) -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Open for reading\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299998,"byte_end":300003,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"fn (mut self, write: bool) -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Open for writing\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":300152,"byte_end":300158,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"fn (mut self, create: bool) -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Create the file if it does not exist yet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":300299,"byte_end":300305,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"fn (mut self, append: bool) -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Append at the end of the file\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":300459,"byte_end":300467,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"fn (mut self, truncate: bool) -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Truncate the file to 0 bytes after opening\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":4913,"byte_end":4930,"line_start":44,"line_end":44,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":5314,"byte_end":5331,"line_start":56,"line_end":56,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":5425,"byte_end":5442,"line_start":62,"line_end":62,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":5840,"byte_end":5856,"line_start":74,"line_end":74,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":6091,"byte_end":6100,"line_start":85,"line_end":85,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7116,"byte_end":7125,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7235,"byte_end":7244,"line_start":124,"line_end":124,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7347,"byte_end":7356,"line_start":130,"line_end":130,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7457,"byte_end":7466,"line_start":136,"line_end":136,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":9886,"byte_end":9897,"line_start":219,"line_end":219,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":12353,"byte_end":12359,"line_start":286,"line_end":286,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":13196,"byte_end":13202,"line_start":310,"line_end":310,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":16937,"byte_end":16943,"line_start":428,"line_end":428,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":17370,"byte_end":17383,"line_start":444,"line_end":444,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":18516,"byte_end":18529,"line_start":478,"line_end":478,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":22623,"byte_end":22636,"line_start":612,"line_end":612,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":23276,"byte_end":23289,"line_start":634,"line_end":634,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26357,"byte_end":26367,"line_start":89,"line_end":89,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28960,"byte_end":28971,"line_start":175,"line_end":175,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":30951,"byte_end":30958,"line_start":251,"line_end":251,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":32177,"byte_end":32187,"line_start":300,"line_end":300,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":33521,"byte_end":33531,"line_start":351,"line_end":351,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":34661,"byte_end":34665,"line_start":393,"line_end":393,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":39064,"byte_end":39071,"line_start":69,"line_end":69,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":39190,"byte_end":39197,"line_start":75,"line_end":75,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":44318,"byte_end":44332,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":48356,"byte_end":48363,"line_start":327,"line_end":327,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":51100,"byte_end":51109,"line_start":55,"line_end":55,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":51735,"byte_end":51744,"line_start":71,"line_end":71,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":52192,"byte_end":52201,"line_start":85,"line_end":85,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":52330,"byte_end":52339,"line_start":91,"line_end":91,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":52542,"byte_end":52551,"line_start":99,"line_end":99,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":52773,"byte_end":52782,"line_start":106,"line_end":106,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":52984,"byte_end":52993,"line_start":113,"line_end":113,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":53182,"byte_end":53191,"line_start":120,"line_end":120,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":53428,"byte_end":53437,"line_start":127,"line_end":127,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":53837,"byte_end":53846,"line_start":139,"line_end":139,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":54052,"byte_end":54061,"line_start":146,"line_end":146,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":54301,"byte_end":54310,"line_start":157,"line_end":157,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":54531,"byte_end":54540,"line_start":164,"line_end":164,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":54692,"byte_end":54701,"line_start":170,"line_end":170,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":54846,"byte_end":54855,"line_start":176,"line_end":176,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":55000,"byte_end":55009,"line_start":182,"line_end":182,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":55260,"byte_end":55269,"line_start":192,"line_end":192,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":55417,"byte_end":55426,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":55689,"byte_end":55698,"line_start":206,"line_end":206,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":55851,"byte_end":55860,"line_start":212,"line_end":212,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":56023,"byte_end":56032,"line_start":218,"line_end":218,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":56240,"byte_end":56249,"line_start":225,"line_end":225,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":56595,"byte_end":56604,"line_start":235,"line_end":235,"column_start":80,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":70537,"byte_end":70541,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":70828,"byte_end":70832,"line_start":72,"line_end":72,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":71010,"byte_end":71014,"line_start":80,"line_end":80,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":71310,"byte_end":71320,"line_start":94,"line_end":94,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":126065,"byte_end":126071,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":129054,"byte_end":129060,"line_start":130,"line_end":130,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","byte_start":132256,"byte_end":132278,"line_start":61,"line_end":61,"column_start":24,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","byte_start":132574,"byte_end":132596,"line_start":73,"line_end":73,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","byte_start":141805,"byte_end":141827,"line_start":340,"line_end":340,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":152844,"byte_end":152853,"line_start":43,"line_end":43,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":153167,"byte_end":153176,"line_start":56,"line_end":56,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":155705,"byte_end":155714,"line_start":135,"line_end":135,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":155924,"byte_end":155933,"line_start":145,"line_end":145,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":156184,"byte_end":156193,"line_start":155,"line_end":155,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":156528,"byte_end":156537,"line_start":168,"line_end":168,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":156924,"byte_end":156933,"line_start":182,"line_end":182,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":158190,"byte_end":158203,"line_start":216,"line_end":216,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":158388,"byte_end":158401,"line_start":226,"line_end":226,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":158633,"byte_end":158646,"line_start":237,"line_end":237,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":160009,"byte_end":160021,"line_start":32,"line_end":32,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":163610,"byte_end":163615,"line_start":133,"line_end":133,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":169601,"byte_end":169606,"line_start":302,"line_end":302,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":169938,"byte_end":169943,"line_start":316,"line_end":316,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":174880,"byte_end":174891,"line_start":70,"line_end":70,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":175030,"byte_end":175041,"line_start":79,"line_end":79,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":186112,"byte_end":186125,"line_start":388,"line_end":388,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":186434,"byte_end":186447,"line_start":398,"line_end":398,"column_start":56,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":187101,"byte_end":187105,"line_start":422,"line_end":422,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":194718,"byte_end":194722,"line_start":629,"line_end":629,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197140,"byte_end":197150,"line_start":34,"line_end":34,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197245,"byte_end":197255,"line_start":40,"line_end":40,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":198673,"byte_end":198678,"line_start":72,"line_end":72,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":201281,"byte_end":201287,"line_start":140,"line_end":140,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":204950,"byte_end":204963,"line_start":266,"line_end":266,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":207460,"byte_end":207466,"line_start":342,"line_end":342,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":208011,"byte_end":208024,"line_start":361,"line_end":361,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":208457,"byte_end":208470,"line_start":377,"line_end":377,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":209386,"byte_end":209399,"line_start":405,"line_end":405,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":210598,"byte_end":210608,"line_start":444,"line_end":444,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":211945,"byte_end":211954,"line_start":488,"line_end":488,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":212450,"byte_end":212459,"line_start":510,"line_end":510,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":216925,"byte_end":216937,"line_start":47,"line_end":47,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":217117,"byte_end":217129,"line_start":58,"line_end":58,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":217787,"byte_end":217799,"line_start":83,"line_end":83,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":217977,"byte_end":217989,"line_start":92,"line_end":92,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":218163,"byte_end":218175,"line_start":101,"line_end":101,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":218348,"byte_end":218360,"line_start":110,"line_end":110,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":218787,"byte_end":218800,"line_start":128,"line_end":128,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":219722,"byte_end":219726,"line_start":156,"line_end":156,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":220175,"byte_end":220179,"line_start":171,"line_end":171,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":227130,"byte_end":227134,"line_start":368,"line_end":368,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":227875,"byte_end":227879,"line_start":394,"line_end":394,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":229064,"byte_end":229068,"line_start":428,"line_end":428,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":240043,"byte_end":240047,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":244401,"byte_end":244405,"line_start":184,"line_end":184,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":244859,"byte_end":244863,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":245422,"byte_end":245426,"line_start":217,"line_end":217,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":246246,"byte_end":246251,"line_start":260,"line_end":260,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":248124,"byte_end":248129,"line_start":319,"line_end":319,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":248532,"byte_end":248537,"line_start":331,"line_end":331,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":248839,"byte_end":248844,"line_start":340,"line_end":340,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":249117,"byte_end":249122,"line_start":348,"line_end":348,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":249440,"byte_end":249445,"line_start":357,"line_end":357,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":250838,"byte_end":250849,"line_start":406,"line_end":406,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":251406,"byte_end":251411,"line_start":427,"line_end":427,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252292,"byte_end":252300,"line_start":462,"line_end":462,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252979,"byte_end":252989,"line_start":485,"line_end":485,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":253192,"byte_end":253204,"line_start":494,"line_end":494,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":261600,"byte_end":261611,"line_start":43,"line_end":43,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":265621,"byte_end":265632,"line_start":156,"line_end":156,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":96068,"byte_end":96081,"line_start":200,"line_end":200,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":96514,"byte_end":96527,"line_start":217,"line_end":217,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101720,"byte_end":101738,"line_start":382,"line_end":382,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":102326,"byte_end":102344,"line_start":400,"line_end":400,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":102904,"byte_end":102916,"line_start":421,"line_end":421,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":103417,"byte_end":103426,"line_start":444,"line_end":444,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268939,"byte_end":268958,"line_start":31,"line_end":31,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":269089,"byte_end":269108,"line_start":37,"line_end":37,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":269267,"byte_end":269286,"line_start":44,"line_end":44,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":269761,"byte_end":269779,"line_start":60,"line_end":60,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":273985,"byte_end":273992,"line_start":93,"line_end":93,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":274967,"byte_end":274982,"line_start":127,"line_end":127,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":277839,"byte_end":277854,"line_start":205,"line_end":205,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":285259,"byte_end":285271,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":286076,"byte_end":286088,"line_start":52,"line_end":52,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":290034,"byte_end":290043,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":291685,"byte_end":291696,"line_start":102,"line_end":102,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":292852,"byte_end":292863,"line_start":133,"line_end":133,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299309,"byte_end":299310,"line_start":32,"line_end":32,"column_start":19,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299724,"byte_end":299735,"line_start":49,"line_end":49,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":303382,"byte_end":303398,"line_start":167,"line_end":167,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":304855,"byte_end":304865,"line_start":216,"line_end":216,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":306127,"byte_end":306137,"line_start":257,"line_end":257,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":306296,"byte_end":306306,"line_start":263,"line_end":263,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":310791,"byte_end":310800,"line_start":397,"line_end":397,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":311383,"byte_end":311392,"line_start":422,"line_end":422,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":314906,"byte_end":314916,"line_start":538,"line_end":538,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":316236,"byte_end":316241,"line_start":578,"line_end":578,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":317874,"byte_end":317888,"line_start":630,"line_end":630,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":318120,"byte_end":318134,"line_start":640,"line_end":640,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":318257,"byte_end":318271,"line_start":646,"line_end":646,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":318473,"byte_end":318487,"line_start":656,"line_end":656,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":318607,"byte_end":318621,"line_start":662,"line_end":662,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":318855,"byte_end":318866,"line_start":675,"line_end":675,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":319635,"byte_end":319646,"line_start":697,"line_end":697,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":319831,"byte_end":319836,"line_start":709,"line_end":709,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3442,"byte_end":3447,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3457,"byte_end":3461,"line_start":106,"line_end":106,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":156}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3484,"byte_end":3489,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":247}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3499,"byte_end":3504,"line_start":109,"line_end":109,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":312}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3514,"byte_end":3524,"line_start":110,"line_end":110,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":361}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3534,"byte_end":3542,"line_start":111,"line_end":111,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":454}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":90020,"byte_end":90031,"line_start":53,"line_end":53,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1040}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101072,"byte_end":101076,"line_start":367,"line_end":367,"column_start":14,"column_end":18},"ref_id":{"krate":0,"index":2541}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3552,"byte_end":3557,"line_start":112,"line_end":112,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1184}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mod.rs","byte_start":267988,"byte_end":267995,"line_start":2,"line_end":2,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1185}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mod.rs","byte_start":268005,"byte_end":268013,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1210}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mod.rs","byte_start":268023,"byte_end":268028,"line_start":4,"line_end":4,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1233}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src/lib.rs","byte_start":3567,"byte_end":3572,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1265}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":4913,"byte_end":4930,"line_start":44,"line_end":44,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":38},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":5314,"byte_end":5331,"line_start":56,"line_end":56,"column_start":23,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":38},"to":{"krate":0,"index":36}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":5425,"byte_end":5442,"line_start":62,"line_end":62,"column_start":21,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":38},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":5840,"byte_end":5856,"line_start":74,"line_end":74,"column_start":23,"column_end":39},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1434},"to":{"krate":0,"index":36}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":6091,"byte_end":6100,"line_start":85,"line_end":85,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7116,"byte_end":7125,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1443},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7235,"byte_end":7244,"line_start":124,"line_end":124,"column_start":24,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1443},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7347,"byte_end":7356,"line_start":130,"line_end":130,"column_start":26,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1443},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":7457,"byte_end":7466,"line_start":136,"line_end":136,"column_start":22,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1443},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":9886,"byte_end":9897,"line_start":219,"line_end":219,"column_start":6,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":12353,"byte_end":12359,"line_start":286,"line_end":286,"column_start":6,"column_end":12},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":13196,"byte_end":13202,"line_start":310,"line_end":310,"column_start":22,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":90},"to":{"krate":0,"index":64}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":16937,"byte_end":16943,"line_start":428,"line_end":428,"column_start":21,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":90},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":17370,"byte_end":17383,"line_start":444,"line_end":444,"column_start":6,"column_end":19},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":18516,"byte_end":18529,"line_start":478,"line_end":478,"column_start":22,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":119},"to":{"krate":0,"index":64}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":22623,"byte_end":22636,"line_start":612,"line_end":612,"column_start":6,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\audio.rs","byte_start":23276,"byte_end":23289,"line_start":634,"line_end":634,"column_start":21,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":119},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":26357,"byte_end":26367,"line_start":89,"line_end":89,"column_start":6,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":28960,"byte_end":28971,"line_start":175,"line_end":175,"column_start":6,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":30951,"byte_end":30958,"line_start":251,"line_end":251,"column_start":6,"column_end":13},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":32177,"byte_end":32187,"line_start":300,"line_end":300,"column_start":6,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":33521,"byte_end":33531,"line_start":351,"line_end":351,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\conf.rs","byte_start":34661,"byte_end":34665,"line_start":393,"line_end":393,"column_start":6,"column_end":10},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":39064,"byte_end":39071,"line_start":69,"line_end":69,"column_start":21,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":39190,"byte_end":39197,"line_start":75,"line_end":75,"column_start":6,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":44318,"byte_end":44332,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\context.rs","byte_start":48356,"byte_end":48363,"line_start":327,"line_end":327,"column_start":6,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":51100,"byte_end":51109,"line_start":55,"line_end":55,"column_start":23,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":51735,"byte_end":51744,"line_start":71,"line_end":71,"column_start":16,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2041},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":52192,"byte_end":52201,"line_start":85,"line_end":85,"column_start":31,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":52330,"byte_end":52339,"line_start":91,"line_end":91,"column_start":32,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":52542,"byte_end":52551,"line_start":99,"line_end":99,"column_start":33,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":52773,"byte_end":52782,"line_start":106,"line_end":106,"column_start":38,"column_end":47},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":52984,"byte_end":52993,"line_start":113,"line_end":113,"column_start":29,"column_end":38},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":53182,"byte_end":53191,"line_start":120,"line_end":120,"column_start":34,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":53428,"byte_end":53437,"line_start":127,"line_end":127,"column_start":61,"column_end":70},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":53837,"byte_end":53846,"line_start":139,"line_end":139,"column_start":36,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":54052,"byte_end":54061,"line_start":146,"line_end":146,"column_start":43,"column_end":52},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":54301,"byte_end":54310,"line_start":157,"line_end":157,"column_start":35,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":54531,"byte_end":54540,"line_start":164,"line_end":164,"column_start":44,"column_end":53},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":54692,"byte_end":54701,"line_start":170,"line_end":170,"column_start":39,"column_end":48},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":54846,"byte_end":54855,"line_start":176,"line_end":176,"column_start":37,"column_end":46},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":55000,"byte_end":55009,"line_start":182,"line_end":182,"column_start":39,"column_end":48},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":55260,"byte_end":55269,"line_start":192,"line_end":192,"column_start":41,"column_end":50},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":55417,"byte_end":55426,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":55689,"byte_end":55698,"line_start":206,"line_end":206,"column_start":38,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":55851,"byte_end":55860,"line_start":212,"line_end":212,"column_start":37,"column_end":46},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":56023,"byte_end":56032,"line_start":218,"line_end":218,"column_start":29,"column_end":38},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":56240,"byte_end":56249,"line_start":225,"line_end":225,"column_start":59,"column_end":68},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\error.rs","byte_start":56595,"byte_end":56604,"line_start":235,"line_end":235,"column_start":80,"column_end":89},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":70537,"byte_end":70541,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":70828,"byte_end":70832,"line_start":72,"line_end":72,"column_start":19,"column_end":23},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":377},"to":{"krate":1,"index":2751}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":71010,"byte_end":71014,"line_start":80,"line_end":80,"column_start":20,"column_end":24},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":377},"to":{"krate":1,"index":2801}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\filesystem.rs","byte_start":71310,"byte_end":71320,"line_start":94,"line_end":94,"column_start":6,"column_end":16},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":126065,"byte_end":126071,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\canvas.rs","byte_start":129054,"byte_end":129060,"line_start":130,"line_end":130,"column_start":19,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":487},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","byte_start":132256,"byte_end":132278,"line_start":61,"line_end":61,"column_start":24,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","byte_start":132574,"byte_end":132596,"line_start":73,"line_end":73,"column_start":6,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\context.rs","byte_start":141805,"byte_end":141827,"line_start":340,"line_end":340,"column_start":9,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":152844,"byte_end":152853,"line_start":43,"line_end":43,"column_start":18,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":153167,"byte_end":153176,"line_start":56,"line_end":56,"column_start":6,"column_end":15},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":155705,"byte_end":155714,"line_start":135,"line_end":135,"column_start":24,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":155924,"byte_end":155933,"line_start":145,"line_end":145,"column_start":30,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":156184,"byte_end":156193,"line_start":155,"line_end":155,"column_start":35,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":156528,"byte_end":156537,"line_start":168,"line_end":168,"column_start":38,"column_end":47},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":156924,"byte_end":156933,"line_start":182,"line_end":182,"column_start":44,"column_end":53},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":158190,"byte_end":158203,"line_start":216,"line_end":216,"column_start":18,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2123},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":158388,"byte_end":158401,"line_start":226,"line_end":226,"column_start":26,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2123},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\drawparam.rs","byte_start":158633,"byte_end":158646,"line_start":237,"line_end":237,"column_start":6,"column_end":19},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":160009,"byte_end":160021,"line_start":32,"line_end":32,"column_start":9,"column_end":21},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":163610,"byte_end":163615,"line_start":133,"line_end":133,"column_start":6,"column_end":11},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":169601,"byte_end":169606,"line_start":302,"line_end":302,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":652},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\image.rs","byte_start":169938,"byte_end":169943,"line_start":316,"line_end":316,"column_start":19,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":652},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":174880,"byte_end":174891,"line_start":70,"line_end":70,"column_start":18,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2163},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":175030,"byte_end":175041,"line_start":79,"line_end":79,"column_start":6,"column_end":17},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":186112,"byte_end":186125,"line_start":388,"line_end":388,"column_start":54,"column_end":67},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2170},"to":{"krate":86,"index":129}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":186434,"byte_end":186447,"line_start":398,"line_end":398,"column_start":56,"column_end":69},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2170},"to":{"krate":86,"index":129}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":187101,"byte_end":187105,"line_start":422,"line_end":422,"column_start":6,"column_end":10},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mesh.rs","byte_start":194718,"byte_end":194722,"line_start":629,"line_end":629,"column_start":19,"column_end":23},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2180},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197140,"byte_end":197150,"line_start":34,"line_end":34,"column_start":26,"column_end":36},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2194},"to":{"krate":13,"index":343}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":197245,"byte_end":197255,"line_start":40,"line_end":40,"column_start":21,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2194},"to":{"krate":18,"index":722}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":198673,"byte_end":198678,"line_start":72,"line_end":72,"column_start":26,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":17,"index":521},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":201281,"byte_end":201287,"line_start":140,"line_end":140,"column_start":15,"column_end":21},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":204950,"byte_end":204963,"line_start":266,"line_end":266,"column_start":15,"column_end":28},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":207460,"byte_end":207466,"line_start":342,"line_end":342,"column_start":9,"column_end":15},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":208011,"byte_end":208024,"line_start":361,"line_end":361,"column_start":30,"column_end":43},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2230},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":208457,"byte_end":208470,"line_start":377,"line_end":377,"column_start":30,"column_end":43},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":811},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":208885,"byte_end":208890,"line_start":389,"line_end":389,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":6707},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":209386,"byte_end":209399,"line_start":405,"line_end":405,"column_start":38,"column_end":51},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":811},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":210598,"byte_end":210608,"line_start":444,"line_end":444,"column_start":15,"column_end":25},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2240},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":211945,"byte_end":211954,"line_start":488,"line_end":488,"column_start":36,"column_end":45},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2255},"to":{"krate":13,"index":690}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\shader.rs","byte_start":212450,"byte_end":212459,"line_start":510,"line_end":510,"column_start":30,"column_end":39},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2267},"to":{"krate":13,"index":686}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":216925,"byte_end":216937,"line_start":47,"line_end":47,"column_start":18,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2297},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":217117,"byte_end":217129,"line_start":58,"line_end":58,"column_start":6,"column_end":18},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":217787,"byte_end":217799,"line_start":83,"line_end":83,"column_start":28,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2297},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":217977,"byte_end":217989,"line_start":92,"line_end":92,"column_start":21,"column_end":33},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2297},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":218163,"byte_end":218175,"line_start":101,"line_end":101,"column_start":23,"column_end":35},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2297},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":218348,"byte_end":218360,"line_start":110,"line_end":110,"column_start":34,"column_end":46},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2297},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":218787,"byte_end":218800,"line_start":128,"line_end":128,"column_start":18,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2306},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":219722,"byte_end":219726,"line_start":156,"line_end":156,"column_start":18,"column_end":22},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2314},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":220175,"byte_end":220179,"line_start":171,"line_end":171,"column_start":6,"column_end":10},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":227130,"byte_end":227134,"line_start":368,"line_end":368,"column_start":19,"column_end":23},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2314},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":227875,"byte_end":227879,"line_start":394,"line_end":394,"column_start":6,"column_end":10},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\text.rs","byte_start":229064,"byte_end":229068,"line_start":428,"line_end":428,"column_start":18,"column_end":22},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2285},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":240043,"byte_end":240047,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":244401,"byte_end":244405,"line_start":184,"line_end":184,"column_start":28,"column_end":32},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2327},"to":{"krate":23,"index":18}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":244859,"byte_end":244863,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2327},"to":{"krate":23,"index":61}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":245422,"byte_end":245426,"line_start":217,"line_end":217,"column_start":25,"column_end":29},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2327},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":246246,"byte_end":246251,"line_start":260,"line_end":260,"column_start":6,"column_end":11},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":248124,"byte_end":248129,"line_start":319,"line_end":319,"column_start":33,"column_end":38},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2342},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":248532,"byte_end":248537,"line_start":331,"line_end":331,"column_start":29,"column_end":34},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2342},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":248839,"byte_end":248844,"line_start":340,"line_end":340,"column_start":25,"column_end":30},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2342},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":249117,"byte_end":249122,"line_start":348,"line_end":348,"column_start":32,"column_end":37},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2342},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":249440,"byte_end":249445,"line_start":357,"line_end":357,"column_start":37,"column_end":42},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2342},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":250838,"byte_end":250849,"line_start":406,"line_end":406,"column_start":22,"column_end":33},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2355},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":251406,"byte_end":251411,"line_start":427,"line_end":427,"column_start":28,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2342},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252292,"byte_end":252300,"line_start":462,"line_end":462,"column_start":6,"column_end":14},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":252979,"byte_end":252989,"line_start":485,"line_end":485,"column_start":29,"column_end":39},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2380},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\types.rs","byte_start":253192,"byte_end":253204,"line_start":494,"line_end":494,"column_start":27,"column_end":39},"kind":{"Impl":{"id":136}},"from":{"krate":18,"index":4721},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":261600,"byte_end":261611,"line_start":43,"line_end":43,"column_start":6,"column_end":17},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\spritebatch.rs","byte_start":265621,"byte_end":265632,"line_start":156,"line_end":156,"column_start":29,"column_end":40},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2390},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":91108,"byte_end":91113,"line_start":78,"line_end":78,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":6707},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":96068,"byte_end":96081,"line_start":200,"line_end":200,"column_start":30,"column_end":43},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":96514,"byte_end":96527,"line_start":217,"line_end":217,"column_start":22,"column_end":35},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2425},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":101720,"byte_end":101738,"line_start":382,"line_end":382,"column_start":23,"column_end":41},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2488},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":102326,"byte_end":102344,"line_start":400,"line_end":400,"column_start":18,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2488},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":102904,"byte_end":102916,"line_start":421,"line_end":421,"column_start":9,"column_end":21},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\graphics\\mod.rs","byte_start":103417,"byte_end":103426,"line_start":444,"line_end":444,"column_start":43,"column_end":52},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2041},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":268939,"byte_end":268958,"line_start":31,"line_end":31,"column_start":21,"column_end":40},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":269089,"byte_end":269108,"line_start":37,"line_end":37,"column_start":6,"column_end":25},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":269267,"byte_end":269286,"line_start":44,"line_end":44,"column_start":25,"column_end":44},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1197},"to":{"krate":0,"index":1194}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\gamepad.rs","byte_start":269761,"byte_end":269779,"line_start":60,"line_end":60,"column_start":25,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2632},"to":{"krate":0,"index":1194}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":273985,"byte_end":273992,"line_start":93,"line_end":93,"column_start":31,"column_end":38},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2640},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":274967,"byte_end":274982,"line_start":127,"line_end":127,"column_start":6,"column_end":21},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\keyboard.rs","byte_start":277839,"byte_end":277854,"line_start":205,"line_end":205,"column_start":18,"column_end":33},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2745},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":285259,"byte_end":285271,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\input\\mouse.rs","byte_start":286076,"byte_end":286088,"line_start":52,"line_end":52,"column_start":18,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2754},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":290034,"byte_end":290043,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":291685,"byte_end":291696,"line_start":102,"line_end":102,"column_start":6,"column_end":17},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\timer.rs","byte_start":292852,"byte_end":292863,"line_start":133,"line_end":133,"column_start":18,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2777},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299259,"byte_end":299263,"line_start":30,"line_end":30,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2751},"to":{"krate":0,"index":1317}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299266,"byte_end":299271,"line_start":30,"line_end":30,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":2801},"to":{"krate":0,"index":1317}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299274,"byte_end":299278,"line_start":30,"line_end":30,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":2817},"to":{"krate":0,"index":1317}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299281,"byte_end":299286,"line_start":30,"line_end":30,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":6707},"to":{"krate":0,"index":1317}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299309,"byte_end":299310,"line_start":32,"line_end":32,"column_start":19,"column_end":20},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1319},"to":{"krate":0,"index":1317}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":299724,"byte_end":299735,"line_start":49,"line_end":49,"column_start":6,"column_end":17},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":300916,"byte_end":300921,"line_start":98,"line_end":98,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":6707},"to":{"krate":0,"index":1328}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":303382,"byte_end":303398,"line_start":167,"line_end":167,"column_start":20,"column_end":36},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2806},"to":{"krate":0,"index":1340}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":304855,"byte_end":304865,"line_start":216,"line_end":216,"column_start":6,"column_end":16},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":306127,"byte_end":306137,"line_start":257,"line_end":257,"column_start":16,"column_end":26},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2801},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":306296,"byte_end":306306,"line_start":263,"line_end":263,"column_start":14,"column_end":24},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2801},"to":{"krate":0,"index":1328}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":310791,"byte_end":310800,"line_start":397,"line_end":397,"column_start":6,"column_end":15},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":311383,"byte_end":311392,"line_start":422,"line_end":422,"column_start":14,"column_end":23},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2813},"to":{"krate":0,"index":1328}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":314906,"byte_end":314916,"line_start":538,"line_end":538,"column_start":48,"column_end":58},"kind":{"Impl":{"id":166}},"from":{"krate":96,"index":367},"to":{"krate":0,"index":1383}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":316236,"byte_end":316241,"line_start":578,"line_end":578,"column_start":6,"column_end":11},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":317874,"byte_end":317888,"line_start":630,"line_end":630,"column_start":6,"column_end":20},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":318120,"byte_end":318134,"line_start":640,"line_end":640,"column_start":19,"column_end":33},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2823},"to":{"krate":1,"index":2751}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":318257,"byte_end":318271,"line_start":646,"line_end":646,"column_start":20,"column_end":34},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2823},"to":{"krate":1,"index":2801}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":318473,"byte_end":318487,"line_start":656,"line_end":656,"column_start":19,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2823},"to":{"krate":1,"index":2817}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":318607,"byte_end":318621,"line_start":662,"line_end":662,"column_start":16,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2823},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":318855,"byte_end":318866,"line_start":675,"line_end":675,"column_start":6,"column_end":17},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":319635,"byte_end":319646,"line_start":697,"line_end":697,"column_start":20,"column_end":31},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2827},"to":{"krate":0,"index":1340}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ggez-0.5.1\\src\\vfs.rs","byte_start":319831,"byte_end":319836,"line_start":709,"line_end":709,"column_start":14,"column_end":19},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2817},"to":{"krate":0,"index":1328}}]}