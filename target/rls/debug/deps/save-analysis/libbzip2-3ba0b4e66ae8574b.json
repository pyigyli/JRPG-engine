{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3","program":"C:\\Users\\Pyigyli\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bzip2","C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=3","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=3ba0b4e66ae8574b","-C","extra-filename=-3ba0b4e66ae8574b","--out-dir","d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps","-L","dependency=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps","--extern","bzip2_sys=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libbzip2_sys-73d030d02758449a.rmeta","--extern","libc=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\liblibc-cd83307ebc5d8cdb.rmeta","--cap-lints","allow","-L","native=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\build\\bzip2-sys-049016e513aecf60\\out\\lib","--error-format=json","--sysroot","C:\\Users\\Pyigyli\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libbzip2-3ba0b4e66ae8574b.rmeta"},"prelude":{"crate_id":{"name":"bzip2","disambiguator":[17508956319471447981,12278655824606218784]},"crate_root":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src","external_crates":[{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13454279496936976369,256594374343364064]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10635428080862470944,4053010167158610789]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2397070696586021034,1787692942867494326]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13215350897914660053,4762041400992555299]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8309206586370028958,10530789326598529563]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12844497061290288730,1165546255938205329]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17370511097861102976,8088456066398622915]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[1985867887572050615,3717448080532913995]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10045986561377339069,14963295625130836827]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14681916437073319406,9740076823699971540]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":11,"id":{"name":"panic_unwind","disambiguator":[4514194809136982995,14217700833302823945]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":12,"id":{"name":"bzip2_sys","disambiguator":[17168495119198889237,15527244294694198269]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","num":13,"id":{"name":"libc","disambiguator":[5314625775593102318,13596832393866714308]}}],"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":0,"byte_end":2739,"line_start":1,"line_end":85,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2262,"byte_end":2270,"line_start":67,"line_end":67,"column_start":15,"column_end":23},"alias_span":null,"name":"Compress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2272,"byte_end":2282,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"alias_span":null,"name":"Decompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2284,"byte_end":2290,"line_start":67,"line_end":67,"column_start":37,"column_end":43},"alias_span":null,"name":"Action","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2292,"byte_end":2298,"line_start":67,"line_end":67,"column_start":45,"column_end":51},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2300,"byte_end":2305,"line_start":67,"line_end":67,"column_start":53,"column_end":58},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":0,"byte_end":2739,"line_start":1,"line_end":85,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":20},{"krate":0,"index":75},{"krate":0,"index":128},{"krate":0,"index":171},{"krate":0,"index":293},{"krate":0,"index":307},{"krate":0,"index":305},{"krate":0,"index":303}],"decl_id":null,"docs":" Bzip compression for Rust","sig":null,"attributes":[{"value":"deny(missing_docs, warnings)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":1892,"byte_end":1924,"line_start":50,"line_end":50,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":3067,"byte_end":3075,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"Compress","qualname":"::mem::Compress","value":"Compress {  }","parent":null,"children":[{"krate":0,"index":33}],"decl_id":null,"docs":" Representation of an in-memory compression stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":3274,"byte_end":3284,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"Decompress","qualname":"::mem::Decompress","value":"Decompress {  }","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" Representation of an in-memory decompression stream.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":3843,"byte_end":3846,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"Run","qualname":"::mem::Action::Run","value":"Action::Run","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Normal compression.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":3940,"byte_end":3945,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"Flush","qualname":"::mem::Action::Flush","value":"Action::Flush","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Request that the current compression block is terminate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4034,"byte_end":4040,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Finish","qualname":"::mem::Action::Finish","value":"Action::Finish","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Request that the compression stream be finalized.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":3802,"byte_end":3808,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"Action","qualname":"::mem::Action","value":"Action::{Run, Flush, Finish}","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239}],"decl_id":null,"docs":" Possible actions to take on compression.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":3793,"byte_end":4069,"line_start":46,"line_end":53,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":3793,"byte_end":4069,"line_start":46,"line_end":53,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4238,"byte_end":4240,"line_start":59,"line_end":59,"column_start":5,"column_end":7},"name":"Ok","qualname":"::mem::Status::Ok","value":"Status::Ok","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Decompression went fine, nothing much to report.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4298,"byte_end":4305,"line_start":62,"line_end":62,"column_start":5,"column_end":12},"name":"FlushOk","qualname":"::mem::Status::FlushOk","value":"Status::FlushOk","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" The Flush action on a compression went ok.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4359,"byte_end":4364,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"RunOk","qualname":"::mem::Status::RunOk","value":"Status::RunOk","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" THe Run action on compression went ok.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4421,"byte_end":4429,"line_start":68,"line_end":68,"column_start":5,"column_end":13},"name":"FinishOk","qualname":"::mem::Status::FinishOk","value":"Status::FinishOk","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" The Finish action on compression went ok.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4515,"byte_end":4524,"line_start":71,"line_end":71,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::mem::Status::StreamEnd","value":"Status::StreamEnd","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" The stream's end has been met, meaning that no more data can be input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4672,"byte_end":4681,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"name":"MemNeeded","qualname":"::mem::Status::MemNeeded","value":"Status::MemNeeded","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" There was insufficient memory in the input or output buffer to complete\n the request, but otherwise everything went normally.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4168,"byte_end":4174,"line_start":57,"line_end":57,"column_start":10,"column_end":16},"name":"Status","qualname":"::mem::Status","value":"Status::{Ok, FlushOk, RunOk, FinishOk, StreamEnd, MemNeeded}","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262}],"decl_id":null,"docs":" Result of compression or decompression\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4159,"byte_end":4684,"line_start":57,"line_end":76,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4159,"byte_end":4684,"line_start":57,"line_end":76,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":5059,"byte_end":5067,"line_start":86,"line_end":86,"column_start":5,"column_end":13},"name":"Sequence","qualname":"::mem::Error::Sequence","value":"Error::Sequence","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" The sequence of operations called on a decompression/compression stream\n were invalid. See methods for details.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":5165,"byte_end":5169,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"Data","qualname":"::mem::Error::Data","value":"Error::Data","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" The data being decompressed was invalid, or it was not a valid bz2\n stream.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":5240,"byte_end":5249,"line_start":93,"line_end":93,"column_start":5,"column_end":14},"name":"DataMagic","qualname":"::mem::Error::DataMagic","value":"Error::DataMagic","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" The magic bz2 header wasn't present when decompressing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":5310,"byte_end":5315,"line_start":96,"line_end":96,"column_start":5,"column_end":10},"name":"Param","qualname":"::mem::Error::Param","value":"Error::Param","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" The parameters to this function were invalid.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4920,"byte_end":4925,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"name":"Error","qualname":"::mem::Error","value":"Error::{Sequence, Data, DataMagic, Param}","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280}],"decl_id":null,"docs":" Fatal errors encountered when compressing/decompressing bytes.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4911,"byte_end":5318,"line_start":83,"line_end":97,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":4911,"byte_end":5318,"line_start":83,"line_end":97,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":6525,"byte_end":6528,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<Compress>::new","value":"fn (lvl: Compression, work_factor: u32) -> Compress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream prepared for compression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":7128,"byte_end":7136,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"compress","qualname":"<Compress>::compress","value":"fn (&mut self, input: &[u8], output: &mut [u8], action: Action) -> Result<Status, Error>","parent":null,"children":[],"decl_id":null,"docs":" Compress a block of input into a block of output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":8538,"byte_end":8550,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"compress_vec","qualname":"<Compress>::compress_vec","value":"fn (&mut self, input: &[u8], output: &mut Vec<u8>, action: Action) -> Result<Status, Error>","parent":null,"children":[],"decl_id":null,"docs":" Compress a block of input into an output vector.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":9241,"byte_end":9249,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Compress>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Total number of bytes processed as input\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":9364,"byte_end":9373,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Compress>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Total number of bytes processed as output\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":9807,"byte_end":9810,"line_start":201,"line_end":201,"column_start":12,"column_end":15},"name":"new","qualname":"<Decompress>::new","value":"fn (small: bool) -> Decompress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream prepared for decompression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":10193,"byte_end":10203,"line_start":212,"line_end":212,"column_start":12,"column_end":22},"name":"decompress","qualname":"<Decompress>::decompress","value":"fn (&mut self, input: &[u8], output: &mut [u8]) -> Result<Status, Error>","parent":null,"children":[],"decl_id":null,"docs":" Decompress a block of input into a block of output.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":11373,"byte_end":11387,"line_start":237,"line_end":237,"column_start":12,"column_end":26},"name":"decompress_vec","qualname":"<Decompress>::decompress_vec","value":"fn (&mut self, input: &[u8], output: &mut Vec<u8>) -> Result<Status, Error>","parent":null,"children":[],"decl_id":null,"docs":" Decompress a block of input into an output vector.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12010,"byte_end":12018,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Decompress>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Total number of bytes processed as input\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12133,"byte_end":12142,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Decompress>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Total number of bytes processed as output\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bufread","qualname":"::bufread","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":84},{"krate":0,"index":89},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":121},{"krate":0,"index":124}],"decl_id":null,"docs":" I/O streams for wrapping `BufRead` types as encoders/decoders\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":13640,"byte_end":13649,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"BzEncoder","qualname":"::bufread::BzEncoder","value":"BzEncoder {  }","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"decl_id":null,"docs":" A bz2 encoder, or compressor.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":13909,"byte_end":13918,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"BzDecoder","qualname":"::bufread::BzDecoder","value":"BzDecoder {  }","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" A bz2 decoder, or decompressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":14146,"byte_end":14149,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<BzEncoder<R>>::new","value":"fn (r: R, level: Compression) -> BzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":14410,"byte_end":14417,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzEncoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":14662,"byte_end":14669,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzEncoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":14797,"byte_end":14807,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BzEncoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":15363,"byte_end":15372,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzEncoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes produced by the compressor\n (e.g. the number of bytes read from this stream)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":15567,"byte_end":15575,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzEncoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by the compressor\n (e.g. the number of bytes read from the underlying stream)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":17638,"byte_end":17641,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<BzDecoder<R>>::new","value":"fn (r: R) -> BzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":17880,"byte_end":17887,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzDecoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":18132,"byte_end":18139,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzDecoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":18267,"byte_end":18277,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BzDecoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":18546,"byte_end":18554,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzDecoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":18690,"byte_end":18699,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzDecoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":164},{"krate":0,"index":167}],"decl_id":null,"docs":" Reader-based compression/decompression streams\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":20674,"byte_end":20683,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"BzEncoder","qualname":"::read::BzEncoder","value":"BzEncoder {  }","parent":null,"children":[{"krate":0,"index":137}],"decl_id":null,"docs":" A compression stream which wraps an uncompressed stream of data. Compressed\n data will be read from the stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":20868,"byte_end":20877,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"BzDecoder","qualname":"::read::BzDecoder","value":"BzDecoder {  }","parent":null,"children":[{"krate":0,"index":140}],"decl_id":null,"docs":" A decompression stream which wraps a compressed stream of data. Decompressed\n data will be read from the stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":21109,"byte_end":21112,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BzEncoder<R>>::new","value":"fn (r: R, level: Compression) -> BzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new compression stream which will compress at the given level\n to read compress output to the give output stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":21329,"byte_end":21336,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzEncoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":21602,"byte_end":21609,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzEncoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":21762,"byte_end":21772,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BzEncoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the underlying writer, finishing the compression stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":22356,"byte_end":22365,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzEncoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes produced by the compressor\n (e.g. the number of bytes read from this stream)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":22561,"byte_end":22569,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzEncoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by the compressor\n (e.g. the number of bytes read from the underlying stream)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":23419,"byte_end":23422,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<BzDecoder<R>>::new","value":"fn (r: R) -> BzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decompression stream, which will read compressed\n data from the given input stream and decompress it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":23612,"byte_end":23619,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzDecoder<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":23885,"byte_end":23892,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzDecoder<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":24045,"byte_end":24055,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BzDecoder<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the underlying writer, finishing the compression stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":24534,"byte_end":24543,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzDecoder<R>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes produced by the decompressor\n (e.g. the number of bytes read from this stream)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":24741,"byte_end":24749,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzDecoder<R>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by the decompressor\n (e.g. the number of bytes read from the underlying stream)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":180},{"krate":0,"index":186},{"krate":0,"index":192},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":222},{"krate":0,"index":226},{"krate":0,"index":229}],"decl_id":null,"docs":" Writer-based compression/decompression streams\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":29556,"byte_end":29565,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"BzEncoder","qualname":"::write::BzEncoder","value":"BzEncoder {  }","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"decl_id":null,"docs":" A compression stream which will have uncompressed data written to it and\n will write compressed data to an output stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":29795,"byte_end":29804,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"BzDecoder","qualname":"::write::BzDecoder","value":"BzDecoder {  }","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"decl_id":null,"docs":" A compression stream which will have compressed data written to it and\n will write uncompressed data to an output stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":30076,"byte_end":30079,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<BzEncoder<W>>::new","value":"fn (obj: W, level: Compression) -> BzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new compression stream which will compress at the given level\n to write compress output to the give output stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":30763,"byte_end":30770,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzEncoder<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":31053,"byte_end":31060,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzEncoder<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":31572,"byte_end":31582,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<BzEncoder<W>>::try_finish","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":32481,"byte_end":32487,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"finish","qualname":"<BzEncoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":32870,"byte_end":32879,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzEncoder<W>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes produced by the compressor","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":33066,"byte_end":33074,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzEncoder<W>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by the compressor\n (e.g. the number of bytes written to this stream.)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":34713,"byte_end":34716,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"new","qualname":"<BzDecoder<W>>::new","value":"fn (obj: W) -> BzDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoding stream which will decompress all data written\n to it into `obj`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":34989,"byte_end":34996,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzDecoder<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":35279,"byte_end":35286,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzDecoder<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":36187,"byte_end":36197,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<BzDecoder<W>>::try_finish","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":36787,"byte_end":36793,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"finish","qualname":"<BzDecoder<W>>::finish","value":"fn (&mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the underlying writer, finishing the compression stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":37179,"byte_end":37188,"line_start":249,"line_end":249,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzDecoder<W>>::total_out","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes produced by the decompressor","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":37377,"byte_end":37385,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzDecoder<W>>::total_in","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by the decompressor\n (e.g. the number of bytes written to this stream.)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2567,"byte_end":2574,"line_start":80,"line_end":80,"column_start":5,"column_end":12},"name":"Fastest","qualname":"::Compression::Fastest","value":"Compression::Fastest","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" Optimize for the best speed of encoding.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2637,"byte_end":2641,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"Best","qualname":"::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" Optimize for the size of data being encoded.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2725,"byte_end":2732,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Default","qualname":"::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" Choose the default compression, a balance between speed and size.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2500,"byte_end":2511,"line_start":78,"line_end":78,"column_start":10,"column_end":21},"name":"Compression","qualname":"::Compression","value":"Compression::{Fastest, Best, Default}","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300}],"decl_id":null,"docs":" When compressing data, the compression level can be specified by a value in\n this enum.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2491,"byte_end":2739,"line_start":78,"line_end":85,"column_start":1,"column_end":2}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":3516,"byte_end":3522,"line_start":34,"line_end":34,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":3564,"byte_end":3570,"line_start":35,"line_end":35,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":5325,"byte_end":5333,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":9435,"byte_end":9445,"line_start":194,"line_end":194,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12218,"byte_end":12224,"line_start":265,"line_end":265,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12515,"byte_end":12520,"line_start":277,"line_end":277,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12603,"byte_end":12608,"line_start":281,"line_end":281,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12745,"byte_end":12756,"line_start":287,"line_end":287,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12887,"byte_end":12900,"line_start":292,"line_end":292,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":13043,"byte_end":13049,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":13994,"byte_end":14003,"line_start":33,"line_end":33,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":14330,"byte_end":14339,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":15656,"byte_end":15665,"line_start":84,"line_end":84,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":17132,"byte_end":17141,"line_start":125,"line_end":125,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":17519,"byte_end":17528,"line_start":142,"line_end":142,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":17800,"byte_end":17809,"line_start":154,"line_end":154,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":18781,"byte_end":18790,"line_start":187,"line_end":187,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":19922,"byte_end":19931,"line_start":223,"line_end":223,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":20945,"byte_end":20954,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":22648,"byte_end":22657,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":22872,"byte_end":22881,"line_start":83,"line_end":83,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":23263,"byte_end":23272,"line_start":100,"line_end":100,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":24828,"byte_end":24837,"line_start":145,"line_end":145,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":25061,"byte_end":25070,"line_start":155,"line_end":155,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":29911,"byte_end":29920,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":33154,"byte_end":33163,"line_start":121,"line_end":121,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":34207,"byte_end":34216,"line_start":160,"line_end":160,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":34440,"byte_end":34449,"line_start":170,"line_end":170,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":34585,"byte_end":34594,"line_start":178,"line_end":178,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":37465,"byte_end":37474,"line_start":260,"line_end":260,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":38524,"byte_end":38533,"line_start":299,"line_end":299,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":38757,"byte_end":38766,"line_start":309,"line_end":309,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2327,"byte_end":2334,"line_start":71,"line_end":71,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2344,"byte_end":2348,"line_start":72,"line_end":72,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\lib.rs","byte_start":2358,"byte_end":2363,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":171}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":3516,"byte_end":3522,"line_start":34,"line_end":34,"column_start":36,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":36},"to":{"krate":2,"index":1386}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":3564,"byte_end":3570,"line_start":35,"line_end":35,"column_start":36,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":36},"to":{"krate":2,"index":1395}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":5325,"byte_end":5333,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":9435,"byte_end":9445,"line_start":194,"line_end":194,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12218,"byte_end":12224,"line_start":265,"line_end":265,"column_start":20,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12515,"byte_end":12520,"line_start":277,"line_end":277,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":273},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12603,"byte_end":12608,"line_start":281,"line_end":281,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":273},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12745,"byte_end":12756,"line_start":287,"line_end":287,"column_start":20,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":46},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":12887,"byte_end":12900,"line_start":292,"line_end":292,"column_start":20,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":47},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\mem.rs","byte_start":13043,"byte_end":13049,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":36},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":13994,"byte_end":14003,"line_start":33,"line_end":33,"column_start":18,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":14330,"byte_end":14339,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":15656,"byte_end":15665,"line_start":84,"line_end":84,"column_start":27,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":2751}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":17132,"byte_end":17141,"line_start":125,"line_end":125,"column_start":26,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":2801}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":17519,"byte_end":17528,"line_start":142,"line_end":142,"column_start":18,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":17800,"byte_end":17809,"line_start":154,"line_end":154,"column_start":9,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":18781,"byte_end":18790,"line_start":187,"line_end":187,"column_start":27,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":2751}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\bufread.rs","byte_start":19922,"byte_end":19931,"line_start":223,"line_end":223,"column_start":26,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":2801}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":20945,"byte_end":20954,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":22648,"byte_end":22657,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":135},"to":{"krate":1,"index":2751}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":22872,"byte_end":22881,"line_start":83,"line_end":83,"column_start":33,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":135},"to":{"krate":1,"index":2801}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":23263,"byte_end":23272,"line_start":100,"line_end":100,"column_start":15,"column_end":24},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":24828,"byte_end":24837,"line_start":145,"line_end":145,"column_start":24,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":2751}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\read.rs","byte_start":25061,"byte_end":25070,"line_start":155,"line_end":155,"column_start":33,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":2801}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":29911,"byte_end":29920,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":33154,"byte_end":33163,"line_start":121,"line_end":121,"column_start":26,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":2801}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":34207,"byte_end":34216,"line_start":160,"line_end":160,"column_start":32,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":2751}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":34440,"byte_end":34449,"line_start":170,"line_end":170,"column_start":25,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":180},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":34585,"byte_end":34594,"line_start":178,"line_end":178,"column_start":16,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":37465,"byte_end":37474,"line_start":260,"line_end":260,"column_start":26,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2801}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":38524,"byte_end":38533,"line_start":299,"line_end":299,"column_start":32,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2751}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.3.3\\src\\write.rs","byte_start":38757,"byte_end":38766,"line_start":309,"line_end":309,"column_start":25,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":1572}}]}