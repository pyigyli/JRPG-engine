{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1","program":"C:\\Users\\Pyigyli\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","alga","C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=3","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"std\"","-C","metadata=758a55a9630f48e9","-C","extra-filename=-758a55a9630f48e9","--out-dir","d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps","-L","dependency=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps","--extern","approx=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libapprox-aafcdd61ba08909c.rmeta","--extern","libm=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\liblibm-3393a27fe30c36bd.rmeta","--extern","num_complex=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libnum_complex-34e88282bde1086d.rmeta","--extern","num_traits=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libnum_traits-d9ffae7fa54b79a0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Pyigyli\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libalga-758a55a9630f48e9.rmeta"},"prelude":{"crate_id":{"name":"alga","disambiguator":[16564272508505559036,13498180653623146372]},"crate_root":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src","external_crates":[{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13454279496936976369,256594374343364064]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10635428080862470944,4053010167158610789]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2397070696586021034,1787692942867494326]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13215350897914660053,4762041400992555299]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8309206586370028958,10530789326598529563]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12844497061290288730,1165546255938205329]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17370511097861102976,8088456066398622915]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[1985867887572050615,3717448080532913995]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10045986561377339069,14963295625130836827]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14681916437073319406,9740076823699971540]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":11,"id":{"name":"panic_unwind","disambiguator":[4514194809136982995,14217700833302823945]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":12,"id":{"name":"approx","disambiguator":[13883877217496802873,8996129214380532129]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","num":13,"id":{"name":"num_traits","disambiguator":[12852782193594228631,11443678241345246573]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","num":14,"id":{"name":"num_complex","disambiguator":[16491812751811374622,1764530240428292435]}}],"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","byte_start":606,"byte_end":1054,"line_start":15,"line_end":37,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11158,"byte_end":11160,"line_start":159,"line_end":159,"column_start":26,"column_end":28},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11162,"byte_end":11170,"line_start":159,"line_end":159,"column_start":30,"column_end":38},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11203,"byte_end":11211,"line_start":161,"line_end":161,"column_start":5,"column_end":13},"alias_span":null,"name":"Additive","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11213,"byte_end":11222,"line_start":161,"line_end":161,"column_start":15,"column_end":24},"alias_span":null,"name":"ClosedAdd","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11224,"byte_end":11233,"line_start":161,"line_end":161,"column_start":26,"column_end":35},"alias_span":null,"name":"ClosedDiv","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11235,"byte_end":11244,"line_start":161,"line_end":161,"column_start":37,"column_end":46},"alias_span":null,"name":"ClosedMul","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11246,"byte_end":11255,"line_start":161,"line_end":161,"column_start":48,"column_end":57},"alias_span":null,"name":"ClosedNeg","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11257,"byte_end":11266,"line_start":161,"line_end":161,"column_start":59,"column_end":68},"alias_span":null,"name":"ClosedSub","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11268,"byte_end":11282,"line_start":161,"line_end":161,"column_start":70,"column_end":84},"alias_span":null,"name":"Multiplicative","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11284,"byte_end":11292,"line_start":161,"line_end":161,"column_start":86,"column_end":94},"alias_span":null,"name":"Operator","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11298,"byte_end":11313,"line_start":162,"line_end":162,"column_start":5,"column_end":20},"alias_span":null,"name":"TwoSidedInverse","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11341,"byte_end":11349,"line_start":164,"line_end":164,"column_start":24,"column_end":32},"alias_span":null,"name":"SubsetOf","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11351,"byte_end":11361,"line_start":164,"line_end":164,"column_start":34,"column_end":44},"alias_span":null,"name":"SupersetOf","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11388,"byte_end":11400,"line_start":166,"line_end":166,"column_start":24,"column_end":36},"alias_span":null,"name":"ComplexField","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11426,"byte_end":11441,"line_start":167,"line_end":167,"column_start":25,"column_end":40},"alias_span":null,"name":"JoinSemilattice","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11443,"byte_end":11450,"line_start":167,"line_end":167,"column_start":42,"column_end":49},"alias_span":null,"name":"Lattice","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11452,"byte_end":11467,"line_start":167,"line_end":167,"column_start":51,"column_end":66},"alias_span":null,"name":"MeetSemilattice","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11492,"byte_end":11506,"line_start":168,"line_end":168,"column_start":23,"column_end":37},"alias_span":null,"name":"AbstractModule","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11542,"byte_end":11555,"line_start":170,"line_end":170,"column_start":5,"column_end":18},"alias_span":null,"name":"AbstractGroup","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11557,"byte_end":11577,"line_start":170,"line_end":170,"column_start":20,"column_end":40},"alias_span":null,"name":"AbstractGroupAbelian","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11579,"byte_end":11591,"line_start":170,"line_end":170,"column_start":42,"column_end":54},"alias_span":null,"name":"AbstractLoop","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11593,"byte_end":11606,"line_start":170,"line_end":170,"column_start":56,"column_end":69},"alias_span":null,"name":"AbstractMagma","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11608,"byte_end":11622,"line_start":170,"line_end":170,"column_start":71,"column_end":85},"alias_span":null,"name":"AbstractMonoid","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11628,"byte_end":11646,"line_start":171,"line_end":171,"column_start":5,"column_end":23},"alias_span":null,"name":"AbstractQuasigroup","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11648,"byte_end":11665,"line_start":171,"line_end":171,"column_start":25,"column_end":42},"alias_span":null,"name":"AbstractSemigroup","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11690,"byte_end":11699,"line_start":173,"line_end":173,"column_start":21,"column_end":30},"alias_span":null,"name":"RealField","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11734,"byte_end":11747,"line_start":175,"line_end":175,"column_start":5,"column_end":18},"alias_span":null,"name":"AdditiveGroup","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11749,"byte_end":11769,"line_start":175,"line_end":175,"column_start":20,"column_end":40},"alias_span":null,"name":"AdditiveGroupAbelian","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11771,"byte_end":11783,"line_start":175,"line_end":175,"column_start":42,"column_end":54},"alias_span":null,"name":"AdditiveLoop","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11785,"byte_end":11798,"line_start":175,"line_end":175,"column_start":56,"column_end":69},"alias_span":null,"name":"AdditiveMagma","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1459},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11800,"byte_end":11814,"line_start":175,"line_end":175,"column_start":71,"column_end":85},"alias_span":null,"name":"AdditiveMonoid","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11820,"byte_end":11838,"line_start":176,"line_end":176,"column_start":5,"column_end":23},"alias_span":null,"name":"AdditiveQuasigroup","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11840,"byte_end":11857,"line_start":176,"line_end":176,"column_start":25,"column_end":42},"alias_span":null,"name":"AdditiveSemigroup","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11859,"byte_end":11864,"line_start":176,"line_end":176,"column_start":44,"column_end":49},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11866,"byte_end":11872,"line_start":176,"line_end":176,"column_start":51,"column_end":57},"alias_span":null,"name":"Module","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1483},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11874,"byte_end":11893,"line_start":176,"line_end":176,"column_start":59,"column_end":78},"alias_span":null,"name":"MultiplicativeGroup","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11899,"byte_end":11925,"line_start":177,"line_end":177,"column_start":5,"column_end":31},"alias_span":null,"name":"MultiplicativeGroupAbelian","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11927,"byte_end":11945,"line_start":177,"line_end":177,"column_start":33,"column_end":51},"alias_span":null,"name":"MultiplicativeLoop","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11947,"byte_end":11966,"line_start":177,"line_end":177,"column_start":53,"column_end":72},"alias_span":null,"name":"MultiplicativeMagma","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11968,"byte_end":11988,"line_start":177,"line_end":177,"column_start":74,"column_end":94},"alias_span":null,"name":"MultiplicativeMonoid","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":11994,"byte_end":12018,"line_start":178,"line_end":178,"column_start":5,"column_end":29},"alias_span":null,"name":"MultiplicativeQuasigroup","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12020,"byte_end":12043,"line_start":178,"line_end":178,"column_start":31,"column_end":54},"alias_span":null,"name":"MultiplicativeSemigroup","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12045,"byte_end":12049,"line_start":178,"line_end":178,"column_start":56,"column_end":60},"alias_span":null,"name":"Ring","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1492},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12051,"byte_end":12066,"line_start":178,"line_end":178,"column_start":62,"column_end":77},"alias_span":null,"name":"RingCommutative","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12101,"byte_end":12114,"line_start":180,"line_end":180,"column_start":31,"column_end":44},"alias_span":null,"name":"AbstractField","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12116,"byte_end":12128,"line_start":180,"line_end":180,"column_start":46,"column_end":58},"alias_span":null,"name":"AbstractRing","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12130,"byte_end":12153,"line_start":180,"line_end":180,"column_start":60,"column_end":83},"alias_span":null,"name":"AbstractRingCommutative","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95356,"byte_end":95378,"line_start":3,"line_end":3,"column_start":24,"column_end":46},"alias_span":null,"name":"InversibleSquareMatrix","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95380,"byte_end":95386,"line_start":3,"line_end":3,"column_start":48,"column_end":54},"alias_span":null,"name":"Matrix","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95388,"byte_end":95397,"line_start":3,"line_end":3,"column_start":56,"column_end":65},"alias_span":null,"name":"MatrixMut","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95399,"byte_end":95411,"line_start":3,"line_end":3,"column_start":67,"column_end":79},"alias_span":null,"name":"SquareMatrix","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95413,"byte_end":95428,"line_start":3,"line_end":3,"column_start":81,"column_end":96},"alias_span":null,"name":"SquareMatrixMut","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95467,"byte_end":95487,"line_start":5,"line_end":5,"column_start":5,"column_end":25},"alias_span":null,"name":"AffineTransformation","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95489,"byte_end":95503,"line_start":5,"line_end":5,"column_start":27,"column_end":41},"alias_span":null,"name":"DirectIsometry","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95505,"byte_end":95513,"line_start":5,"line_end":5,"column_start":43,"column_end":51},"alias_span":null,"name":"Isometry","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95515,"byte_end":95539,"line_start":5,"line_end":5,"column_start":53,"column_end":77},"alias_span":null,"name":"OrthogonalTransformation","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95545,"byte_end":95569,"line_start":6,"line_end":6,"column_start":5,"column_end":29},"alias_span":null,"name":"ProjectiveTransformation","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95571,"byte_end":95579,"line_start":6,"line_end":6,"column_start":31,"column_end":39},"alias_span":null,"name":"Rotation","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95581,"byte_end":95588,"line_start":6,"line_end":6,"column_start":41,"column_end":48},"alias_span":null,"name":"Scaling","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95590,"byte_end":95600,"line_start":6,"line_end":6,"column_start":50,"column_end":60},"alias_span":null,"name":"Similarity","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95602,"byte_end":95616,"line_start":6,"line_end":6,"column_start":62,"column_end":76},"alias_span":null,"name":"Transformation","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95618,"byte_end":95629,"line_start":6,"line_end":6,"column_start":78,"column_end":89},"alias_span":null,"name":"Translation","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95662,"byte_end":95673,"line_start":9,"line_end":9,"column_start":5,"column_end":16},"alias_span":null,"name":"AffineSpace","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95675,"byte_end":95689,"line_start":9,"line_end":9,"column_start":18,"column_end":32},"alias_span":null,"name":"EuclideanSpace","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95691,"byte_end":95710,"line_start":9,"line_end":9,"column_start":34,"column_end":53},"alias_span":null,"name":"FiniteDimInnerSpace","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95712,"byte_end":95732,"line_start":9,"line_end":9,"column_start":55,"column_end":75},"alias_span":null,"name":"FiniteDimVectorSpace","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95734,"byte_end":95744,"line_start":9,"line_end":9,"column_start":77,"column_end":87},"alias_span":null,"name":"InnerSpace","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95750,"byte_end":95761,"line_start":10,"line_end":10,"column_start":5,"column_end":16},"alias_span":null,"name":"NormedSpace","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":95763,"byte_end":95774,"line_start":10,"line_end":10,"column_start":18,"column_end":29},"alias_span":null,"name":"VectorSpace","value":"","parent":{"krate":0,"index":744}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","byte_start":606,"byte_end":1054,"line_start":15,"line_end":37,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":18},{"krate":0,"index":744}],"decl_id":null,"docs":" Traits for algebra.\n","sig":null,"attributes":[{"value":"deny(non_camel_case_types)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","byte_start":631,"byte_end":661,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"deny(unused_parens)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","byte_start":662,"byte_end":685,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","byte_start":686,"byte_end":718,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"deny(unused_results)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","byte_start":719,"byte_end":743,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","byte_start":744,"byte_end":766,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"general","qualname":"::general","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":69},{"krate":0,"index":73},{"krate":0,"index":124},{"krate":0,"index":258},{"krate":0,"index":394},{"krate":0,"index":419},{"krate":0,"index":436},{"krate":0,"index":496},{"krate":0,"index":531},{"krate":0,"index":560},{"krate":0,"index":590},{"krate":0,"index":634},{"krate":0,"index":741},{"krate":0,"index":742}],"decl_id":null,"docs":" Fundamental algebraic structures.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":13003,"byte_end":13016,"line_start":19,"line_end":19,"column_start":11,"column_end":24},"name":"AbstractMagma","qualname":"::general::one_operator::AbstractMagma","value":"AbstractMagma<O: Operator>: Sized + Clone","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" A magma is an algebraic structure which consists of a set equipped with a binary operation, ∘,\n which must be closed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":13085,"byte_end":13092,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"operate","qualname":"::general::one_operator::AbstractMagma::operate","value":"fn (&self, right: &Self) -> Self","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Performs an operation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":13182,"byte_end":13184,"line_start":25,"line_end":25,"column_start":8,"column_end":10},"name":"op","qualname":"::general::one_operator::AbstractMagma::op","value":"fn (&self, _: O, lhs: &Self) -> Self","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Performs specific operation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":13165,"byte_end":13174,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":13858,"byte_end":13876,"line_start":48,"line_end":48,"column_start":11,"column_end":29},"name":"AbstractQuasigroup","qualname":"::general::one_operator::AbstractQuasigroup","value":"AbstractQuasigroup<O: Operator>: PartialEq + AbstractMagma<O> + TwoSidedInverse<O>","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" A quasigroup is a magma which that has the **divisibility property** (or Latin square property).\n *A set with a closed binary operation with the divisibility property.*","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":14168,"byte_end":14199,"line_start":57,"line_end":57,"column_start":8,"column_end":39},"name":"prop_inv_is_latin_square_approx","qualname":"::general::one_operator::AbstractQuasigroup::prop_inv_is_latin_square_approx","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" Returns `true` if latin squareness holds for the given arguments. Approximate\n equality is used for verifications.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":14648,"byte_end":14672,"line_start":73,"line_end":73,"column_start":8,"column_end":32},"name":"prop_inv_is_latin_square","qualname":"::general::one_operator::AbstractQuasigroup::prop_inv_is_latin_square","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" Returns `true` if latin squareness holds for the given arguments.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":16157,"byte_end":16174,"line_start":125,"line_end":125,"column_start":11,"column_end":28},"name":"AbstractSemigroup","qualname":"::general::one_operator::AbstractSemigroup","value":"AbstractSemigroup<O: Operator>: PartialEq + AbstractMagma<O>","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"decl_id":null,"docs":" A semigroup is a quasigroup that is **associative**.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":16354,"byte_end":16380,"line_start":128,"line_end":128,"column_start":8,"column_end":34},"name":"prop_is_associative_approx","qualname":"::general::one_operator::AbstractSemigroup::prop_is_associative_approx","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Returns `true` if associativity holds for the given arguments. Approximate equality is used\n for verifications.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":16647,"byte_end":16666,"line_start":137,"line_end":137,"column_start":8,"column_end":27},"name":"prop_is_associative","qualname":"::general::one_operator::AbstractSemigroup::prop_is_associative","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Returns `true` if associativity holds for the given arguments.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":18103,"byte_end":18115,"line_start":189,"line_end":189,"column_start":11,"column_end":23},"name":"AbstractLoop","qualname":"::general::one_operator::AbstractLoop","value":"AbstractLoop<O: Operator>: AbstractQuasigroup<O> + Identity<O>","parent":null,"children":[],"decl_id":null,"docs":" A loop is a quasigroup with an unique **identity element**, e.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":19584,"byte_end":19598,"line_start":239,"line_end":239,"column_start":11,"column_end":25},"name":"AbstractMonoid","qualname":"::general::one_operator::AbstractMonoid","value":"AbstractMonoid<O: Operator>: AbstractSemigroup<O> + Identity<O>","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"decl_id":null,"docs":" A monoid is a semigroup equipped with an identity element, e.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":19807,"byte_end":19853,"line_start":242,"line_end":242,"column_start":8,"column_end":54},"name":"prop_operating_identity_element_is_noop_approx","qualname":"::general::one_operator::AbstractMonoid::prop_operating_identity_element_is_noop_approx","value":"fn (args: (Self,)) -> bool","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Checks whether operating with the identity element is a no-op for the given\n argument. Approximate equality is used for verifications.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":20175,"byte_end":20214,"line_start":253,"line_end":253,"column_start":8,"column_end":47},"name":"prop_operating_identity_element_is_noop","qualname":"::general::one_operator::AbstractMonoid::prop_operating_identity_element_is_noop","value":"fn (args: (Self,)) -> bool","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Checks whether operating with the identity element is a no-op for the given\n argument.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":21472,"byte_end":21485,"line_start":297,"line_end":297,"column_start":11,"column_end":24},"name":"AbstractGroup","qualname":"::general::one_operator::AbstractGroup","value":"AbstractGroup<O: Operator>: AbstractLoop<O> + AbstractMonoid<O>","parent":null,"children":[],"decl_id":null,"docs":" A group is a loop and a monoid  at the same time.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":23082,"byte_end":23102,"line_start":348,"line_end":348,"column_start":11,"column_end":31},"name":"AbstractGroupAbelian","qualname":"::general::one_operator::AbstractGroupAbelian","value":"AbstractGroupAbelian<O: Operator>: AbstractGroup<O>","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" An Abelian group is a **commutative** group.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":23283,"byte_end":23309,"line_start":351,"line_end":351,"column_start":8,"column_end":34},"name":"prop_is_commutative_approx","qualname":"::general::one_operator::AbstractGroupAbelian::prop_is_commutative_approx","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Returns `true` if the operator is commutative for the given argument tuple. Approximate\n equality is used for verifications.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":23556,"byte_end":23575,"line_start":360,"line_end":360,"column_start":8,"column_end":27},"name":"prop_is_commutative","qualname":"::general::one_operator::AbstractGroupAbelian::prop_is_commutative","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Returns `true` if the operator is commutative for the given argument tuple.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27171,"byte_end":27183,"line_start":27,"line_end":27,"column_start":11,"column_end":23},"name":"ComplexField","qualname":"::general::complex::ComplexField","value":"ComplexField: SubsetOf<Self> + SupersetOf<f64> + Field + Copy + Num + NumAssign +\nFromPrimitive + Neg<Output = Self> + MeetSemilattice + JoinSemilattice +\nSend + Sync + Any + 'static + Debug + Display","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"decl_id":null,"docs":" Trait shared by all complex fields and its subfields (like real numbers).","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":26581,"byte_end":26603,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27567,"byte_end":27576,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"RealField","qualname":"::general::complex::ComplexField::RealField","value":"type RealField: RealField;","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Type of the coefficients of a complex number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27661,"byte_end":27670,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"from_real","qualname":"::general::complex::ComplexField::from_real","value":"fn (re: Self::RealField) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Builds a pure-real complex number from the given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27755,"byte_end":27759,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"real","qualname":"::general::complex::ComplexField::real","value":"fn (self) -> Self::RealField","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" The real part of this complex number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27845,"byte_end":27854,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"imaginary","qualname":"::general::complex::ComplexField::imaginary","value":"fn (self) -> Self::RealField","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" The imaginary part of this complex number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27933,"byte_end":27940,"line_start":60,"line_end":60,"column_start":8,"column_end":15},"name":"modulus","qualname":"::general::complex::ComplexField::modulus","value":"fn (self) -> Self::RealField","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" The modulus of this complex number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":28027,"byte_end":28042,"line_start":63,"line_end":63,"column_start":8,"column_end":23},"name":"modulus_squared","qualname":"::general::complex::ComplexField::modulus_squared","value":"fn (self) -> Self::RealField","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" The squared modulus of this complex number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":28122,"byte_end":28130,"line_start":66,"line_end":66,"column_start":8,"column_end":16},"name":"argument","qualname":"::general::complex::ComplexField::argument","value":"fn (self) -> Self::RealField","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" The argument of this complex number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":28253,"byte_end":28258,"line_start":69,"line_end":69,"column_start":8,"column_end":13},"name":"norm1","qualname":"::general::complex::ComplexField::norm1","value":"fn (self) -> Self::RealField","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" The sum of the absolute value of this complex number's real and imaginary part.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":28345,"byte_end":28350,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"scale","qualname":"::general::complex::ComplexField::scale","value":"fn (self, factor: Self::RealField) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Multiplies this complex number by `factor`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":28451,"byte_end":28458,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"unscale","qualname":"::general::complex::ComplexField::unscale","value":"fn (self, factor: Self::RealField) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Multiplies this complex number by `factor`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":28569,"byte_end":28577,"line_start":78,"line_end":78,"column_start":8,"column_end":16},"name":"to_polar","qualname":"::general::complex::ComplexField::to_polar","value":"fn (self) -> (Self::RealField, Self::RealField)","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" The polar form of this complex number: (modulus, arg)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":28754,"byte_end":28760,"line_start":83,"line_end":83,"column_start":8,"column_end":14},"name":"to_exp","qualname":"::general::complex::ComplexField::to_exp","value":"fn (self) -> (Self::RealField, Self)","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" The exponential form of this complex number: (modulus, e^{i arg})\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29057,"byte_end":29063,"line_start":94,"line_end":94,"column_start":8,"column_end":14},"name":"signum","qualname":"::general::complex::ComplexField::signum","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" The exponential part of this complex number: `self / self.modulus()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29119,"byte_end":29124,"line_start":99,"line_end":99,"column_start":8,"column_end":13},"name":"floor","qualname":"::general::complex::ComplexField::floor","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29147,"byte_end":29151,"line_start":100,"line_end":100,"column_start":8,"column_end":12},"name":"ceil","qualname":"::general::complex::ComplexField::ceil","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29174,"byte_end":29179,"line_start":101,"line_end":101,"column_start":8,"column_end":13},"name":"round","qualname":"::general::complex::ComplexField::round","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29202,"byte_end":29207,"line_start":102,"line_end":102,"column_start":8,"column_end":13},"name":"trunc","qualname":"::general::complex::ComplexField::trunc","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29230,"byte_end":29235,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"fract","qualname":"::general::complex::ComplexField::fract","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29258,"byte_end":29265,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::general::complex::ComplexField::mul_add","value":"fn (self, a: Self, b: Self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29438,"byte_end":29441,"line_start":109,"line_end":109,"column_start":8,"column_end":11},"name":"abs","qualname":"::general::complex::ComplexField::abs","value":"fn (self) -> Self::RealField","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" The absolute value of this complex number: `self / self.signum()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29554,"byte_end":29559,"line_start":112,"line_end":112,"column_start":8,"column_end":13},"name":"hypot","qualname":"::general::complex::ComplexField::hypot","value":"fn (self, other: Self) -> Self::RealField","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Computes (self.conjugate() * self + other.conjugate() * other).sqrt()\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29607,"byte_end":29612,"line_start":114,"line_end":114,"column_start":8,"column_end":13},"name":"recip","qualname":"::general::complex::ComplexField::recip","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29635,"byte_end":29644,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"conjugate","qualname":"::general::complex::ComplexField::conjugate","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29667,"byte_end":29670,"line_start":116,"line_end":116,"column_start":8,"column_end":11},"name":"sin","qualname":"::general::complex::ComplexField::sin","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29693,"byte_end":29696,"line_start":117,"line_end":117,"column_start":8,"column_end":11},"name":"cos","qualname":"::general::complex::ComplexField::cos","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29719,"byte_end":29726,"line_start":118,"line_end":118,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::general::complex::ComplexField::sin_cos","value":"fn (self) -> (Self, Self)","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29771,"byte_end":29780,"line_start":120,"line_end":120,"column_start":8,"column_end":17},"name":"sinh_cosh","qualname":"::general::complex::ComplexField::sinh_cosh","value":"fn (self) -> (Self, Self)","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29754,"byte_end":29763,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29853,"byte_end":29856,"line_start":123,"line_end":123,"column_start":8,"column_end":11},"name":"tan","qualname":"::general::complex::ComplexField::tan","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29879,"byte_end":29883,"line_start":124,"line_end":124,"column_start":8,"column_end":12},"name":"asin","qualname":"::general::complex::ComplexField::asin","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29906,"byte_end":29910,"line_start":125,"line_end":125,"column_start":8,"column_end":12},"name":"acos","qualname":"::general::complex::ComplexField::acos","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29933,"byte_end":29937,"line_start":126,"line_end":126,"column_start":8,"column_end":12},"name":"atan","qualname":"::general::complex::ComplexField::atan","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29960,"byte_end":29964,"line_start":127,"line_end":127,"column_start":8,"column_end":12},"name":"sinh","qualname":"::general::complex::ComplexField::sinh","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":29987,"byte_end":29991,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"cosh","qualname":"::general::complex::ComplexField::cosh","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30014,"byte_end":30018,"line_start":129,"line_end":129,"column_start":8,"column_end":12},"name":"tanh","qualname":"::general::complex::ComplexField::tanh","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30041,"byte_end":30046,"line_start":130,"line_end":130,"column_start":8,"column_end":13},"name":"asinh","qualname":"::general::complex::ComplexField::asinh","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30069,"byte_end":30074,"line_start":131,"line_end":131,"column_start":8,"column_end":13},"name":"acosh","qualname":"::general::complex::ComplexField::acosh","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30097,"byte_end":30102,"line_start":132,"line_end":132,"column_start":8,"column_end":13},"name":"atanh","qualname":"::general::complex::ComplexField::atanh","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30126,"byte_end":30135,"line_start":134,"line_end":134,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::general::complex::ComplexField::is_finite","value":"fn (&self) -> bool","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30196,"byte_end":30200,"line_start":138,"line_end":138,"column_start":8,"column_end":12},"name":"sinc","qualname":"::general::complex::ComplexField::sinc","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Cardinal sine\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30179,"byte_end":30188,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30354,"byte_end":30359,"line_start":147,"line_end":147,"column_start":8,"column_end":13},"name":"sinhc","qualname":"::general::complex::ComplexField::sinhc","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30337,"byte_end":30346,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30535,"byte_end":30539,"line_start":157,"line_end":157,"column_start":8,"column_end":12},"name":"cosc","qualname":"::general::complex::ComplexField::cosc","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Cardinal cos\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30518,"byte_end":30527,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30693,"byte_end":30698,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"coshc","qualname":"::general::complex::ComplexField::coshc","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30676,"byte_end":30685,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30839,"byte_end":30842,"line_start":174,"line_end":174,"column_start":8,"column_end":11},"name":"log","qualname":"::general::complex::ComplexField::log","value":"fn (self, base: Self::RealField) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30888,"byte_end":30892,"line_start":175,"line_end":175,"column_start":8,"column_end":12},"name":"log2","qualname":"::general::complex::ComplexField::log2","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30915,"byte_end":30920,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"log10","qualname":"::general::complex::ComplexField::log10","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30943,"byte_end":30945,"line_start":177,"line_end":177,"column_start":8,"column_end":10},"name":"ln","qualname":"::general::complex::ComplexField::ln","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30968,"byte_end":30973,"line_start":178,"line_end":178,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::general::complex::ComplexField::ln_1p","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":30996,"byte_end":31000,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::general::complex::ComplexField::sqrt","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":31023,"byte_end":31031,"line_start":180,"line_end":180,"column_start":8,"column_end":16},"name":"try_sqrt","qualname":"::general::complex::ComplexField::try_sqrt","value":"fn (self) -> Option<Self>","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":31062,"byte_end":31065,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"exp","qualname":"::general::complex::ComplexField::exp","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":31088,"byte_end":31092,"line_start":182,"line_end":182,"column_start":8,"column_end":12},"name":"exp2","qualname":"::general::complex::ComplexField::exp2","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":31115,"byte_end":31121,"line_start":183,"line_end":183,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::general::complex::ComplexField::exp_m1","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":31144,"byte_end":31148,"line_start":184,"line_end":184,"column_start":8,"column_end":12},"name":"powi","qualname":"::general::complex::ComplexField::powi","value":"fn (self, n: i32) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":31179,"byte_end":31183,"line_start":185,"line_end":185,"column_start":8,"column_end":12},"name":"powf","qualname":"::general::complex::ComplexField::powf","value":"fn (self, n: Self::RealField) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":31226,"byte_end":31230,"line_start":186,"line_end":186,"column_start":8,"column_end":12},"name":"powc","qualname":"::general::complex::ComplexField::powc","value":"fn (self, n: Self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":31262,"byte_end":31266,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::general::complex::ComplexField::cbrt","value":"fn (self) -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":50894,"byte_end":50902,"line_start":21,"line_end":21,"column_start":11,"column_end":19},"name":"Identity","qualname":"::general::identity::Identity","value":"Identity<O: Operator>","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"decl_id":null,"docs":" A type that is equipped with identity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":50955,"byte_end":50963,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"identity","qualname":"::general::identity::Identity::identity","value":"fn () -> Self","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" The identity element.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":51024,"byte_end":51026,"line_start":27,"line_end":27,"column_start":8,"column_end":10},"name":"id","qualname":"::general::identity::Identity::id","value":"fn (_: O) -> Self","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Specific identity.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":51007,"byte_end":51016,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52259,"byte_end":52261,"line_start":69,"line_end":69,"column_start":12,"column_end":14},"name":"Id","qualname":"::general::identity::Id","value":"Id {  }","parent":null,"children":[{"krate":0,"index":1300}],"decl_id":null,"docs":" The universal identity element wrt. a given operator, usually noted `Id` with a\n context-dependent subscript.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52220,"byte_end":52230,"line_start":67,"line_end":67,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52413,"byte_end":52416,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Id<O>>::new","value":"fn () -> Id<O>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity element.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52392,"byte_end":52401,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56295,"byte_end":56310,"line_start":6,"line_end":6,"column_start":11,"column_end":26},"name":"MeetSemilattice","qualname":"::general::lattice::MeetSemilattice","value":"MeetSemilattice: Sized","parent":null,"children":[{"krate":0,"index":399}],"decl_id":null,"docs":" A set where every two elements have an infimum (i.e. greatest lower bound).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56382,"byte_end":56386,"line_start":8,"line_end":8,"column_start":8,"column_end":12},"name":"meet","qualname":"::general::lattice::MeetSemilattice::meet","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" Returns the meet (aka. infimum) of two values.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56510,"byte_end":56525,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"JoinSemilattice","qualname":"::general::lattice::JoinSemilattice","value":"JoinSemilattice: Sized","parent":null,"children":[{"krate":0,"index":401}],"decl_id":null,"docs":" A set where every two elements have a supremum (i.e. smallest upper bound).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56598,"byte_end":56602,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"join","qualname":"::general::lattice::JoinSemilattice::join","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":" Returns the join (aka. supremum) of two values.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56729,"byte_end":56736,"line_start":18,"line_end":18,"column_start":11,"column_end":18},"name":"Lattice","qualname":"::general::lattice::Lattice","value":"Lattice: MeetSemilattice + JoinSemilattice + PartialOrd","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410}],"decl_id":null,"docs":" Partially orderable sets where every two elements have a supremum and infimum.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56869,"byte_end":56878,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"meet_join","qualname":"::general::lattice::Lattice::meet_join","value":"fn (&self, other: &Self) -> (Self, Self)","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Returns the infimum and the supremum simultaneously.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56852,"byte_end":56861,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":57064,"byte_end":57075,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"partial_min","qualname":"::general::lattice::Lattice::partial_min","value":"fn <'a> (&'a self, other: &'a Self) -> Option<&'a Self>","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Return the minimum of `self` and `other` if they are comparable.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":57047,"byte_end":57056,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":57448,"byte_end":57459,"line_start":40,"line_end":40,"column_start":8,"column_end":19},"name":"partial_max","qualname":"::general::lattice::Lattice::partial_max","value":"fn <'a> (&'a self, other: &'a Self) -> Option<&'a Self>","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Return the maximum of `self` and `other` if they are comparable.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":57431,"byte_end":57440,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":57827,"byte_end":57840,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"partial_sort2","qualname":"::general::lattice::Lattice::partial_sort2","value":"fn <'a> (&'a self, other: &'a Self) -> Option<(&'a Self, &'a Self)>","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Sorts two values in increasing order using a partial ordering.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":57810,"byte_end":57819,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":58284,"byte_end":58297,"line_start":67,"line_end":67,"column_start":8,"column_end":21},"name":"partial_clamp","qualname":"::general::lattice::Lattice::partial_clamp","value":"fn <'a> (&'a self, min: &'a Self, max: &'a Self) -> Option<&'a Self>","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n `min` or `max`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":58267,"byte_end":58276,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\module.rs","byte_start":61047,"byte_end":61061,"line_start":22,"line_end":22,"column_start":11,"column_end":25},"name":"AbstractModule","qualname":"::general::module::AbstractModule","value":"AbstractModule<OpGroup: Operator = Additive, OpAdd: Operator = Additive, OpMul: Operator =\n Multiplicative>: AbstractGroupAbelian<OpGroup>","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"decl_id":null,"docs":" A module combines two sets: one with an Abelian group structure and another with a\n commutative ring structure.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\module.rs","byte_start":61248,"byte_end":61260,"line_start":29,"line_end":29,"column_start":10,"column_end":22},"name":"AbstractRing","qualname":"::general::module::AbstractModule::AbstractRing","value":"type AbstractRing: AbstractRingCommutative<OpAdd, OpMul>;","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" The underlying scalar field.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\module.rs","byte_start":61382,"byte_end":61393,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"multiply_by","qualname":"::general::module::AbstractModule::multiply_by","value":"fn (&self, r: Self::AbstractRing) -> Self","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Multiplies an element of the ring with an element of the module.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":62042,"byte_end":62050,"line_start":10,"line_end":10,"column_start":11,"column_end":19},"name":"Operator","qualname":"::general::operator::Operator","value":"Operator: Copy","parent":null,"children":[{"krate":0,"index":451}],"decl_id":null,"docs":" Trait implemented by types representing abstract operators.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":62126,"byte_end":62140,"line_start":12,"line_end":12,"column_start":8,"column_end":22},"name":"operator_token","qualname":"::general::operator::Operator::operator_token","value":"fn () -> Self","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Returns the structure that identifies the operator.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":62353,"byte_end":62368,"line_start":18,"line_end":18,"column_start":11,"column_end":26},"name":"TwoSidedInverse","qualname":"::general::operator::TwoSidedInverse","value":"TwoSidedInverse<O: Operator>: Sized","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455}],"decl_id":null,"docs":" Trait used to define the two_sided_inverse element relative to the given operator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":62563,"byte_end":62580,"line_start":22,"line_end":22,"column_start":8,"column_end":25},"name":"two_sided_inverse","qualname":"::general::operator::TwoSidedInverse::two_sided_inverse","value":"fn (&self) -> Self","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Returns the two_sided_inverse of `self`, relative to the operator `O`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":62773,"byte_end":62794,"line_start":28,"line_end":28,"column_start":8,"column_end":29},"name":"two_sided_inverse_mut","qualname":"::general::operator::TwoSidedInverse::two_sided_inverse_mut","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" In-place inversion of `self`, relative to the operator `O`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":62756,"byte_end":62765,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":62981,"byte_end":62989,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"Additive","qualname":"::general::operator::Additive","value":"","parent":null,"children":[],"decl_id":null,"docs":" The addition operator, commonly symbolized by `+`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":62970,"byte_end":62990,"line_start":41,"line_end":41,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":63088,"byte_end":63102,"line_start":45,"line_end":45,"column_start":12,"column_end":26},"name":"Multiplicative","qualname":"::general::operator::Multiplicative","value":"","parent":null,"children":[],"decl_id":null,"docs":" The multiplication operator, commonly symbolized by `×`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":63077,"byte_end":63103,"line_start":45,"line_end":45,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":64820,"byte_end":64829,"line_start":126,"line_end":126,"column_start":11,"column_end":20},"name":"ClosedAdd","qualname":"::general::operator::ClosedAdd","value":"ClosedAdd<Right = Self>: Sized + Add<Right, Output = Self> + AddAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Add` and `AddAssign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":64990,"byte_end":64999,"line_start":129,"line_end":129,"column_start":11,"column_end":20},"name":"ClosedSub","qualname":"::general::operator::ClosedSub","value":"ClosedSub<Right = Self>: Sized + Sub<Right, Output = Self> + SubAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Sub` and `SubAssign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65160,"byte_end":65169,"line_start":132,"line_end":132,"column_start":11,"column_end":20},"name":"ClosedMul","qualname":"::general::operator::ClosedMul","value":"ClosedMul<Right = Self>: Sized + Mul<Right, Output = Self> + MulAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Mul` and `MulAssign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65330,"byte_end":65339,"line_start":135,"line_end":135,"column_start":11,"column_end":20},"name":"ClosedDiv","qualname":"::general::operator::ClosedDiv","value":"ClosedDiv<Right = Self>: Sized + Div<Right, Output = Self> + DivAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Div` and `DivAssign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65484,"byte_end":65493,"line_start":138,"line_end":138,"column_start":11,"column_end":20},"name":"ClosedNeg","qualname":"::general::operator::ClosedNeg","value":"ClosedNeg: Sized + Neg<Output = Self>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Neg` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":66775,"byte_end":66784,"line_start":26,"line_end":26,"column_start":11,"column_end":20},"name":"RealField","qualname":"::general::real::RealField","value":"RealField: ComplexField<RealField = Self> + RelativeEq<Epsilon = Self> + UlpsEq<Epsilon =\nSelf> + Lattice + Signed + Bounded","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":66262,"byte_end":66284,"line_start":17,"line_end":17,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67121,"byte_end":67137,"line_start":36,"line_end":36,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::general::real::RealField::is_sign_positive","value":"fn (self) -> bool","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67160,"byte_end":67176,"line_start":37,"line_end":37,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::general::real::RealField::is_sign_negative","value":"fn (self) -> bool","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67199,"byte_end":67202,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"name":"max","qualname":"::general::real::RealField::max","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67238,"byte_end":67241,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"min","qualname":"::general::real::RealField::min","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67277,"byte_end":67282,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"atan2","qualname":"::general::real::RealField::atan2","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67319,"byte_end":67321,"line_start":42,"line_end":42,"column_start":8,"column_end":10},"name":"pi","qualname":"::general::real::RealField::pi","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67340,"byte_end":67346,"line_start":43,"line_end":43,"column_start":8,"column_end":14},"name":"two_pi","qualname":"::general::real::RealField::two_pi","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67365,"byte_end":67374,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"frac_pi_2","qualname":"::general::real::RealField::frac_pi_2","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67393,"byte_end":67402,"line_start":45,"line_end":45,"column_start":8,"column_end":17},"name":"frac_pi_3","qualname":"::general::real::RealField::frac_pi_3","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67421,"byte_end":67430,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"frac_pi_4","qualname":"::general::real::RealField::frac_pi_4","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67449,"byte_end":67458,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"frac_pi_6","qualname":"::general::real::RealField::frac_pi_6","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67477,"byte_end":67486,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"frac_pi_8","qualname":"::general::real::RealField::frac_pi_8","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67505,"byte_end":67514,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"frac_1_pi","qualname":"::general::real::RealField::frac_1_pi","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67533,"byte_end":67542,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"frac_2_pi","qualname":"::general::real::RealField::frac_2_pi","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67561,"byte_end":67575,"line_start":51,"line_end":51,"column_start":8,"column_end":22},"name":"frac_2_sqrt_pi","qualname":"::general::real::RealField::frac_2_sqrt_pi","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67595,"byte_end":67596,"line_start":53,"line_end":53,"column_start":8,"column_end":9},"name":"e","qualname":"::general::real::RealField::e","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67615,"byte_end":67621,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"log2_e","qualname":"::general::real::RealField::log2_e","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67640,"byte_end":67647,"line_start":55,"line_end":55,"column_start":8,"column_end":15},"name":"log10_e","qualname":"::general::real::RealField::log10_e","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67666,"byte_end":67670,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"ln_2","qualname":"::general::real::RealField::ln_2","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":67689,"byte_end":67694,"line_start":57,"line_end":57,"column_start":8,"column_end":13},"name":"ln_10","qualname":"::general::real::RealField::ln_10","value":"fn () -> Self","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":71880,"byte_end":71893,"line_start":24,"line_end":24,"column_start":24,"column_end":37},"name":"AdditiveMagma","qualname":"::general::specialized::AdditiveMagma","value":"AdditiveMagma: AbstractMagma<Additive>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":71961,"byte_end":71979,"line_start":25,"line_end":25,"column_start":24,"column_end":42},"name":"AdditiveQuasigroup","qualname":"::general::specialized::AdditiveQuasigroup","value":"AdditiveQuasigroup: AbstractQuasigroup<Additive> + AdditiveMagma + ClosedSub","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72065,"byte_end":72077,"line_start":26,"line_end":26,"column_start":24,"column_end":36},"name":"AdditiveLoop","qualname":"::general::specialized::AdditiveLoop","value":"AdditiveLoop: AbstractLoop<Additive> + AdditiveQuasigroup + ClosedNeg + Zero","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72179,"byte_end":72196,"line_start":27,"line_end":27,"column_start":24,"column_end":41},"name":"AdditiveSemigroup","qualname":"::general::specialized::AdditiveSemigroup","value":"AdditiveSemigroup: AbstractSemigroup<Additive> + AdditiveMagma + ClosedAdd","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1459},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72283,"byte_end":72297,"line_start":28,"line_end":28,"column_start":24,"column_end":38},"name":"AdditiveMonoid","qualname":"::general::specialized::AdditiveMonoid","value":"AdditiveMonoid: AbstractMonoid<Additive> + AdditiveSemigroup + Zero","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72386,"byte_end":72399,"line_start":29,"line_end":29,"column_start":24,"column_end":37},"name":"AdditiveGroup","qualname":"::general::specialized::AdditiveGroup","value":"AdditiveGroup: AbstractGroup<Additive> + AdditiveLoop + AdditiveMonoid","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72494,"byte_end":72514,"line_start":30,"line_end":30,"column_start":24,"column_end":44},"name":"AdditiveGroupAbelian","qualname":"::general::specialized::AdditiveGroupAbelian","value":"AdditiveGroupAbelian: AbstractGroupAbelian<Additive> + AdditiveGroup","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72589,"byte_end":72608,"line_start":32,"line_end":32,"column_start":24,"column_end":43},"name":"MultiplicativeMagma","qualname":"::general::specialized::MultiplicativeMagma","value":"MultiplicativeMagma: AbstractMagma<Multiplicative>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72678,"byte_end":72702,"line_start":33,"line_end":33,"column_start":24,"column_end":48},"name":"MultiplicativeQuasigroup","qualname":"::general::specialized::MultiplicativeQuasigroup","value":"MultiplicativeQuasigroup: AbstractQuasigroup<Multiplicative> + MultiplicativeMagma + ClosedDiv","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72796,"byte_end":72814,"line_start":34,"line_end":34,"column_start":24,"column_end":42},"name":"MultiplicativeLoop","qualname":"::general::specialized::MultiplicativeLoop","value":"MultiplicativeLoop: AbstractLoop<Multiplicative> + MultiplicativeQuasigroup + One","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72913,"byte_end":72936,"line_start":35,"line_end":35,"column_start":24,"column_end":47},"name":"MultiplicativeSemigroup","qualname":"::general::specialized::MultiplicativeSemigroup","value":"MultiplicativeSemigroup: AbstractSemigroup<Multiplicative> + MultiplicativeMagma + ClosedMul","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73031,"byte_end":73051,"line_start":36,"line_end":36,"column_start":24,"column_end":44},"name":"MultiplicativeMonoid","qualname":"::general::specialized::MultiplicativeMonoid","value":"MultiplicativeMonoid: AbstractMonoid<Multiplicative> + MultiplicativeSemigroup + One","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1483},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73147,"byte_end":73166,"line_start":37,"line_end":37,"column_start":24,"column_end":43},"name":"MultiplicativeGroup","qualname":"::general::specialized::MultiplicativeGroup","value":"MultiplicativeGroup: AbstractGroup<Multiplicative> + MultiplicativeLoop + MultiplicativeMonoid","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73275,"byte_end":73301,"line_start":38,"line_end":38,"column_start":24,"column_end":50},"name":"MultiplicativeGroupAbelian","qualname":"::general::specialized::MultiplicativeGroupAbelian","value":"MultiplicativeGroupAbelian: AbstractGroupAbelian<Multiplicative> + MultiplicativeGroup","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73388,"byte_end":73392,"line_start":40,"line_end":40,"column_start":24,"column_end":28},"name":"Ring","qualname":"::general::specialized::Ring","value":"Ring: AbstractRing + AdditiveGroupAbelian + MultiplicativeMonoid","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1492},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73497,"byte_end":73512,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"name":"RingCommutative","qualname":"::general::specialized::RingCommutative","value":"RingCommutative: AbstractRingCommutative + Ring","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73569,"byte_end":73574,"line_start":42,"line_end":42,"column_start":24,"column_end":29},"name":"Field","qualname":"::general::specialized::Field","value":"Field: AbstractField + RingCommutative + MultiplicativeGroupAbelian","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Algebraic structure specialized for one kind of operation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73723,"byte_end":73729,"line_start":45,"line_end":45,"column_start":11,"column_end":17},"name":"Module","qualname":"::general::specialized::Module","value":"Module: AbstractModule<AbstractRing = <Self as Module>::Ring> + AdditiveGroupAbelian +\nClosedMul<<Self as Module>::Ring>","parent":null,"children":[{"krate":0,"index":556}],"decl_id":null,"docs":" A module which overloads the `*` and `+` operators.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73904,"byte_end":73908,"line_start":51,"line_end":51,"column_start":10,"column_end":14},"name":"Ring","qualname":"::general::specialized::Module::Ring","value":"type Ring: RingCommutative;","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" The underlying scalar field.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":75368,"byte_end":75376,"line_start":24,"line_end":24,"column_start":11,"column_end":19},"name":"SubsetOf","qualname":"::general::subset::SubsetOf","value":"SubsetOf<T>: Sized","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"decl_id":null,"docs":" Nested sets and conversions between them (using an injective mapping). Useful to work with\n substructures. In generic code, it is preferable to use `SupersetOf` as trait bound whenever\n possible instead of `SubsetOf` (because SupersetOf is automatically implemented whenever\n `SubsetOf` is).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":75482,"byte_end":75493,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"to_superset","qualname":"::general::subset::SubsetOf::to_superset","value":"fn (&self) -> T","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The inclusion map: converts `self` to the equivalent element of its superset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":75709,"byte_end":75722,"line_start":32,"line_end":32,"column_start":8,"column_end":21},"name":"from_superset","qualname":"::general::subset::SubsetOf::from_superset","value":"fn (element: &T) -> Option<Self>","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The inverse inclusion map: attempts to construct `self` from the equivalent element of its\n superset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":76028,"byte_end":76051,"line_start":41,"line_end":41,"column_start":15,"column_end":38},"name":"from_superset_unchecked","qualname":"::general::subset::SubsetOf::from_superset_unchecked","value":"fn (element: &T) -> Self","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" Use with care! Same as `self.to_superset` but without any property checks. Always succeeds.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":76178,"byte_end":76190,"line_start":44,"line_end":44,"column_start":8,"column_end":20},"name":"is_in_subset","qualname":"::general::subset::SubsetOf::is_in_subset","value":"fn (element: &T) -> bool","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" Checks if `element` is actually part of the subset `Self` (and can be converted to it).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":77362,"byte_end":77372,"line_start":64,"line_end":64,"column_start":11,"column_end":21},"name":"SupersetOf","qualname":"::general::subset::SupersetOf","value":"SupersetOf<T>: Sized","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"decl_id":null,"docs":" Nested sets and conversions between them. Useful to work with substructures. It is preferable\n to implement the `SupersetOf` trait instead of `SubsetOf` whenever possible (because\n `SupersetOf` is automatically implemented whenever `SubsetOf` is.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":77586,"byte_end":77595,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"to_subset","qualname":"::general::subset::SupersetOf::to_subset","value":"fn (&self) -> Option<T>","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" The inverse inclusion map: attempts to construct `self` from the equivalent element of its\n superset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":77855,"byte_end":77867,"line_start":78,"line_end":78,"column_start":8,"column_end":20},"name":"is_in_subset","qualname":"::general::subset::SupersetOf::is_in_subset","value":"fn (&self) -> bool","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Checks if `self` is actually part of its subset `T` (and can be converted to it).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":77997,"byte_end":78016,"line_start":81,"line_end":81,"column_start":15,"column_end":34},"name":"to_subset_unchecked","qualname":"::general::subset::SupersetOf::to_subset_unchecked","value":"fn (&self) -> T","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Use with care! Same as `self.to_subset` but without any property checks. Always succeeds.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":78124,"byte_end":78135,"line_start":84,"line_end":84,"column_start":8,"column_end":19},"name":"from_subset","qualname":"::general::subset::SupersetOf::from_subset","value":"fn (element: &T) -> Self","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" The inclusion map: converts `self` to the equivalent element of its superset.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":82663,"byte_end":82675,"line_start":30,"line_end":30,"column_start":11,"column_end":23},"name":"AbstractRing","qualname":"::general::two_operators::AbstractRing","value":"AbstractRing<A: Operator = Additive, M: Operator = Multiplicative>: AbstractGroupAbelian<A> + AbstractMonoid<M>","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":609}],"decl_id":null,"docs":" A **ring** is the combination of an Abelian group and a multiplicative monoid structure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":82959,"byte_end":82999,"line_start":35,"line_end":35,"column_start":8,"column_end":48},"name":"prop_mul_and_add_are_distributive_approx","qualname":"::general::two_operators::AbstractRing::prop_mul_and_add_are_distributive_approx","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Returns `true` if the multiplication and addition operators are distributive for\n the given argument tuple. Approximate equality is used for verifications.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":83583,"byte_end":83616,"line_start":52,"line_end":52,"column_start":8,"column_end":41},"name":"prop_mul_and_add_are_distributive","qualname":"::general::two_operators::AbstractRing::prop_mul_and_add_are_distributive","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Returns `true` if the multiplication and addition operators are distributive for\n the given argument tuple.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":86008,"byte_end":86031,"line_start":129,"line_end":129,"column_start":11,"column_end":34},"name":"AbstractRingCommutative","qualname":"::general::two_operators::AbstractRingCommutative","value":"AbstractRingCommutative<A: Operator = Additive, M: Operator = Multiplicative>: AbstractRing<A, M>","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":620}],"decl_id":null,"docs":" A ring with a commutative multiplication.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":86274,"byte_end":86304,"line_start":134,"line_end":134,"column_start":8,"column_end":38},"name":"prop_mul_is_commutative_approx","qualname":"::general::two_operators::AbstractRingCommutative::prop_mul_is_commutative_approx","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":" Returns `true` if the multiplication operator is commutative for the given argument tuple.\n Approximate equality is used for verifications.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":86657,"byte_end":86680,"line_start":146,"line_end":146,"column_start":8,"column_end":31},"name":"prop_mul_is_commutative","qualname":"::general::two_operators::AbstractRingCommutative::prop_mul_is_commutative","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":" Returns `true` if the multiplication operator is commutative for the given argument tuple.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":88858,"byte_end":88871,"line_start":213,"line_end":213,"column_start":11,"column_end":24},"name":"AbstractField","qualname":"::general::two_operators::AbstractField","value":"AbstractField<A: Operator = Additive, M: Operator = Multiplicative>: AbstractRingCommutative<A, M> + AbstractGroupAbelian<M>","parent":null,"children":[],"decl_id":null,"docs":" A field is a commutative ring, and an Abelian group under both operators.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapper","qualname":"::general::wrapper","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":649},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":2034},{"krate":0,"index":2041},{"krate":0,"index":658},{"krate":0,"index":662},{"krate":0,"index":667},{"krate":0,"index":672},{"krate":0,"index":677},{"krate":0,"index":682},{"krate":0,"index":687},{"krate":0,"index":694},{"krate":0,"index":700},{"krate":0,"index":706},{"krate":0,"index":712},{"krate":0,"index":718},{"krate":0,"index":724},{"krate":0,"index":730},{"krate":0,"index":735}],"decl_id":null,"docs":" Wrappers that attach an algebraic structure with a value type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":91981,"byte_end":91988,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Wrapper","qualname":"::general::wrapper::Wrapper","value":"Wrapper { val }","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040}],"decl_id":null,"docs":" Wrapper that allows to use operators on algebraic types.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2038},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92008,"byte_end":92011,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"name":"val","qualname":"::general::wrapper::Wrapper::val","value":"T","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92603,"byte_end":92606,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Wrapper<T, A, M>>::new","value":"fn (val: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12476,"byte_end":12480,"line_start":198,"line_end":198,"column_start":11,"column_end":15},"name":"Real","qualname":"::general::Real","value":"Real: RealField","parent":null,"children":[],"decl_id":null,"docs":" The field of reals. This has been renamed to `RealField`.\n","sig":null,"attributes":[{"value":"deprecated(note = \"This has been renamed `RealField`.\")","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12345,"byte_end":12403,"line_start":196,"line_end":196,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linear","qualname":"::linear","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\mod.rs","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":751},{"krate":0,"index":762},{"krate":0,"index":770},{"krate":0,"index":831},{"krate":0,"index":869},{"krate":0,"index":981}],"decl_id":null,"docs":" Traits dedicated to linear algebra.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99194,"byte_end":99200,"line_start":7,"line_end":7,"column_start":11,"column_end":17},"name":"Matrix","qualname":"::linear::matrix::Matrix","value":"Matrix: Sized + Clone + Mul<<Self as Matrix>::Row, Output = <Self as Matrix>::Column>","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"decl_id":null,"docs":" The space of all matrices.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99325,"byte_end":99330,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Field","qualname":"::linear::matrix::Matrix::Field","value":"type Field: Field;","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" The underlying field.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99390,"byte_end":99393,"line_start":14,"line_end":14,"column_start":10,"column_end":13},"name":"Row","qualname":"::linear::matrix::Matrix::Row","value":"type Row: FiniteDimVectorSpace<Field = Self::Field>;","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" The type of rows of this matrix.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99492,"byte_end":99498,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Column","qualname":"::linear::matrix::Matrix::Column","value":"type Column: FiniteDimVectorSpace<Field = Self::Field>;","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" The type of columns of this matrix.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99596,"byte_end":99605,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"Transpose","qualname":"::linear::matrix::Matrix::Transpose","value":"type Transpose: Matrix<Field = Self::Field, Row = Self::Column, Column = Self::Row>;","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" The type of the transposed matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99727,"byte_end":99732,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"nrows","qualname":"::linear::matrix::Matrix::nrows","value":"fn (&self) -> usize","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" The number of rows of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99804,"byte_end":99812,"line_start":26,"line_end":26,"column_start":8,"column_end":16},"name":"ncolumns","qualname":"::linear::matrix::Matrix::ncolumns","value":"fn (&self) -> usize","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" The number of columns of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99875,"byte_end":99878,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"row","qualname":"::linear::matrix::Matrix::row","value":"fn (&self, i: usize) -> Self::Row","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" The i-th row of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99958,"byte_end":99964,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"column","qualname":"::linear::matrix::Matrix::column","value":"fn (&self, i: usize) -> Self::Column","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" The i-th column of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":100106,"byte_end":100119,"line_start":35,"line_end":35,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::linear::matrix::Matrix::get_unchecked","value":"fn (&self, i: usize, j: usize) -> Self::Field","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Gets the component at row `i` and column `j` of this matrix without bound checking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":100240,"byte_end":100243,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"name":"get","qualname":"::linear::matrix::Matrix::get","value":"fn (&self, i: usize, j: usize) -> Self::Field","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Gets the component at row `i` and column `j` of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":100512,"byte_end":100521,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"transpose","qualname":"::linear::matrix::Matrix::transpose","value":"fn (&self) -> Self::Transpose","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Transposes this matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":100665,"byte_end":100674,"line_start":52,"line_end":52,"column_start":11,"column_end":20},"name":"MatrixMut","qualname":"::linear::matrix::MatrixMut","value":"MatrixMut: Matrix","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856}],"decl_id":null,"docs":" The space of all matrices that are stable under modifications of its components, rows and columns.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":100748,"byte_end":100755,"line_start":55,"line_end":55,"column_start":8,"column_end":15},"name":"set_row","qualname":"::linear::matrix::MatrixMut::set_row","value":"fn (&self, i: usize, row: &Self::Row) -> Self","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Sets the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":100731,"byte_end":100740,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":100946,"byte_end":100957,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"set_row_mut","qualname":"::linear::matrix::MatrixMut::set_row_mut","value":"fn (&mut self, i: usize, row: &Self::Row) -> ()","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" In-place sets the i-th row of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":101061,"byte_end":101071,"line_start":66,"line_end":66,"column_start":8,"column_end":18},"name":"set_column","qualname":"::linear::matrix::MatrixMut::set_column","value":"fn (&self, i: usize, col: &Self::Column) -> Self","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Sets the i-th col of this matrix.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":101044,"byte_end":101053,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":101268,"byte_end":101282,"line_start":73,"line_end":73,"column_start":8,"column_end":22},"name":"set_column_mut","qualname":"::linear::matrix::MatrixMut::set_column_mut","value":"fn (&mut self, i: usize, col: &Self::Column) -> ()","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" In-place sets the i-th col of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":101432,"byte_end":101445,"line_start":76,"line_end":76,"column_start":15,"column_end":28},"name":"set_unchecked","qualname":"::linear::matrix::MatrixMut::set_unchecked","value":"fn (&mut self, i: usize, j: usize, val: Self::Field) -> ()","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Sets the component at row `i` and column `j` of this matrix without bound checking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":101573,"byte_end":101576,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"set","qualname":"::linear::matrix::MatrixMut::set","value":"fn (&mut self, i: usize, j: usize, val: Self::Field) -> ()","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Sets the component at row `i` and column `j` of this matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":101900,"byte_end":101912,"line_start":90,"line_end":90,"column_start":11,"column_end":23},"name":"SquareMatrix","qualname":"::linear::matrix::SquareMatrix","value":"SquareMatrix: Matrix<Row = <Self as SquareMatrix>::Vector, Column =\n<Self as SquareMatrix>::Vector, Transpose = Self> + MultiplicativeMonoid","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863}],"decl_id":null,"docs":" The monoid of all square matrices, including non-inversible ones.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102150,"byte_end":102156,"line_start":98,"line_end":98,"column_start":10,"column_end":16},"name":"Vector","qualname":"::linear::matrix::SquareMatrix::Vector","value":"type Vector: FiniteDimVectorSpace<Field = Self::Field>;","parent":{"krate":0,"index":857},"children":[],"decl_id":null,"docs":" The type of rows, column, and diagonal of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102246,"byte_end":102254,"line_start":101,"line_end":101,"column_start":8,"column_end":16},"name":"diagonal","qualname":"::linear::matrix::SquareMatrix::diagonal","value":"fn (&self) -> Self::Vector","parent":{"krate":0,"index":857},"children":[],"decl_id":null,"docs":" The diagonal of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102327,"byte_end":102338,"line_start":104,"line_end":104,"column_start":8,"column_end":19},"name":"determinant","qualname":"::linear::matrix::SquareMatrix::determinant","value":"fn (&self) -> Self::Field","parent":{"krate":0,"index":857},"children":[],"decl_id":null,"docs":" The determinant of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102489,"byte_end":102500,"line_start":109,"line_end":109,"column_start":8,"column_end":19},"name":"try_inverse","qualname":"::linear::matrix::SquareMatrix::try_inverse","value":"fn (&self) -> Option<Self>","parent":{"krate":0,"index":857},"children":[],"decl_id":null,"docs":" Attempts to two_sided_inverse `self`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102472,"byte_end":102481,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102600,"byte_end":102609,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"dimension","qualname":"::linear::matrix::SquareMatrix::dimension","value":"fn (&self) -> usize","parent":{"krate":0,"index":857},"children":[],"decl_id":null,"docs":" The number of rows or column of this matrix.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102583,"byte_end":102592,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102709,"byte_end":102722,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"transpose_mut","qualname":"::linear::matrix::SquareMatrix::transpose_mut","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":857},"children":[],"decl_id":null,"docs":" In-place transposition.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102692,"byte_end":102701,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102886,"byte_end":102901,"line_start":125,"line_end":125,"column_start":11,"column_end":26},"name":"SquareMatrixMut","qualname":"::linear::matrix::SquareMatrixMut","value":"SquareMatrixMut: SquareMatrix + MatrixMut<Row = <Self as SquareMatrix>::Vector, Column =\n<Self as SquareMatrix>::Vector, Transpose = Self>","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867}],"decl_id":null,"docs":" The monoid of all mutable square matrices that are stable under modification of its diagonal.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":103115,"byte_end":103128,"line_start":134,"line_end":134,"column_start":8,"column_end":21},"name":"from_diagonal","qualname":"::linear::matrix::SquareMatrixMut::from_diagonal","value":"fn (diag: &Self::Vector) -> Self","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Constructs a new diagonal matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":103215,"byte_end":103227,"line_start":138,"line_end":138,"column_start":8,"column_end":20},"name":"set_diagonal","qualname":"::linear::matrix::SquareMatrixMut::set_diagonal","value":"fn (&self, diag: &Self::Vector) -> Self","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Sets the matrix diagonal.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":103198,"byte_end":103207,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":103407,"byte_end":103423,"line_start":145,"line_end":145,"column_start":8,"column_end":24},"name":"set_diagonal_mut","qualname":"::linear::matrix::SquareMatrixMut::set_diagonal_mut","value":"fn (&mut self, diag: &Self::Vector) -> ()","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" In-place sets the matrix diagonal.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":103577,"byte_end":103599,"line_start":150,"line_end":150,"column_start":11,"column_end":33},"name":"InversibleSquareMatrix","qualname":"::linear::matrix::InversibleSquareMatrix","value":"InversibleSquareMatrix: SquareMatrix + MultiplicativeGroup","parent":null,"children":[],"decl_id":null,"docs":" The group of inversible matrix. Commonly known as the General Linear group `GL(n)` by\n algebraists.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":104063,"byte_end":104077,"line_start":10,"line_end":10,"column_start":11,"column_end":25},"name":"Transformation","qualname":"::linear::transformation::Transformation","value":"Transformation<E: EuclideanSpace>: MultiplicativeMonoid","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887}],"decl_id":null,"docs":" A general transformation acting on an euclidean space. It may not be inversible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":104201,"byte_end":104216,"line_start":12,"line_end":12,"column_start":8,"column_end":23},"name":"transform_point","qualname":"::linear::transformation::Transformation::transform_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":" Applies this group's action on a point from the euclidean space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":104492,"byte_end":104508,"line_start":18,"line_end":18,"column_start":8,"column_end":24},"name":"transform_vector","qualname":"::linear::transformation::Transformation::transform_vector","value":"fn (&self, v: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":" Applies this group's action on a vector from the euclidean space.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":104647,"byte_end":104671,"line_start":22,"line_end":22,"column_start":11,"column_end":35},"name":"ProjectiveTransformation","qualname":"::linear::transformation::ProjectiveTransformation","value":"ProjectiveTransformation<E: EuclideanSpace>: MultiplicativeGroup + Transformation<E>","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891}],"decl_id":null,"docs":" The most general form of invertible transformations on an euclidean space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":104836,"byte_end":104859,"line_start":26,"line_end":26,"column_start":8,"column_end":31},"name":"inverse_transform_point","qualname":"::linear::transformation::ProjectiveTransformation::inverse_transform_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Applies this group's two_sided_inverse action on a point from the euclidean space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":105153,"byte_end":105177,"line_start":32,"line_end":32,"column_start":8,"column_end":32},"name":"inverse_transform_vector","qualname":"::linear::transformation::ProjectiveTransformation::inverse_transform_vector","value":"fn (&self, v: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Applies this group's two_sided_inverse action on a vector from the euclidean space.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":105406,"byte_end":105426,"line_start":37,"line_end":37,"column_start":11,"column_end":31},"name":"AffineTransformation","qualname":"::linear::transformation::AffineTransformation","value":"AffineTransformation<E: EuclideanSpace>: ProjectiveTransformation<E>","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904}],"decl_id":null,"docs":" The group of affine transformations. They are decomposable into a rotation, a non-uniform\n scaling, a second rotation, and a translation (applied in that order).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":105536,"byte_end":105544,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"name":"Rotation","qualname":"::linear::transformation::AffineTransformation::Rotation","value":"type Rotation: Rotation<E>;","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Type of the first rotation to be applied.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":105623,"byte_end":105640,"line_start":41,"line_end":41,"column_start":10,"column_end":27},"name":"NonUniformScaling","qualname":"::linear::transformation::AffineTransformation::NonUniformScaling","value":"type NonUniformScaling: AffineTransformation<E>;","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Type of the non-uniform scaling to be applied.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":105753,"byte_end":105764,"line_start":43,"line_end":43,"column_start":10,"column_end":21},"name":"Translation","qualname":"::linear::transformation::AffineTransformation::Translation","value":"type Translation: Translation<E>;","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" The type of the pure translation part of this affine transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":105946,"byte_end":105955,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"decompose","qualname":"::linear::transformation::AffineTransformation::decompose","value":"fn (&self) -> (Self::Translation, Self::Rotation, Self::NonUniformScaling, Self::Rotation)","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Decomposes this affine transformation into a rotation followed by a non-uniform scaling,\n followed by a rotation, followed by a translation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":106247,"byte_end":106265,"line_start":61,"line_end":61,"column_start":8,"column_end":26},"name":"append_translation","qualname":"::linear::transformation::AffineTransformation::append_translation","value":"fn (&self, t: &Self::Translation) -> Self","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Appends a translation to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":106364,"byte_end":106383,"line_start":64,"line_end":64,"column_start":8,"column_end":27},"name":"prepend_translation","qualname":"::linear::transformation::AffineTransformation::prepend_translation","value":"fn (&self, t: &Self::Translation) -> Self","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Prepends a translation to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":106478,"byte_end":106493,"line_start":67,"line_end":67,"column_start":8,"column_end":23},"name":"append_rotation","qualname":"::linear::transformation::AffineTransformation::append_rotation","value":"fn (&self, r: &Self::Rotation) -> Self","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Appends a rotation to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":106586,"byte_end":106602,"line_start":70,"line_end":70,"column_start":8,"column_end":24},"name":"prepend_rotation","qualname":"::linear::transformation::AffineTransformation::prepend_rotation","value":"fn (&self, r: &Self::Rotation) -> Self","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Prepends a rotation to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":106700,"byte_end":106714,"line_start":73,"line_end":73,"column_start":8,"column_end":22},"name":"append_scaling","qualname":"::linear::transformation::AffineTransformation::append_scaling","value":"fn (&self, s: &Self::NonUniformScaling) -> Self","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Appends a scaling factor to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":106822,"byte_end":106837,"line_start":76,"line_end":76,"column_start":8,"column_end":23},"name":"prepend_scaling","qualname":"::linear::transformation::AffineTransformation::prepend_scaling","value":"fn (&self, s: &Self::NonUniformScaling) -> Self","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Prepends a scaling factor to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":107156,"byte_end":107181,"line_start":84,"line_end":84,"column_start":8,"column_end":33},"name":"append_rotation_wrt_point","qualname":"::linear::transformation::AffineTransformation::append_rotation_wrt_point","value":"fn (&self, r: &Self::Rotation, p: &E) -> Option<Self>","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Appends to this similarity a rotation centered at the point `p`, i.e., this point is left\n invariant.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":107139,"byte_end":107148,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":107747,"byte_end":107757,"line_start":101,"line_end":101,"column_start":11,"column_end":21},"name":"Similarity","qualname":"::linear::transformation::Similarity","value":"Similarity<E: EuclideanSpace>: AffineTransformation<E, NonUniformScaling = <Self as Similarity<E>>::Scaling>","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920}],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":107958,"byte_end":107965,"line_start":105,"line_end":105,"column_start":10,"column_end":17},"name":"Scaling","qualname":"::linear::transformation::Similarity::Scaling","value":"type Scaling: Scaling<E>;","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" The type of the pure (uniform) scaling part of this similarity transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":108107,"byte_end":108118,"line_start":111,"line_end":111,"column_start":8,"column_end":19},"name":"translation","qualname":"::linear::transformation::Similarity::translation","value":"fn (&self) -> Self::Translation","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" The pure translational component of this similarity transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":108229,"byte_end":108237,"line_start":114,"line_end":114,"column_start":8,"column_end":16},"name":"rotation","qualname":"::linear::transformation::Similarity::rotation","value":"fn (&self) -> Self::Rotation","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" The pure rotational component of this similarity transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":108342,"byte_end":108349,"line_start":117,"line_end":117,"column_start":8,"column_end":15},"name":"scaling","qualname":"::linear::transformation::Similarity::scaling","value":"fn (&self) -> Self::Scaling","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" The pure scaling component of this similarity transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":108510,"byte_end":108525,"line_start":124,"line_end":124,"column_start":8,"column_end":23},"name":"translate_point","qualname":"::linear::transformation::Similarity::translate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Applies this transformation's pure translational part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":108493,"byte_end":108502,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":108694,"byte_end":108706,"line_start":130,"line_end":130,"column_start":8,"column_end":20},"name":"rotate_point","qualname":"::linear::transformation::Similarity::rotate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Applies this transformation's pure rotational part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":108677,"byte_end":108686,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":108869,"byte_end":108880,"line_start":136,"line_end":136,"column_start":8,"column_end":19},"name":"scale_point","qualname":"::linear::transformation::Similarity::scale_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Applies this transformation's pure scaling part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":108852,"byte_end":108861,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":109046,"byte_end":109059,"line_start":142,"line_end":142,"column_start":8,"column_end":21},"name":"rotate_vector","qualname":"::linear::transformation::Similarity::rotate_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Applies this transformation's pure rotational part to a vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":109029,"byte_end":109038,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":109250,"byte_end":109262,"line_start":148,"line_end":148,"column_start":8,"column_end":20},"name":"scale_vector","qualname":"::linear::transformation::Similarity::scale_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Applies this transformation's pure scaling part to a vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":109233,"byte_end":109242,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":109512,"byte_end":109535,"line_start":157,"line_end":157,"column_start":8,"column_end":31},"name":"inverse_translate_point","qualname":"::linear::transformation::Similarity::inverse_translate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Applies this transformation inverse's pure translational part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":109495,"byte_end":109504,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":109720,"byte_end":109740,"line_start":163,"line_end":163,"column_start":8,"column_end":28},"name":"inverse_rotate_point","qualname":"::linear::transformation::Similarity::inverse_rotate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Applies this transformation inverse's pure rotational part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":109703,"byte_end":109712,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":109919,"byte_end":109938,"line_start":169,"line_end":169,"column_start":8,"column_end":27},"name":"inverse_scale_point","qualname":"::linear::transformation::Similarity::inverse_scale_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Applies this transformation inverse's pure scaling part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":109902,"byte_end":109911,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":110120,"byte_end":110141,"line_start":175,"line_end":175,"column_start":8,"column_end":29},"name":"inverse_rotate_vector","qualname":"::linear::transformation::Similarity::inverse_rotate_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Applies this transformation inverse's pure rotational part to a vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":110103,"byte_end":110112,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":110348,"byte_end":110368,"line_start":181,"line_end":181,"column_start":8,"column_end":28},"name":"inverse_scale_vector","qualname":"::linear::transformation::Similarity::inverse_scale_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Applies this transformation inverse's pure scaling part to a vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":110331,"byte_end":110340,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":110579,"byte_end":110587,"line_start":187,"line_end":187,"column_start":11,"column_end":19},"name":"Isometry","qualname":"::linear::transformation::Isometry","value":"Isometry<E: EuclideanSpace>: Similarity<E, Scaling = Id>","parent":null,"children":[],"decl_id":null,"docs":" Subgroups of the isometry group `E(n)`, i.e., rotations, reflexions, and translations.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":110752,"byte_end":110766,"line_start":190,"line_end":190,"column_start":11,"column_end":25},"name":"DirectIsometry","qualname":"::linear::transformation::DirectIsometry","value":"DirectIsometry<E: EuclideanSpace>: Isometry<E>","parent":null,"children":[],"decl_id":null,"docs":" Subgroups of the orientation-preserving isometry group `SE(n)`, i.e., rotations and translations.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":110878,"byte_end":110902,"line_start":193,"line_end":193,"column_start":11,"column_end":35},"name":"OrthogonalTransformation","qualname":"::linear::transformation::OrthogonalTransformation","value":"OrthogonalTransformation<E: EuclideanSpace>: Isometry<E, Translation = Id>","parent":null,"children":[],"decl_id":null,"docs":" Subgroups of the n-dimensional rotations and scaling `O(n)`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":111020,"byte_end":111027,"line_start":196,"line_end":196,"column_start":11,"column_end":18},"name":"Scaling","qualname":"::linear::transformation::Scaling","value":"Scaling<E: EuclideanSpace>: AffineTransformation<E, NonUniformScaling = Self, Translation = Id, Rotation =\nId> + SubsetOf<E::RealField>","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932}],"decl_id":null,"docs":" Subgroups of the (signed) uniform scaling group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":111265,"byte_end":111272,"line_start":202,"line_end":202,"column_start":8,"column_end":15},"name":"to_real","qualname":"::linear::transformation::Scaling::to_real","value":"fn (&self) -> E::RealField","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" Converts this scaling factor to a real. Same as `self.to_superset()`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":111248,"byte_end":111257,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":111534,"byte_end":111543,"line_start":209,"line_end":209,"column_start":8,"column_end":17},"name":"from_real","qualname":"::linear::transformation::Scaling::from_real","value":"fn (r: E::RealField) -> Option<Self>","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" Attempts to convert a real to an element of this scaling subgroup. Same as\n `Self::from_superset()`. Returns `None` if no such scaling is possible for this subgroup.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":111517,"byte_end":111526,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":111810,"byte_end":111814,"line_start":216,"line_end":216,"column_start":8,"column_end":12},"name":"powf","qualname":"::linear::transformation::Scaling::powf","value":"fn (&self, n: E::RealField) -> Option<Self>","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" Raises the scaling to a power. The result must be equivalent to\n `self.to_superset().powf(n)`. Returns `None` if the result is not representable by `Self`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":111793,"byte_end":111802,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":112056,"byte_end":112069,"line_start":223,"line_end":223,"column_start":8,"column_end":21},"name":"scale_between","qualname":"::linear::transformation::Scaling::scale_between","value":"fn (a: &E::Coordinates, b: &E::Coordinates) -> Option<Self>","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" The scaling required to make `a` have the same norm as `b`, i.e., `|b| = |a| * norm_ratio(a,\n b)`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":112039,"byte_end":112048,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":112260,"byte_end":112271,"line_start":229,"line_end":229,"column_start":11,"column_end":22},"name":"Translation","qualname":"::linear::transformation::Translation","value":"Translation<E: EuclideanSpace>: DirectIsometry<E, Translation = Self, Rotation = Id>","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938}],"decl_id":null,"docs":" Subgroups of the n-dimensional translation group `T(n)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":112778,"byte_end":112787,"line_start":237,"line_end":237,"column_start":8,"column_end":17},"name":"to_vector","qualname":"::linear::transformation::Translation::to_vector","value":"fn (&self) -> E::Coordinates","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":" Converts this translation to a vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":113004,"byte_end":113015,"line_start":241,"line_end":241,"column_start":8,"column_end":19},"name":"from_vector","qualname":"::linear::transformation::Translation::from_vector","value":"fn (v: E::Coordinates) -> Option<Self>","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":" Attempts to convert a vector to this translation. Returns `None` if the translation\n represented by `v` is not part of the translation subgroup represented by `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":113246,"byte_end":113250,"line_start":246,"line_end":246,"column_start":8,"column_end":12},"name":"powf","qualname":"::linear::transformation::Translation::powf","value":"fn (&self, n: E::RealField) -> Option<Self>","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":" Raises the translation to a power. The result must be equivalent to\n `self.to_superset() * n`.  Returns `None` if the result is not representable by `Self`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":113229,"byte_end":113238,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":113469,"byte_end":113488,"line_start":252,"line_end":252,"column_start":8,"column_end":27},"name":"translation_between","qualname":"::linear::transformation::Translation::translation_between","value":"fn (a: &E, b: &E) -> Option<Self>","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":" The translation needed to make `a` coincide with `b`, i.e., `b = a * translation_to(a, b)`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":113452,"byte_end":113461,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":113648,"byte_end":113656,"line_start":258,"line_end":258,"column_start":11,"column_end":19},"name":"Rotation","qualname":"::linear::transformation::Rotation","value":"Rotation<E: EuclideanSpace>: OrthogonalTransformation<E, Rotation = Self> + DirectIsometry<E, Rotation =\nSelf>","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943}],"decl_id":null,"docs":" Subgroups of the n-dimensional rotation group `SO(n)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":113923,"byte_end":113927,"line_start":263,"line_end":263,"column_start":8,"column_end":12},"name":"powf","qualname":"::linear::transformation::Rotation::powf","value":"fn (&self, n: E::RealField) -> Option<Self>","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Raises this rotation to a power. If this is a simple rotation, the result must be\n equivalent to multiplying the rotation angle by `n`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":114298,"byte_end":114314,"line_start":269,"line_end":269,"column_start":8,"column_end":24},"name":"rotation_between","qualname":"::linear::transformation::Rotation::rotation_between","value":"fn (a: &E::Coordinates, b: &E::Coordinates) -> Option<Self>","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Computes a simple rotation that makes the angle between `a` and `b` equal to zero, i.e.,\n `b.angle(a * delta_rotation(a, b)) = 0`. If `a` and `b` are collinear, the computed\n rotation may not be unique. Returns `None` if no such simple rotation exists in the\n subgroup represented by `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":114624,"byte_end":114647,"line_start":276,"line_end":276,"column_start":8,"column_end":31},"name":"scaled_rotation_between","qualname":"::linear::transformation::Rotation::scaled_rotation_between","value":"fn (a: &E::Coordinates, b: &E::Coordinates, s: E::RealField) -> Option<Self>","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Computes the rotation between `a` and `b` and raises it to the power `n`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":114607,"byte_end":114616,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":118071,"byte_end":118082,"line_start":11,"line_end":11,"column_start":11,"column_end":22},"name":"VectorSpace","qualname":"::linear::vector::VectorSpace","value":"VectorSpace: Module<Ring = <Self as VectorSpace>::Field>","parent":null,"children":[{"krate":0,"index":1005}],"decl_id":null,"docs":" A vector space has a module structure over a field instead of a ring.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":118224,"byte_end":118229,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Field","qualname":"::linear::vector::VectorSpace::Field","value":"type Field: Field;","parent":{"krate":0,"index":1004},"children":[],"decl_id":null,"docs":" The underlying scalar field.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":118278,"byte_end":118289,"line_start":20,"line_end":20,"column_start":11,"column_end":22},"name":"NormedSpace","qualname":"::linear::vector::NormedSpace","value":"NormedSpace: VectorSpace<Field = <Self as NormedSpace>::ComplexField>","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014}],"decl_id":null,"docs":" A normed vector space.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":118462,"byte_end":118471,"line_start":22,"line_end":22,"column_start":10,"column_end":19},"name":"RealField","qualname":"::linear::vector::NormedSpace::RealField","value":"type RealField: RealField;","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" The result of the norm (not necessarily the same same as the field used by this vector space).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":118554,"byte_end":118566,"line_start":24,"line_end":24,"column_start":10,"column_end":22},"name":"ComplexField","qualname":"::linear::vector::NormedSpace::ComplexField","value":"type ComplexField: ComplexField<RealField = Self::RealField>;","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" The field of this space must be this complex number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":118660,"byte_end":118672,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"norm_squared","qualname":"::linear::vector::NormedSpace::norm_squared","value":"fn (&self) -> Self::RealField","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" The squared norm of this vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":118741,"byte_end":118745,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"norm","qualname":"::linear::vector::NormedSpace::norm","value":"fn (&self) -> Self::RealField","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" The norm of this vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":118834,"byte_end":118843,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"normalize","qualname":"::linear::vector::NormedSpace::normalize","value":"fn (&self) -> Self","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" Returns a normalized version of this vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":118930,"byte_end":118943,"line_start":36,"line_end":36,"column_start":8,"column_end":21},"name":"normalize_mut","qualname":"::linear::vector::NormedSpace::normalize_mut","value":"fn (&mut self) -> Self::RealField","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" Normalizes this vector in-place and returns its norm.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":119081,"byte_end":119094,"line_start":39,"line_end":39,"column_start":8,"column_end":21},"name":"try_normalize","qualname":"::linear::vector::NormedSpace::try_normalize","value":"fn (&self, eps: Self::RealField) -> Option<Self>","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" Returns a normalized version of this vector unless its norm as smaller or equal to `eps`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":119334,"byte_end":119351,"line_start":44,"line_end":44,"column_start":8,"column_end":25},"name":"try_normalize_mut","qualname":"::linear::vector::NormedSpace::try_normalize_mut","value":"fn (&mut self, eps: Self::RealField) -> Option<Self::RealField>","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" Normalizes this vector in-place or does nothing if its norm is smaller or equal to `eps`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":119661,"byte_end":119671,"line_start":51,"line_end":51,"column_start":11,"column_end":21},"name":"InnerSpace","qualname":"::linear::vector::InnerSpace","value":"InnerSpace: NormedSpace","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017}],"decl_id":null,"docs":" A vector space equipped with an inner product.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":119753,"byte_end":119766,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"inner_product","qualname":"::linear::vector::InnerSpace::inner_product","value":"fn (&self, other: &Self) -> Self::ComplexField","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Computes the inner product of `self` with `other`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":119881,"byte_end":119886,"line_start":57,"line_end":57,"column_start":8,"column_end":13},"name":"angle","qualname":"::linear::vector::InnerSpace::angle","value":"fn (&self, other: &Self) -> Self::RealField","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Measures the angle between two vectors.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":119864,"byte_end":119873,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":120471,"byte_end":120491,"line_start":79,"line_end":79,"column_start":11,"column_end":31},"name":"FiniteDimVectorSpace","qualname":"::linear::vector::FiniteDimVectorSpace","value":"FiniteDimVectorSpace: VectorSpace + Index<usize, Output = <Self as VectorSpace>::Field> +\nIndexMut<usize, Output = <Self as VectorSpace>::Field>","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"decl_id":null,"docs":" A finite-dimensional vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":120673,"byte_end":120682,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"dimension","qualname":"::linear::vector::FiniteDimVectorSpace::dimension","value":"fn () -> usize","parent":{"krate":0,"index":1018},"children":[],"decl_id":null,"docs":" The vector space dimension.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":120921,"byte_end":120936,"line_start":90,"line_end":90,"column_start":8,"column_end":23},"name":"canonical_basis","qualname":"::linear::vector::FiniteDimVectorSpace::canonical_basis","value":"fn <F> (mut f: F) -> ()","parent":{"krate":0,"index":1018},"children":[],"decl_id":null,"docs":" Applies the given closule to each element of this vector space's canonical basis. Stops if\n `f` returns `false`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":121173,"byte_end":121196,"line_start":99,"line_end":99,"column_start":8,"column_end":31},"name":"canonical_basis_element","qualname":"::linear::vector::FiniteDimVectorSpace::canonical_basis_element","value":"fn (i: usize) -> Self","parent":{"krate":0,"index":1018},"children":[],"decl_id":null,"docs":" The i-the canonical basis element.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":121269,"byte_end":121272,"line_start":102,"line_end":102,"column_start":8,"column_end":11},"name":"dot","qualname":"::linear::vector::FiniteDimVectorSpace::dot","value":"fn (&self, other: &Self) -> Self::Field","parent":{"krate":0,"index":1018},"children":[],"decl_id":null,"docs":" The dot product between two vectors.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":121380,"byte_end":121399,"line_start":105,"line_end":105,"column_start":15,"column_end":34},"name":"component_unchecked","qualname":"::linear::vector::FiniteDimVectorSpace::component_unchecked","value":"fn (&self, i: usize) -> &Self::Field","parent":{"krate":0,"index":1018},"children":[],"decl_id":null,"docs":" Same as `&self[i]` but without bound-checking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":121508,"byte_end":121531,"line_start":108,"line_end":108,"column_start":15,"column_end":38},"name":"component_unchecked_mut","qualname":"::linear::vector::FiniteDimVectorSpace::component_unchecked_mut","value":"fn (&mut self, i: usize) -> &mut Self::Field","parent":{"krate":0,"index":1018},"children":[],"decl_id":null,"docs":" Same as `&mut self[i]` but without bound-checking.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":121701,"byte_end":121720,"line_start":113,"line_end":113,"column_start":11,"column_end":30},"name":"FiniteDimInnerSpace","qualname":"::linear::vector::FiniteDimInnerSpace","value":"FiniteDimInnerSpace: InnerSpace + FiniteDimVectorSpace<Field = <Self as NormedSpace>::ComplexField>","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028}],"decl_id":null,"docs":" A finite-dimensional vector space equipped with an inner product that must coincide\n with the dot product.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":122075,"byte_end":122089,"line_start":119,"line_end":119,"column_start":8,"column_end":22},"name":"orthonormalize","qualname":"::linear::vector::FiniteDimInnerSpace::orthonormalize","value":"fn (vs: &mut [Self]) -> usize","parent":{"krate":0,"index":1026},"children":[],"decl_id":null,"docs":" Orthonormalizes the given family of vectors. The largest free family of vectors is moved at\n the beginning of the array and its size is returned. Vectors at an indices larger or equal to\n this length can be modified to an arbitrary value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":122422,"byte_end":122448,"line_start":125,"line_end":125,"column_start":8,"column_end":34},"name":"orthonormal_subspace_basis","qualname":"::linear::vector::FiniteDimInnerSpace::orthonormal_subspace_basis","value":"fn <F> (vs: &[Self], f: F) -> ()","parent":{"krate":0,"index":1026},"children":[],"decl_id":null,"docs":" Applies the given closure to each element of the orthonormal basis of the subspace\n orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is\n unspecified.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":122626,"byte_end":122637,"line_start":130,"line_end":130,"column_start":11,"column_end":22},"name":"AffineSpace","qualname":"::linear::vector::AffineSpace","value":"AffineSpace: Sized + Clone + PartialEq + Sub<Self, Output =\n<Self as AffineSpace>::Translation> +\nClosedAdd<<Self as AffineSpace>::Translation>","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033}],"decl_id":null,"docs":" A set points associated with a vector space and a transitive and free additive group action\n (the translation).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":122838,"byte_end":122849,"line_start":138,"line_end":138,"column_start":10,"column_end":21},"name":"Translation","qualname":"::linear::vector::AffineSpace::Translation","value":"type Translation: VectorSpace;","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" The associated vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":123016,"byte_end":123028,"line_start":143,"line_end":143,"column_start":8,"column_end":20},"name":"translate_by","qualname":"::linear::vector::AffineSpace::translate_by","value":"fn (&self, t: &Self::Translation) -> Self","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Same as `*self + *t`. Applies the additive group action of this affine space's associated\n vector space on `self`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":122999,"byte_end":123008,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":123264,"byte_end":123272,"line_start":150,"line_end":150,"column_start":8,"column_end":16},"name":"subtract","qualname":"::linear::vector::AffineSpace::subtract","value":"fn (&self, right: &Self) -> Self::Translation","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Same as `*self - *other`. Returns the unique element `v` of the associated vector space\n such that `self = right + v`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":123247,"byte_end":123256,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":123442,"byte_end":123456,"line_start":156,"line_end":156,"column_start":11,"column_end":25},"name":"EuclideanSpace","qualname":"::linear::vector::EuclideanSpace","value":"EuclideanSpace: AffineSpace<Translation = <Self as EuclideanSpace>::Coordinates> +\nClosedMul<<Self as EuclideanSpace>::RealField> +\nClosedDiv<<Self as EuclideanSpace>::RealField> + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"decl_id":null,"docs":" The finite-dimensional affine space based on the field of reals.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":123949,"byte_end":123960,"line_start":164,"line_end":164,"column_start":10,"column_end":21},"name":"Coordinates","qualname":"::linear::vector::EuclideanSpace::Coordinates","value":"type Coordinates: FiniteDimInnerSpace<RealField = Self::RealField, ComplexField = Self::RealField> +\n                 // XXX: the following bounds should not be necessary but the compiler does not\n                 // seem to be able to find them (from supertraits of VectorSpace)… Also, it won't\n                 // find them even if we add ClosedMul instead of Mul and MulAssign separately…\n                 Add<Self::Coordinates, Output = Self::Coordinates> +\n                 AddAssign<Self::Coordinates> +\n                 Sub<Self::Coordinates, Output = Self::Coordinates> +\n                 SubAssign<Self::Coordinates> +\n                 Mul<Self::RealField, Output = Self::Coordinates> +\n                 MulAssign<Self::RealField>                  +\n                 Div<Self::RealField, Output = Self::Coordinates> +\n                 DivAssign<Self::RealField>                  +\n                 Neg<Output = Self::Coordinates>;","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" The underlying finite vector space.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":125245,"byte_end":125254,"line_start":184,"line_end":184,"column_start":10,"column_end":19},"name":"RealField","qualname":"::linear::vector::EuclideanSpace::RealField","value":"type RealField: RealField;","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" The underlying reals.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":125530,"byte_end":125536,"line_start":190,"line_end":190,"column_start":8,"column_end":14},"name":"origin","qualname":"::linear::vector::EuclideanSpace::origin","value":"fn () -> Self","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" The preferred origin of this euclidean space.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":125678,"byte_end":125686,"line_start":196,"line_end":196,"column_start":8,"column_end":16},"name":"scale_by","qualname":"::linear::vector::EuclideanSpace::scale_by","value":"fn (&self, s: Self::RealField) -> Self","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" Multiplies the distance of this point to `Self::origin()` by `s`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":125661,"byte_end":125670,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":125919,"byte_end":125930,"line_start":203,"line_end":203,"column_start":8,"column_end":19},"name":"coordinates","qualname":"::linear::vector::EuclideanSpace::coordinates","value":"fn (&self) -> Self::Coordinates","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" The coordinates of this point, i.e., the translation from the origin.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":125902,"byte_end":125911,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":126096,"byte_end":126112,"line_start":209,"line_end":209,"column_start":8,"column_end":24},"name":"from_coordinates","qualname":"::linear::vector::EuclideanSpace::from_coordinates","value":"fn (coords: Self::Coordinates) -> Self","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" Builds a point from its coordinates relative to the origin.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":126079,"byte_end":126088,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":126264,"byte_end":126280,"line_start":215,"line_end":215,"column_start":8,"column_end":24},"name":"distance_squared","qualname":"::linear::vector::EuclideanSpace::distance_squared","value":"fn (&self, b: &Self) -> Self::RealField","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" The distance between two points.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":126247,"byte_end":126256,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":126428,"byte_end":126436,"line_start":221,"line_end":221,"column_start":8,"column_end":16},"name":"distance","qualname":"::linear::vector::EuclideanSpace::distance","value":"fn (&self, b: &Self) -> Self::RealField","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" The distance between two points.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":126411,"byte_end":126420,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]}],"impls":[{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":25637,"byte_end":25644,"line_start":436,"line_end":436,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":25884,"byte_end":25891,"line_start":446,"line_end":446,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":38147,"byte_end":38154,"line_start":490,"line_end":490,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":51548,"byte_end":51555,"line_start":44,"line_end":44,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":51752,"byte_end":51759,"line_start":54,"line_end":54,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52340,"byte_end":52342,"line_start":73,"line_end":73,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52498,"byte_end":52500,"line_start":81,"line_end":81,"column_start":28,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52536,"byte_end":52538,"line_start":83,"line_end":83,"column_start":29,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52651,"byte_end":52653,"line_start":90,"line_end":90,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52797,"byte_end":52799,"line_start":96,"line_end":96,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52904,"byte_end":52906,"line_start":103,"line_end":103,"column_start":26,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52947,"byte_end":52949,"line_start":105,"line_end":105,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":53101,"byte_end":53103,"line_start":112,"line_end":112,"column_start":35,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":53211,"byte_end":53213,"line_start":119,"line_end":119,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":53462,"byte_end":53464,"line_start":133,"line_end":133,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":53705,"byte_end":53707,"line_start":145,"line_end":145,"column_start":30,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":53938,"byte_end":53940,"line_start":162,"line_end":162,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54043,"byte_end":54045,"line_start":170,"line_end":170,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54129,"byte_end":54131,"line_start":176,"line_end":176,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54234,"byte_end":54236,"line_start":184,"line_end":184,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54330,"byte_end":54332,"line_start":190,"line_end":190,"column_start":28,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54485,"byte_end":54487,"line_start":198,"line_end":198,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54613,"byte_end":54615,"line_start":204,"line_end":204,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54746,"byte_end":54748,"line_start":211,"line_end":211,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54960,"byte_end":54962,"line_start":223,"line_end":223,"column_start":44,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55013,"byte_end":55015,"line_start":224,"line_end":224,"column_start":45,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55062,"byte_end":55064,"line_start":225,"line_end":225,"column_start":41,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55109,"byte_end":55111,"line_start":226,"line_end":226,"column_start":39,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55157,"byte_end":55159,"line_start":227,"line_end":227,"column_start":40,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55212,"byte_end":55214,"line_start":228,"line_end":228,"column_start":47,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55235,"byte_end":55237,"line_start":230,"line_end":230,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55316,"byte_end":55318,"line_start":237,"line_end":237,"column_start":15,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55561,"byte_end":55563,"line_start":254,"line_end":254,"column_start":63,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55865,"byte_end":55867,"line_start":271,"line_end":271,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55991,"byte_end":55993,"line_start":278,"line_end":278,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":56109,"byte_end":56111,"line_start":285,"line_end":285,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":59853,"byte_end":59860,"line_start":126,"line_end":126,"column_start":59,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":60097,"byte_end":60104,"line_start":136,"line_end":136,"column_start":59,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\module.rs","byte_start":61617,"byte_end":61624,"line_start":37,"line_end":37,"column_start":75,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":63211,"byte_end":63219,"line_start":51,"line_end":51,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":63314,"byte_end":63328,"line_start":58,"line_end":58,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":63429,"byte_end":63445,"line_start":65,"line_end":65,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":63937,"byte_end":63944,"line_start":86,"line_end":86,"column_start":66,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":64635,"byte_end":64642,"line_start":118,"line_end":118,"column_start":70,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65562,"byte_end":65563,"line_start":140,"line_end":140,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65654,"byte_end":65655,"line_start":141,"line_end":141,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65746,"byte_end":65747,"line_start":142,"line_end":142,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65838,"byte_end":65839,"line_start":143,"line_end":143,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65916,"byte_end":65917,"line_start":144,"line_end":144,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":74052,"byte_end":74059,"line_start":55,"line_end":55,"column_start":67,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":78207,"byte_end":78209,"line_start":87,"line_end":87,"column_start":47,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":80207,"byte_end":80214,"line_start":167,"line_end":167,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":91303,"byte_end":91310,"line_start":287,"line_end":287,"column_start":66,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":91404,"byte_end":91411,"line_start":288,"line_end":288,"column_start":88,"column_end":95},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":91485,"byte_end":91492,"line_start":289,"line_end":289,"column_start":68,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92100,"byte_end":92107,"line_start":22,"line_end":22,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92152,"byte_end":92159,"line_start":24,"line_end":24,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92290,"byte_end":92297,"line_start":30,"line_end":30,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92460,"byte_end":92467,"line_start":36,"line_end":36,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92573,"byte_end":92580,"line_start":42,"line_end":42,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92801,"byte_end":92808,"line_start":52,"line_end":52,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92956,"byte_end":92963,"line_start":58,"line_end":58,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":93281,"byte_end":93288,"line_start":72,"line_end":72,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":93666,"byte_end":93673,"line_start":89,"line_end":89,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":93985,"byte_end":93992,"line_start":101,"line_end":101,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":94202,"byte_end":94209,"line_start":113,"line_end":113,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":94448,"byte_end":94455,"line_start":126,"line_end":126,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":94659,"byte_end":94666,"line_start":138,"line_end":138,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":94891,"byte_end":94898,"line_start":150,"line_end":150,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":95112,"byte_end":95119,"line_start":160,"line_end":160,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12524,"byte_end":12525,"line_start":200,"line_end":200,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":96241,"byte_end":96243,"line_start":13,"line_end":13,"column_start":47,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":96499,"byte_end":96501,"line_start":25,"line_end":25,"column_start":57,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":96769,"byte_end":96771,"line_start":37,"line_end":37,"column_start":53,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":97624,"byte_end":97626,"line_start":78,"line_end":78,"column_start":43,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":97944,"byte_end":97946,"line_start":97,"line_end":97,"column_start":40,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":97990,"byte_end":97992,"line_start":98,"line_end":98,"column_start":41,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":98042,"byte_end":98044,"line_start":99,"line_end":99,"column_start":47,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":98104,"byte_end":98106,"line_start":100,"line_end":100,"column_start":57,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":98151,"byte_end":98153,"line_start":102,"line_end":102,"column_start":41,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":98718,"byte_end":98720,"line_start":127,"line_end":127,"column_start":44,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":114965,"byte_end":114966,"line_start":292,"line_end":292,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":115348,"byte_end":115349,"line_start":309,"line_end":309,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":115841,"byte_end":115842,"line_start":328,"line_end":328,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":116806,"byte_end":116807,"line_start":374,"line_end":374,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":117375,"byte_end":117376,"line_start":401,"line_end":401,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":126564,"byte_end":126571,"line_start":226,"line_end":226,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":126635,"byte_end":126642,"line_start":230,"line_end":230,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","byte_start":1030,"byte_end":1037,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":18}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12335,"byte_end":12342,"line_start":194,"line_end":194,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":634}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\lib.rs","byte_start":1047,"byte_end":1053,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":744}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":13031,"byte_end":13036,"line_start":19,"line_end":19,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":13039,"byte_end":13044,"line_start":19,"line_end":19,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2002},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":13895,"byte_end":13904,"line_start":49,"line_end":49,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":1882},"to":{"krate":0,"index":91}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":13907,"byte_end":13920,"line_start":49,"line_end":49,"column_start":17,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":87},"to":{"krate":0,"index":91}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":13926,"byte_end":13941,"line_start":49,"line_end":49,"column_start":36,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":452},"to":{"krate":0,"index":91}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":16189,"byte_end":16198,"line_start":125,"line_end":125,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1882},"to":{"krate":0,"index":96}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":16201,"byte_end":16214,"line_start":125,"line_end":125,"column_start":55,"column_end":68},"kind":"SuperTrait","from":{"krate":0,"index":87},"to":{"krate":0,"index":96}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":18130,"byte_end":18148,"line_start":189,"line_end":189,"column_start":38,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":91},"to":{"krate":0,"index":101}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":18154,"byte_end":18162,"line_start":189,"line_end":189,"column_start":62,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":296},"to":{"krate":0,"index":101}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":19613,"byte_end":19630,"line_start":239,"line_end":239,"column_start":40,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":96},"to":{"krate":0,"index":104}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":19636,"byte_end":19644,"line_start":239,"line_end":239,"column_start":63,"column_end":71},"kind":"SuperTrait","from":{"krate":0,"index":296},"to":{"krate":0,"index":104}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":21500,"byte_end":21512,"line_start":297,"line_end":297,"column_start":39,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":101},"to":{"krate":0,"index":109}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":21518,"byte_end":21532,"line_start":297,"line_end":297,"column_start":57,"column_end":71},"kind":"SuperTrait","from":{"krate":0,"index":104},"to":{"krate":0,"index":109}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":23117,"byte_end":23130,"line_start":348,"line_end":348,"column_start":46,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":109},"to":{"krate":0,"index":112}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":25637,"byte_end":25644,"line_start":436,"line_end":436,"column_start":62,"column_end":69},"kind":{"Impl":{"id":44}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\one_operator.rs","byte_start":25884,"byte_end":25891,"line_start":446,"line_end":446,"column_start":56,"column_end":63},"kind":{"Impl":{"id":45}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27189,"byte_end":27197,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":563},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27210,"byte_end":27220,"line_start":29,"line_end":29,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":569},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27232,"byte_end":27237,"line_start":30,"line_end":30,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":0,"index":1495},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27244,"byte_end":27248,"line_start":31,"line_end":31,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":1394},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27255,"byte_end":27258,"line_start":32,"line_end":32,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":13,"index":570},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27265,"byte_end":27274,"line_start":33,"line_end":33,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":13,"index":597},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27281,"byte_end":27294,"line_start":34,"line_end":34,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":13,"index":154},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27301,"byte_end":27304,"line_start":35,"line_end":35,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":1469},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27326,"byte_end":27341,"line_start":36,"line_end":36,"column_start":7,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":398},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27348,"byte_end":27363,"line_start":37,"line_end":37,"column_start":7,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":400},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27436,"byte_end":27440,"line_start":40,"line_end":40,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":1386},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27447,"byte_end":27451,"line_start":41,"line_end":41,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":1395},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27458,"byte_end":27461,"line_start":42,"line_end":42,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2130},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27482,"byte_end":27487,"line_start":44,"line_end":44,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":6707},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":27494,"byte_end":27501,"line_start":45,"line_end":45,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":6709},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\complex.rs","byte_start":38147,"byte_end":38154,"line_start":490,"line_end":490,"column_start":50,"column_end":57},"kind":{"Impl":{"id":60}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":147}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":51548,"byte_end":51555,"line_start":44,"line_end":44,"column_start":52,"column_end":59},"kind":{"Impl":{"id":85}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":296}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":51752,"byte_end":51759,"line_start":54,"line_end":54,"column_start":51,"column_end":58},"kind":{"Impl":{"id":86}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":296}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52340,"byte_end":52342,"line_start":73,"line_end":73,"column_start":19,"column_end":21},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52498,"byte_end":52500,"line_start":81,"line_end":81,"column_start":28,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1394}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52536,"byte_end":52538,"line_start":83,"line_end":83,"column_start":29,"column_end":31},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52651,"byte_end":52653,"line_start":90,"line_end":90,"column_start":36,"column_end":38},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52797,"byte_end":52799,"line_start":96,"line_end":96,"column_start":33,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1882}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52904,"byte_end":52906,"line_start":103,"line_end":103,"column_start":26,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1886}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":52947,"byte_end":52949,"line_start":105,"line_end":105,"column_start":34,"column_end":36},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":53101,"byte_end":53103,"line_start":112,"line_end":112,"column_start":35,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":296}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":53211,"byte_end":53213,"line_start":119,"line_end":119,"column_start":33,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1298},"to":{"krate":12,"index":18}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":53462,"byte_end":53464,"line_start":133,"line_end":133,"column_start":34,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1298},"to":{"krate":12,"index":61}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":53705,"byte_end":53707,"line_start":145,"line_end":145,"column_start":30,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1298},"to":{"krate":12,"index":96}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":53938,"byte_end":53940,"line_start":162,"line_end":162,"column_start":18,"column_end":20},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1452}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54043,"byte_end":54045,"line_start":170,"line_end":170,"column_start":24,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1483}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54129,"byte_end":54131,"line_start":176,"line_end":176,"column_start":18,"column_end":20},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1457}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54234,"byte_end":54236,"line_start":184,"line_end":184,"column_start":24,"column_end":26},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1487}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54330,"byte_end":54332,"line_start":190,"line_end":190,"column_start":28,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54485,"byte_end":54487,"line_start":198,"line_end":198,"column_start":34,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1475}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54613,"byte_end":54615,"line_start":204,"line_end":204,"column_start":40,"column_end":42},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54746,"byte_end":54748,"line_start":211,"line_end":211,"column_start":42,"column_end":44},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":452}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":54960,"byte_end":54962,"line_start":223,"line_end":223,"column_start":44,"column_end":46},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":96}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55013,"byte_end":55015,"line_start":224,"line_end":224,"column_start":45,"column_end":47},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":91}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55062,"byte_end":55064,"line_start":225,"line_end":225,"column_start":41,"column_end":43},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":104}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55109,"byte_end":55111,"line_start":226,"line_end":226,"column_start":39,"column_end":41},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":101}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55157,"byte_end":55159,"line_start":227,"line_end":227,"column_start":40,"column_end":42},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":109}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55212,"byte_end":55214,"line_start":228,"line_end":228,"column_start":47,"column_end":49},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":112}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55235,"byte_end":55237,"line_start":230,"line_end":230,"column_start":14,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1298},"to":{"krate":13,"index":312}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55316,"byte_end":55318,"line_start":237,"line_end":237,"column_start":15,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1298},"to":{"krate":13,"index":302}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55561,"byte_end":55563,"line_start":254,"line_end":254,"column_start":63,"column_end":65},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55865,"byte_end":55867,"line_start":271,"line_end":271,"column_start":39,"column_end":41},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":398}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":55991,"byte_end":55993,"line_start":278,"line_end":278,"column_start":39,"column_end":41},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":400}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\identity.rs","byte_start":56109,"byte_end":56111,"line_start":285,"line_end":285,"column_start":31,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":402}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56312,"byte_end":56317,"line_start":6,"line_end":6,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":398}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56527,"byte_end":56532,"line_start":12,"line_end":12,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":400}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56738,"byte_end":56753,"line_start":18,"line_end":18,"column_start":20,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":398},"to":{"krate":0,"index":402}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56756,"byte_end":56771,"line_start":18,"line_end":18,"column_start":38,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":400},"to":{"krate":0,"index":402}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":56774,"byte_end":56784,"line_start":18,"line_end":18,"column_start":56,"column_end":66},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":402}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":59853,"byte_end":59860,"line_start":126,"line_end":126,"column_start":59,"column_end":66},"kind":{"Impl":{"id":118}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":398}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\lattice.rs","byte_start":60097,"byte_end":60104,"line_start":136,"line_end":136,"column_start":59,"column_end":66},"kind":{"Impl":{"id":119}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":400}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\module.rs","byte_start":61170,"byte_end":61190,"line_start":26,"line_end":26,"column_start":4,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":112},"to":{"krate":0,"index":426}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\module.rs","byte_start":61617,"byte_end":61624,"line_start":37,"line_end":37,"column_start":75,"column_end":82},"kind":{"Impl":{"id":120}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":426}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":62052,"byte_end":62056,"line_start":10,"line_end":10,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1394},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":62383,"byte_end":62388,"line_start":18,"line_end":18,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":452}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":63211,"byte_end":63219,"line_start":51,"line_end":51,"column_start":19,"column_end":27},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1376},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":63314,"byte_end":63328,"line_start":58,"line_end":58,"column_start":19,"column_end":33},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1381},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":63429,"byte_end":63445,"line_start":65,"line_end":65,"column_start":19,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1386},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":63937,"byte_end":63944,"line_start":86,"line_end":86,"column_start":66,"column_end":73},"kind":{"Impl":{"id":131}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":452}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":64635,"byte_end":64642,"line_start":118,"line_end":118,"column_start":70,"column_end":77},"kind":{"Impl":{"id":134}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":452}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":64845,"byte_end":64850,"line_start":126,"line_end":126,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":473}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":64853,"byte_end":64856,"line_start":126,"line_end":126,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":473}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":64881,"byte_end":64890,"line_start":126,"line_end":126,"column_start":72,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":1475},"to":{"krate":0,"index":473}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65015,"byte_end":65020,"line_start":129,"line_end":129,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":475}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65023,"byte_end":65026,"line_start":129,"line_end":129,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":1447},"to":{"krate":0,"index":475}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65051,"byte_end":65060,"line_start":129,"line_end":129,"column_start":72,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":1479},"to":{"krate":0,"index":475}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65185,"byte_end":65190,"line_start":132,"line_end":132,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":477}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65193,"byte_end":65196,"line_start":132,"line_end":132,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":1452},"to":{"krate":0,"index":477}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65221,"byte_end":65230,"line_start":132,"line_end":132,"column_start":72,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":1483},"to":{"krate":0,"index":477}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65355,"byte_end":65360,"line_start":135,"line_end":135,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":479}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65363,"byte_end":65366,"line_start":135,"line_end":135,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":1457},"to":{"krate":0,"index":479}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65391,"byte_end":65400,"line_start":135,"line_end":135,"column_start":72,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":1487},"to":{"krate":0,"index":479}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65495,"byte_end":65500,"line_start":138,"line_end":138,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":481}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65503,"byte_end":65506,"line_start":138,"line_end":138,"column_start":30,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1469},"to":{"krate":0,"index":481}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65562,"byte_end":65563,"line_start":140,"line_end":140,"column_start":37,"column_end":38},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":483},"to":{"krate":0,"index":473}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65654,"byte_end":65655,"line_start":141,"line_end":141,"column_start":37,"column_end":38},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":486},"to":{"krate":0,"index":475}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65746,"byte_end":65747,"line_start":142,"line_end":142,"column_start":37,"column_end":38},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":489},"to":{"krate":0,"index":477}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65838,"byte_end":65839,"line_start":143,"line_end":143,"column_start":37,"column_end":38},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":492},"to":{"krate":0,"index":479}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\operator.rs","byte_start":65916,"byte_end":65917,"line_start":144,"line_end":144,"column_start":23,"column_end":24},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":495},"to":{"krate":0,"index":481}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":66790,"byte_end":66802,"line_start":27,"line_end":27,"column_start":5,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":147},"to":{"krate":0,"index":509}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":66827,"byte_end":66837,"line_start":28,"line_end":28,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":12,"index":61},"to":{"krate":0,"index":509}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":66860,"byte_end":66866,"line_start":29,"line_end":29,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":12,"index":96},"to":{"krate":0,"index":509}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":66889,"byte_end":66896,"line_start":30,"line_end":30,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":402},"to":{"krate":0,"index":509}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":66903,"byte_end":66909,"line_start":31,"line_end":31,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":13,"index":545},"to":{"krate":0,"index":509}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\real.rs","byte_start":66916,"byte_end":66923,"line_start":32,"line_end":32,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":13,"index":96},"to":{"krate":0,"index":509}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":71902,"byte_end":71915,"line_start":24,"line_end":24,"column_start":46,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":87},"to":{"krate":0,"index":1447}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":71983,"byte_end":72001,"line_start":25,"line_end":25,"column_start":46,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":91},"to":{"krate":0,"index":1450}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72016,"byte_end":72029,"line_start":25,"line_end":25,"column_start":79,"column_end":92},"kind":"SuperTrait","from":{"krate":0,"index":1447},"to":{"krate":0,"index":1450}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72030,"byte_end":72039,"line_start":25,"line_end":25,"column_start":93,"column_end":102},"kind":"SuperTrait","from":{"krate":0,"index":475},"to":{"krate":0,"index":1450}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72087,"byte_end":72099,"line_start":26,"line_end":26,"column_start":46,"column_end":58},"kind":"SuperTrait","from":{"krate":0,"index":101},"to":{"krate":0,"index":1453}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72120,"byte_end":72138,"line_start":26,"line_end":26,"column_start":79,"column_end":97},"kind":"SuperTrait","from":{"krate":0,"index":1450},"to":{"krate":0,"index":1453}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72139,"byte_end":72148,"line_start":26,"line_end":26,"column_start":98,"column_end":107},"kind":"SuperTrait","from":{"krate":0,"index":481},"to":{"krate":0,"index":1453}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72149,"byte_end":72153,"line_start":26,"line_end":26,"column_start":108,"column_end":112},"kind":"SuperTrait","from":{"krate":13,"index":302},"to":{"krate":0,"index":1453}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72201,"byte_end":72218,"line_start":27,"line_end":27,"column_start":46,"column_end":63},"kind":"SuperTrait","from":{"krate":0,"index":96},"to":{"krate":0,"index":1456}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72234,"byte_end":72247,"line_start":27,"line_end":27,"column_start":79,"column_end":92},"kind":"SuperTrait","from":{"krate":0,"index":1447},"to":{"krate":0,"index":1456}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72248,"byte_end":72257,"line_start":27,"line_end":27,"column_start":93,"column_end":102},"kind":"SuperTrait","from":{"krate":0,"index":473},"to":{"krate":0,"index":1456}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72305,"byte_end":72319,"line_start":28,"line_end":28,"column_start":46,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":104},"to":{"krate":0,"index":1459}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72338,"byte_end":72355,"line_start":28,"line_end":28,"column_start":79,"column_end":96},"kind":"SuperTrait","from":{"krate":0,"index":1456},"to":{"krate":0,"index":1459}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72356,"byte_end":72360,"line_start":28,"line_end":28,"column_start":97,"column_end":101},"kind":"SuperTrait","from":{"krate":13,"index":302},"to":{"krate":0,"index":1459}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72408,"byte_end":72421,"line_start":29,"line_end":29,"column_start":46,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":109},"to":{"krate":0,"index":1462}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72441,"byte_end":72453,"line_start":29,"line_end":29,"column_start":79,"column_end":91},"kind":"SuperTrait","from":{"krate":0,"index":1453},"to":{"krate":0,"index":1462}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72454,"byte_end":72468,"line_start":29,"line_end":29,"column_start":92,"column_end":106},"kind":"SuperTrait","from":{"krate":0,"index":1459},"to":{"krate":0,"index":1462}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72516,"byte_end":72536,"line_start":30,"line_end":30,"column_start":46,"column_end":66},"kind":"SuperTrait","from":{"krate":0,"index":112},"to":{"krate":0,"index":1465}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72549,"byte_end":72562,"line_start":30,"line_end":30,"column_start":79,"column_end":92},"kind":"SuperTrait","from":{"krate":0,"index":1462},"to":{"krate":0,"index":1465}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72615,"byte_end":72628,"line_start":32,"line_end":32,"column_start":50,"column_end":63},"kind":"SuperTrait","from":{"krate":0,"index":87},"to":{"krate":0,"index":1468}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72704,"byte_end":72722,"line_start":33,"line_end":33,"column_start":50,"column_end":68},"kind":"SuperTrait","from":{"krate":0,"index":91},"to":{"krate":0,"index":1471}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72741,"byte_end":72760,"line_start":33,"line_end":33,"column_start":87,"column_end":106},"kind":"SuperTrait","from":{"krate":0,"index":1468},"to":{"krate":0,"index":1471}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72761,"byte_end":72770,"line_start":33,"line_end":33,"column_start":107,"column_end":116},"kind":"SuperTrait","from":{"krate":0,"index":479},"to":{"krate":0,"index":1471}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72822,"byte_end":72834,"line_start":34,"line_end":34,"column_start":50,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":101},"to":{"krate":0,"index":1474}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72859,"byte_end":72883,"line_start":34,"line_end":34,"column_start":87,"column_end":111},"kind":"SuperTrait","from":{"krate":0,"index":1471},"to":{"krate":0,"index":1474}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72884,"byte_end":72887,"line_start":34,"line_end":34,"column_start":112,"column_end":115},"kind":"SuperTrait","from":{"krate":13,"index":312},"to":{"krate":0,"index":1474}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72939,"byte_end":72956,"line_start":35,"line_end":35,"column_start":50,"column_end":67},"kind":"SuperTrait","from":{"krate":0,"index":96},"to":{"krate":0,"index":1477}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72976,"byte_end":72995,"line_start":35,"line_end":35,"column_start":87,"column_end":106},"kind":"SuperTrait","from":{"krate":0,"index":1468},"to":{"krate":0,"index":1477}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":72996,"byte_end":73005,"line_start":35,"line_end":35,"column_start":107,"column_end":116},"kind":"SuperTrait","from":{"krate":0,"index":477},"to":{"krate":0,"index":1477}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73057,"byte_end":73071,"line_start":36,"line_end":36,"column_start":50,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":104},"to":{"krate":0,"index":1480}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73094,"byte_end":73117,"line_start":36,"line_end":36,"column_start":87,"column_end":110},"kind":"SuperTrait","from":{"krate":0,"index":1477},"to":{"krate":0,"index":1480}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73118,"byte_end":73121,"line_start":36,"line_end":36,"column_start":111,"column_end":114},"kind":"SuperTrait","from":{"krate":13,"index":312},"to":{"krate":0,"index":1480}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73173,"byte_end":73186,"line_start":37,"line_end":37,"column_start":50,"column_end":63},"kind":"SuperTrait","from":{"krate":0,"index":109},"to":{"krate":0,"index":1483}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73210,"byte_end":73228,"line_start":37,"line_end":37,"column_start":87,"column_end":105},"kind":"SuperTrait","from":{"krate":0,"index":1474},"to":{"krate":0,"index":1483}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73229,"byte_end":73249,"line_start":37,"line_end":37,"column_start":106,"column_end":126},"kind":"SuperTrait","from":{"krate":0,"index":1480},"to":{"krate":0,"index":1483}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73303,"byte_end":73323,"line_start":38,"line_end":38,"column_start":52,"column_end":72},"kind":"SuperTrait","from":{"krate":0,"index":112},"to":{"krate":0,"index":1486}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73342,"byte_end":73361,"line_start":38,"line_end":38,"column_start":91,"column_end":110},"kind":"SuperTrait","from":{"krate":0,"index":1483},"to":{"krate":0,"index":1486}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73405,"byte_end":73417,"line_start":40,"line_end":40,"column_start":41,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":602},"to":{"krate":0,"index":1489}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73430,"byte_end":73450,"line_start":40,"line_end":40,"column_start":66,"column_end":86},"kind":"SuperTrait","from":{"krate":0,"index":1465},"to":{"krate":0,"index":1489}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73451,"byte_end":73471,"line_start":40,"line_end":40,"column_start":87,"column_end":107},"kind":"SuperTrait","from":{"krate":0,"index":1480},"to":{"krate":0,"index":1489}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73514,"byte_end":73537,"line_start":41,"line_end":41,"column_start":41,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":614},"to":{"krate":0,"index":1492}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73539,"byte_end":73543,"line_start":41,"line_end":41,"column_start":66,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":1489},"to":{"krate":0,"index":1492}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73586,"byte_end":73599,"line_start":42,"line_end":42,"column_start":41,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":624},"to":{"krate":0,"index":1495}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73611,"byte_end":73626,"line_start":42,"line_end":42,"column_start":66,"column_end":81},"kind":"SuperTrait","from":{"krate":0,"index":1492},"to":{"krate":0,"index":1495}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73627,"byte_end":73653,"line_start":42,"line_end":42,"column_start":82,"column_end":108},"kind":"SuperTrait","from":{"krate":0,"index":1486},"to":{"krate":0,"index":1495}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73735,"byte_end":73749,"line_start":46,"line_end":46,"column_start":5,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":426},"to":{"krate":0,"index":555}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73795,"byte_end":73815,"line_start":47,"line_end":47,"column_start":7,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":1465},"to":{"krate":0,"index":555}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":73822,"byte_end":73831,"line_start":48,"line_end":48,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":477},"to":{"krate":0,"index":555}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\specialized.rs","byte_start":74052,"byte_end":74059,"line_start":55,"line_end":55,"column_start":67,"column_end":74},"kind":{"Impl":{"id":142}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":555}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":75381,"byte_end":75386,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":77377,"byte_end":77382,"line_start":64,"line_end":64,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":569}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":78207,"byte_end":78209,"line_start":87,"line_end":87,"column_start":47,"column_end":49},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":577},"to":{"krate":0,"index":569}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\subset.rs","byte_start":80207,"byte_end":80214,"line_start":167,"line_end":167,"column_start":56,"column_end":63},"kind":{"Impl":{"id":243}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":82735,"byte_end":82755,"line_start":31,"line_end":31,"column_start":5,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":112},"to":{"krate":0,"index":602}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":82761,"byte_end":82775,"line_start":31,"line_end":31,"column_start":31,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":104},"to":{"krate":0,"index":602}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":86091,"byte_end":86103,"line_start":130,"line_end":130,"column_start":5,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":602},"to":{"krate":0,"index":614}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":88931,"byte_end":88954,"line_start":214,"line_end":214,"column_start":5,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":614},"to":{"krate":0,"index":624}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":88963,"byte_end":88983,"line_start":214,"line_end":214,"column_start":37,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":112},"to":{"krate":0,"index":624}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":91303,"byte_end":91310,"line_start":287,"line_end":287,"column_start":66,"column_end":73},"kind":{"Impl":{"id":324}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":602}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":91404,"byte_end":91411,"line_start":288,"line_end":288,"column_start":88,"column_end":95},"kind":{"Impl":{"id":325}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":614}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\two_operators.rs","byte_start":91485,"byte_end":91492,"line_start":289,"line_end":289,"column_start":68,"column_end":75},"kind":{"Impl":{"id":326}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":624}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92100,"byte_end":92107,"line_start":22,"line_end":22,"column_start":30,"column_end":37},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":1394}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92152,"byte_end":92159,"line_start":24,"line_end":24,"column_start":32,"column_end":39},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92290,"byte_end":92297,"line_start":30,"line_end":30,"column_start":42,"column_end":49},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92460,"byte_end":92467,"line_start":36,"line_end":36,"column_start":40,"column_end":47},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":1882}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92573,"byte_end":92580,"line_start":42,"line_end":42,"column_start":15,"column_end":22},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":2034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92801,"byte_end":92808,"line_start":52,"line_end":52,"column_start":56,"column_end":63},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":92956,"byte_end":92963,"line_start":58,"line_end":58,"column_start":40,"column_end":47},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":2034},"to":{"krate":12,"index":18}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":93281,"byte_end":93288,"line_start":72,"line_end":72,"column_start":42,"column_end":49},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":2034},"to":{"krate":12,"index":61}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":93666,"byte_end":93673,"line_start":89,"line_end":89,"column_start":34,"column_end":41},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":2034},"to":{"krate":12,"index":96}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":93985,"byte_end":93992,"line_start":101,"line_end":101,"column_start":51,"column_end":58},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":94202,"byte_end":94209,"line_start":113,"line_end":113,"column_start":33,"column_end":40},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":1469}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":94448,"byte_end":94455,"line_start":126,"line_end":126,"column_start":51,"column_end":58},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":94659,"byte_end":94666,"line_start":138,"line_end":138,"column_start":51,"column_end":58},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":1452}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":94891,"byte_end":94898,"line_start":150,"line_end":150,"column_start":48,"column_end":55},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":2034},"to":{"krate":0,"index":452}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\wrapper.rs","byte_start":95112,"byte_end":95119,"line_start":160,"line_end":160,"column_start":51,"column_end":58},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":1457}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12482,"byte_end":12491,"line_start":198,"line_end":198,"column_start":17,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":509},"to":{"krate":0,"index":741}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\general\\mod.rs","byte_start":12524,"byte_end":12525,"line_start":200,"line_end":200,"column_start":29,"column_end":30},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":743},"to":{"krate":0,"index":741}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":96241,"byte_end":96243,"line_start":13,"line_end":13,"column_start":47,"column_end":49},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":884}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":96499,"byte_end":96501,"line_start":25,"line_end":25,"column_start":57,"column_end":59},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":888}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":96769,"byte_end":96771,"line_start":37,"line_end":37,"column_start":53,"column_end":55},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":892}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":97624,"byte_end":97626,"line_start":78,"line_end":78,"column_start":43,"column_end":45},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":905}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":97944,"byte_end":97946,"line_start":97,"line_end":97,"column_start":40,"column_end":42},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":927}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":97990,"byte_end":97992,"line_start":98,"line_end":98,"column_start":41,"column_end":43},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":921}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":98042,"byte_end":98044,"line_start":99,"line_end":99,"column_start":47,"column_end":49},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":923}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":98104,"byte_end":98106,"line_start":100,"line_end":100,"column_start":57,"column_end":59},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":925}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":98151,"byte_end":98153,"line_start":102,"line_end":102,"column_start":41,"column_end":43},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":939}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\id.rs","byte_start":98718,"byte_end":98720,"line_start":127,"line_end":127,"column_start":44,"column_end":46},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":933}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99206,"byte_end":99211,"line_start":8,"line_end":8,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":838}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99214,"byte_end":99219,"line_start":8,"line_end":8,"column_start":13,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":2002},"to":{"krate":0,"index":838}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":99222,"byte_end":99225,"line_start":8,"line_end":8,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1452},"to":{"krate":0,"index":838}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":100676,"byte_end":100682,"line_start":52,"line_end":52,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":838},"to":{"krate":0,"index":850}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":101918,"byte_end":101924,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":0,"index":838},"to":{"krate":0,"index":857}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102055,"byte_end":102075,"line_start":95,"line_end":95,"column_start":9,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":1480},"to":{"krate":0,"index":857}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102907,"byte_end":102919,"line_start":126,"line_end":126,"column_start":5,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":857},"to":{"krate":0,"index":864}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":102926,"byte_end":102935,"line_start":127,"line_end":127,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":850},"to":{"krate":0,"index":864}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":103601,"byte_end":103613,"line_start":150,"line_end":150,"column_start":35,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":857},"to":{"krate":0,"index":868}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\matrix.rs","byte_start":103616,"byte_end":103635,"line_start":150,"line_end":150,"column_start":50,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":1483},"to":{"krate":0,"index":868}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":104098,"byte_end":104118,"line_start":10,"line_end":10,"column_start":46,"column_end":66},"kind":"SuperTrait","from":{"krate":0,"index":1480},"to":{"krate":0,"index":884}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":104696,"byte_end":104715,"line_start":23,"line_end":23,"column_start":5,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":1483},"to":{"krate":0,"index":888}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":104718,"byte_end":104732,"line_start":23,"line_end":23,"column_start":27,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":884},"to":{"krate":0,"index":888}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":105447,"byte_end":105471,"line_start":37,"line_end":37,"column_start":52,"column_end":76},"kind":"SuperTrait","from":{"krate":0,"index":888},"to":{"krate":0,"index":892}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":107782,"byte_end":107802,"line_start":102,"line_end":102,"column_start":5,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":892},"to":{"krate":0,"index":905}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":110608,"byte_end":110618,"line_start":187,"line_end":187,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":905},"to":{"krate":0,"index":921}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":110787,"byte_end":110795,"line_start":190,"line_end":190,"column_start":46,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":921},"to":{"krate":0,"index":923}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":110923,"byte_end":110931,"line_start":193,"line_end":193,"column_start":56,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":921},"to":{"krate":0,"index":925}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":111052,"byte_end":111072,"line_start":197,"line_end":197,"column_start":5,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":892},"to":{"krate":0,"index":927}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":111141,"byte_end":111149,"line_start":198,"line_end":198,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":563},"to":{"krate":0,"index":927}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":112296,"byte_end":112310,"line_start":230,"line_end":230,"column_start":5,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":923},"to":{"krate":0,"index":933}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":113681,"byte_end":113705,"line_start":259,"line_end":259,"column_start":5,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":925},"to":{"krate":0,"index":939}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":113728,"byte_end":113742,"line_start":259,"line_end":259,"column_start":52,"column_end":66},"kind":"SuperTrait","from":{"krate":0,"index":923},"to":{"krate":0,"index":939}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":114965,"byte_end":114966,"line_start":292,"line_end":292,"column_start":34,"column_end":35},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":945},"to":{"krate":0,"index":884}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":115348,"byte_end":115349,"line_start":309,"line_end":309,"column_start":44,"column_end":45},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":950},"to":{"krate":0,"index":888}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":115841,"byte_end":115842,"line_start":328,"line_end":328,"column_start":40,"column_end":41},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":955},"to":{"krate":0,"index":892}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":116806,"byte_end":116807,"line_start":374,"line_end":374,"column_start":27,"column_end":28},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":968},"to":{"krate":0,"index":927}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\transformation.rs","byte_start":117375,"byte_end":117376,"line_start":401,"line_end":401,"column_start":30,"column_end":31},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":975},"to":{"krate":0,"index":905}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":118084,"byte_end":118090,"line_start":11,"line_end":11,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":555},"to":{"krate":0,"index":1004}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":118291,"byte_end":118302,"line_start":20,"line_end":20,"column_start":24,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":1004},"to":{"krate":0,"index":1006}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":119673,"byte_end":119684,"line_start":51,"line_end":51,"column_start":23,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1006},"to":{"krate":0,"index":1015}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":120497,"byte_end":120508,"line_start":80,"line_end":80,"column_start":5,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":1004},"to":{"krate":0,"index":1018}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":120515,"byte_end":120520,"line_start":81,"line_end":81,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":1626},"to":{"krate":0,"index":1018}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":120573,"byte_end":120581,"line_start":82,"line_end":82,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":1630},"to":{"krate":0,"index":1018}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":121726,"byte_end":121736,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":1015},"to":{"krate":0,"index":1026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":121739,"byte_end":121759,"line_start":114,"line_end":114,"column_start":18,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":1018},"to":{"krate":0,"index":1026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":122643,"byte_end":122648,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":1030}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":122655,"byte_end":122660,"line_start":132,"line_end":132,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":2002},"to":{"krate":0,"index":1030}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":122667,"byte_end":122676,"line_start":133,"line_end":133,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":1882},"to":{"krate":0,"index":1030}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":122683,"byte_end":122686,"line_start":134,"line_end":134,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":1447},"to":{"krate":0,"index":1030}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":122744,"byte_end":122753,"line_start":135,"line_end":135,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":473},"to":{"krate":0,"index":1030}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":123458,"byte_end":123469,"line_start":156,"line_end":156,"column_start":27,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":1030},"to":{"krate":0,"index":1034}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":123607,"byte_end":123616,"line_start":158,"line_end":158,"column_start":27,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":477},"to":{"krate":0,"index":1034}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":123738,"byte_end":123747,"line_start":160,"line_end":160,"column_start":27,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":479},"to":{"krate":0,"index":1034}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":123875,"byte_end":123878,"line_start":162,"line_end":162,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1469},"to":{"krate":0,"index":1034}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":126564,"byte_end":126571,"line_start":226,"line_end":226,"column_start":49,"column_end":56},"kind":{"Impl":{"id":358}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":1004}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\alga-0.9.1\\src\\linear\\vector.rs","byte_start":126635,"byte_end":126642,"line_start":230,"line_end":230,"column_start":36,"column_end":43},"kind":{"Impl":{"id":359}},"from":{"krate":14,"index":478},"to":{"krate":0,"index":1006}}]}