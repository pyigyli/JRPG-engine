{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1","program":"C:\\Users\\Pyigyli\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gfx","C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=3","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=907b2ce45206780b","-C","extra-filename=-907b2ce45206780b","--out-dir","d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps","-L","dependency=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps","--extern","derivative=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\derivative-b1cc7036c97ea965.dll","--extern","draw_state=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libdraw_state-1c94d6e2071753a2.rmeta","--extern","gfx_core=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libgfx_core-abe4765b3532fca6.rmeta","--extern","log=d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\liblog-9f9abff2f7e431bb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Pyigyli\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\VisualStudio\\Rust\\jrpg\\target\\rls\\debug\\deps\\libgfx-907b2ce45206780b.rmeta"},"prelude":{"crate_id":{"name":"gfx","disambiguator":[14853139522664425876,16330102195290865930]},"crate_root":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src","external_crates":[{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13454279496936976369,256594374343364064]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10635428080862470944,4053010167158610789]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2397070696586021034,1787692942867494326]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13215350897914660053,4762041400992555299]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8309206586370028958,10530789326598529563]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12844497061290288730,1165546255938205329]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17370511097861102976,8088456066398622915]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[1985867887572050615,3717448080532913995]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10045986561377339069,14963295625130836827]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14681916437073319406,9740076823699971540]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":11,"id":{"name":"panic_unwind","disambiguator":[4514194809136982995,14217700833302823945]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":12,"id":{"name":"log","disambiguator":[5647217622369385511,1880719050861626807]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":13,"id":{"name":"cfg_if","disambiguator":[15940136793660433531,2344038375606548697]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":14,"id":{"name":"derivative","disambiguator":[4126377204788173186,2793461337389329792]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":15,"id":{"name":"draw_state","disambiguator":[13881293376479682914,4350660427109145424]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":16,"id":{"name":"bitflags","disambiguator":[17719894873573479953,17548125208088827151]}},{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","num":17,"id":{"name":"gfx_core","disambiguator":[15597727477005941409,12196557473262451126]}}],"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":600,"byte_end":5316,"line_start":15,"line_end":144,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":17,"index":1015},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3712,"byte_end":3718,"line_start":102,"line_end":102,"column_start":20,"column_end":26},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":17,"index":286},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3720,"byte_end":3727,"line_start":102,"line_end":102,"column_start":28,"column_end":35},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":17,"index":722},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3756,"byte_end":3759,"line_start":103,"line_end":103,"column_start":27,"column_end":30},"alias_span":null,"name":"Pod","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3782,"byte_end":3792,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"alias_span":null,"name":"FactoryExt","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":15,"index":13},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3843,"byte_end":3849,"line_start":108,"line_end":108,"column_start":22,"column_end":28},"alias_span":null,"name":"preset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":34},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3851,"byte_end":3856,"line_start":108,"line_end":108,"column_start":30,"column_end":35},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3887,"byte_end":3888,"line_start":109,"line_end":109,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1015},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3927,"byte_end":3933,"line_start":112,"line_end":112,"column_start":16,"column_end":22},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":5554},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3935,"byte_end":3944,"line_start":112,"line_end":112,"column_start":24,"column_end":33},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":994},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3946,"byte_end":3955,"line_start":112,"line_end":112,"column_start":35,"column_end":44},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":5610},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3957,"byte_end":3972,"line_start":112,"line_end":112,"column_start":46,"column_end":61},"alias_span":null,"name":"SubmissionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1013},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3974,"byte_end":3990,"line_start":112,"line_end":112,"column_start":63,"column_end":79},"alias_span":null,"name":"SubmissionResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":980},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4008,"byte_end":4019,"line_start":113,"line_end":113,"column_start":16,"column_end":27},"alias_span":null,"name":"VertexCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":981},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4021,"byte_end":4034,"line_start":113,"line_end":113,"column_start":29,"column_end":42},"alias_span":null,"name":"InstanceCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":5489},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4052,"byte_end":4061,"line_start":114,"line_end":114,"column_start":16,"column_end":25},"alias_span":null,"name":"ShaderSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":5384},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4063,"byte_end":4075,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"alias_span":null,"name":"VertexShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":5405},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4077,"byte_end":4087,"line_start":114,"line_end":114,"column_start":41,"column_end":51},"alias_span":null,"name":"HullShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":5426},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4089,"byte_end":4101,"line_start":114,"line_end":114,"column_start":53,"column_end":65},"alias_span":null,"name":"DomainShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":5447},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4103,"byte_end":4117,"line_start":114,"line_end":114,"column_start":67,"column_end":81},"alias_span":null,"name":"GeometryShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":5468},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4119,"byte_end":4130,"line_start":114,"line_end":114,"column_start":83,"column_end":94},"alias_span":null,"name":"PixelShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":26},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4148,"byte_end":4154,"line_start":115,"line_end":115,"column_start":16,"column_end":22},"alias_span":null,"name":"buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":354},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4156,"byte_end":4162,"line_start":115,"line_end":115,"column_start":24,"column_end":30},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":425},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4164,"byte_end":4170,"line_start":115,"line_end":115,"column_start":32,"column_end":38},"alias_span":null,"name":"handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":617},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4172,"byte_end":4179,"line_start":115,"line_end":115,"column_start":40,"column_end":47},"alias_span":null,"name":"mapping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":714},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4181,"byte_end":4187,"line_start":115,"line_end":115,"column_start":49,"column_end":55},"alias_span":null,"name":"memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":871},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4189,"byte_end":4196,"line_start":115,"line_end":115,"column_start":57,"column_end":64},"alias_span":null,"name":"texture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":286},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4223,"byte_end":4230,"line_start":116,"line_end":116,"column_start":25,"column_end":32},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1268},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4232,"byte_end":4249,"line_start":116,"line_end":116,"column_start":34,"column_end":51},"alias_span":null,"name":"ResourceViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1286},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4251,"byte_end":4266,"line_start":116,"line_end":116,"column_start":53,"column_end":68},"alias_span":null,"name":"TargetViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1309},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4268,"byte_end":4281,"line_start":116,"line_end":116,"column_start":70,"column_end":83},"alias_span":null,"name":"CombinedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":80},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4308,"byte_end":4314,"line_start":117,"line_end":117,"column_start":25,"column_end":31},"alias_span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4318,"byte_end":4331,"line_start":117,"line_end":117,"column_start":35,"column_end":48},"name":"CommandBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":79},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4333,"byte_end":4347,"line_start":117,"line_end":117,"column_start":50,"column_end":64},"alias_span":null,"name":"InstanceParams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":4553},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4372,"byte_end":4383,"line_start":118,"line_end":118,"column_start":23,"column_end":34},"alias_span":null,"name":"ProgramInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":4199},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4385,"byte_end":4397,"line_start":118,"line_end":118,"column_start":36,"column_end":48},"alias_span":null,"name":"UniformValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4419,"byte_end":4435,"line_start":120,"line_end":120,"column_start":19,"column_end":35},"alias_span":null,"name":"CopyBufferResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4437,"byte_end":4460,"line_start":120,"line_end":120,"column_start":37,"column_end":60},"alias_span":null,"name":"CopyBufferTextureResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4462,"byte_end":4471,"line_start":120,"line_end":120,"column_start":62,"column_end":71},"alias_span":null,"name":"CopyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4491,"byte_end":4514,"line_start":121,"line_end":121,"column_start":19,"column_end":42},"alias_span":null,"name":"CopyTextureBufferResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4516,"byte_end":4523,"line_start":121,"line_end":121,"column_start":44,"column_end":51},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4525,"byte_end":4536,"line_start":121,"line_end":121,"column_start":53,"column_end":64},"alias_span":null,"name":"UpdateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4556,"byte_end":4574,"line_start":122,"line_end":122,"column_start":18,"column_end":36},"alias_span":null,"name":"PipelineStateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4592,"byte_end":4597,"line_start":123,"line_end":123,"column_start":17,"column_end":22},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4599,"byte_end":4614,"line_start":123,"line_end":123,"column_start":24,"column_end":39},"alias_span":null,"name":"IntoIndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4616,"byte_end":4627,"line_start":123,"line_end":123,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4644,"byte_end":4657,"line_start":124,"line_end":124,"column_start":15,"column_end":28},"alias_span":null,"name":"PipelineState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4682,"byte_end":4694,"line_start":125,"line_end":125,"column_start":23,"column_end":35},"alias_span":null,"name":"VertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4696,"byte_end":4710,"line_start":125,"line_end":125,"column_start":37,"column_end":51},"alias_span":null,"name":"InstanceBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4712,"byte_end":4727,"line_start":125,"line_end":125,"column_start":53,"column_end":68},"alias_span":null,"name":"RawVertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4751,"byte_end":4765,"line_start":126,"line_end":126,"column_start":23,"column_end":37},"alias_span":null,"name":"ConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4767,"byte_end":4784,"line_start":126,"line_end":126,"column_start":39,"column_end":56},"alias_span":null,"name":"RawConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4786,"byte_end":4792,"line_start":126,"line_end":126,"column_start":58,"column_end":64},"alias_span":null,"name":"Global","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4794,"byte_end":4803,"line_start":126,"line_end":126,"column_start":66,"column_end":75},"alias_span":null,"name":"RawGlobal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4830,"byte_end":4844,"line_start":127,"line_end":127,"column_start":25,"column_end":39},"alias_span":null,"name":"ShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4846,"byte_end":4863,"line_start":127,"line_end":127,"column_start":41,"column_end":58},"alias_span":null,"name":"RawShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4865,"byte_end":4880,"line_start":127,"line_end":127,"column_start":60,"column_end":75},"alias_span":null,"name":"UnorderedAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4906,"byte_end":4913,"line_start":128,"line_end":128,"column_start":25,"column_end":32},"alias_span":null,"name":"Sampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4915,"byte_end":4929,"line_start":128,"line_end":128,"column_start":34,"column_end":48},"alias_span":null,"name":"TextureSampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4954,"byte_end":4972,"line_start":129,"line_end":129,"column_start":23,"column_end":41},"alias_span":null,"name":"DepthStencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4974,"byte_end":4985,"line_start":129,"line_end":129,"column_start":43,"column_end":54},"alias_span":null,"name":"DepthTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":4987,"byte_end":5000,"line_start":129,"line_end":129,"column_start":56,"column_end":69},"alias_span":null,"name":"StencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":5024,"byte_end":5036,"line_start":130,"line_end":130,"column_start":23,"column_end":35},"alias_span":null,"name":"RenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":5038,"byte_end":5053,"line_start":130,"line_end":130,"column_start":37,"column_end":52},"alias_span":null,"name":"RawRenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":5055,"byte_end":5066,"line_start":130,"line_end":130,"column_start":54,"column_end":65},"alias_span":null,"name":"BlendTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":5068,"byte_end":5076,"line_start":130,"line_end":130,"column_start":67,"column_end":75},"alias_span":null,"name":"BlendRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":5078,"byte_end":5085,"line_start":130,"line_end":130,"column_start":77,"column_end":84},"alias_span":null,"name":"Scissor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":5110,"byte_end":5116,"line_start":131,"line_end":131,"column_start":23,"column_end":29},"alias_span":null,"name":"Bundle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":770},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":64770,"byte_end":64781,"line_start":25,"line_end":25,"column_start":21,"column_end":32},"alias_span":null,"name":"BufferIndex","value":"","parent":{"krate":0,"index":316}},{"kind":"Use","ref_id":{"krate":17,"index":3761},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":64783,"byte_end":64790,"line_start":25,"line_end":25,"column_start":34,"column_end":41},"alias_span":null,"name":"Element","value":"","parent":{"krate":0,"index":316}},{"kind":"Use","ref_id":{"krate":17,"index":771},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":64792,"byte_end":64802,"line_start":25,"line_end":25,"column_start":43,"column_end":53},"alias_span":null,"name":"ElemOffset","value":"","parent":{"krate":0,"index":316}},{"kind":"Use","ref_id":{"krate":17,"index":772},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":64804,"byte_end":64814,"line_start":25,"line_end":25,"column_start":55,"column_end":65},"alias_span":null,"name":"ElemStride","value":"","parent":{"krate":0,"index":316}},{"kind":"Use","ref_id":{"krate":17,"index":773},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":64816,"byte_end":64828,"line_start":25,"line_end":25,"column_start":67,"column_end":79},"alias_span":null,"name":"InstanceRate","value":"","parent":{"krate":0,"index":316}},{"kind":"Use","ref_id":{"krate":17,"index":3800},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51293,"byte_end":51303,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"alias_span":null,"name":"Descriptor","value":"","parent":{"krate":0,"index":315}},{"kind":"Use","ref_id":{"krate":17,"index":1187},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51328,"byte_end":51338,"line_start":52,"line_end":52,"column_start":24,"column_end":34},"alias_span":null,"name":"AccessInfo","value":"","parent":{"krate":0,"index":315}},{"kind":"Use","ref_id":{"krate":17,"index":804},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":95923,"byte_end":95927,"line_start":22,"line_end":22,"column_start":23,"column_end":27},"alias_span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":95931,"byte_end":95935,"line_start":22,"line_end":22,"column_start":31,"column_end":35},"name":"core","value":"","parent":{"krate":0,"index":720}},{"kind":"Use","ref_id":{"krate":17,"index":827},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":95937,"byte_end":95948,"line_start":22,"line_end":22,"column_start":37,"column_end":48},"alias_span":null,"name":"ConstFormat","value":"","parent":{"krate":0,"index":720}},{"kind":"Use","ref_id":{"krate":17,"index":830},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":95950,"byte_end":95959,"line_start":22,"line_end":22,"column_start":50,"column_end":59},"alias_span":null,"name":"Formatted","value":"","parent":{"krate":0,"index":720}},{"kind":"Use","ref_id":{"krate":17,"index":4329},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":95961,"byte_end":95966,"line_start":22,"line_end":22,"column_start":61,"column_end":66},"alias_span":null,"name":"Usage","value":"","parent":{"krate":0,"index":720}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":600,"byte_end":5316,"line_start":15,"line_end":144,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":42},{"krate":0,"index":49},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":82},{"krate":0,"index":88},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":198},{"krate":0,"index":278},{"krate":0,"index":315},{"krate":0,"index":720},{"krate":0,"index":736}],"decl_id":null,"docs":" # gfx","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":600,"byte_end":622,"line_start":15,"line_end":15,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":3684,"byte_end":3690,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21}],"decl_id":null,"docs":" public re-exported traits\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":6406,"byte_end":6420,"line_start":34,"line_end":34,"column_start":5,"column_end":19},"name":"OutOfSrcBounds","qualname":"::encoder::CopyError::OutOfSrcBounds","value":"CopyError::OutOfSrcBounds { size, copy_end }","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":6472,"byte_end":6486,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"OutOfDstBounds","qualname":"::encoder::CopyError::OutOfDstBounds","value":"CopyError::OutOfDstBounds { size, copy_end }","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":6538,"byte_end":6545,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Overlap","qualname":"::encoder::CopyError::Overlap","value":"CopyError::Overlap { src_offset, dst_offset, size }","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":6634,"byte_end":6647,"line_start":47,"line_end":47,"column_start":5,"column_end":18},"name":"NoSrcBindFlag","qualname":"::encoder::CopyError::NoSrcBindFlag","value":"CopyError::NoSrcBindFlag","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":6653,"byte_end":6666,"line_start":48,"line_end":48,"column_start":5,"column_end":18},"name":"NoDstBindFlag","qualname":"::encoder::CopyError::NoDstBindFlag","value":"CopyError::NoDstBindFlag","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":6384,"byte_end":6393,"line_start":33,"line_end":33,"column_start":10,"column_end":19},"name":"CopyError","qualname":"::encoder::CopyError","value":"CopyError::{OutOfSrcBounds, OutOfDstBounds, Overlap, NoSrcBindFlag, NoDstBindFlag}","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":763},{"krate":0,"index":765}],"decl_id":null,"docs":" An error occuring in memory copies.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":6317,"byte_end":6339,"line_start":31,"line_end":31,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":6748,"byte_end":6764,"line_start":52,"line_end":52,"column_start":10,"column_end":26},"name":"CopyBufferResult","qualname":"::encoder::CopyBufferResult","value":"Result<(), CopyError<usize, usize>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying a buffer into another buffer.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":6880,"byte_end":6903,"line_start":55,"line_end":55,"column_start":10,"column_end":33},"name":"CopyBufferTextureResult","qualname":"::encoder::CopyBufferTextureResult","value":"Result<(), CopyError<usize, [texture::Size; 3]>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying buffer data into a texture.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":7032,"byte_end":7055,"line_start":58,"line_end":58,"column_start":10,"column_end":33},"name":"CopyTextureBufferResult","qualname":"::encoder::CopyTextureBufferResult","value":"Result<(), CopyError<[texture::Size; 3], usize>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying texture data into a buffer.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":8803,"byte_end":8814,"line_start":102,"line_end":102,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::encoder::UpdateError::OutOfBounds","value":"UpdateError::OutOfBounds { target, source }","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":8866,"byte_end":8883,"line_start":106,"line_end":106,"column_start":5,"column_end":22},"name":"UnitCountMismatch","qualname":"::encoder::UpdateError::UnitCountMismatch","value":"UpdateError::UnitCountMismatch { target, slice }","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":8942,"byte_end":8954,"line_start":110,"line_end":110,"column_start":5,"column_end":17},"name":"InvalidUsage","qualname":"::encoder::UpdateError::InvalidUsage","value":"UpdateError::InvalidUsage(Usage)","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":8782,"byte_end":8793,"line_start":101,"line_end":101,"column_start":10,"column_end":21},"name":"UpdateError","qualname":"::encoder::UpdateError","value":"UpdateError::{OutOfBounds, UnitCountMismatch, InvalidUsage}","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788}],"decl_id":null,"docs":" An error occuring in buffer/texture updates.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":8715,"byte_end":8737,"line_start":99,"line_end":99,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":10873,"byte_end":10880,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807}],"decl_id":null,"docs":" Graphics Command Encoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":11925,"byte_end":11930,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"flush","qualname":"<Encoder<R, C>>::flush","value":"fn <D> (&mut self, device: &mut D) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can\n be executed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":12160,"byte_end":12174,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"flush_no_reset","qualname":"<Encoder<R, C>>::flush_no_reset","value":"fn <D> (&mut self, device: &mut D) -> SubmissionResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Like `flush` but keeps the encoded commands.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":12479,"byte_end":12500,"line_start":201,"line_end":201,"column_start":12,"column_end":33},"name":"fenced_flush_no_reset","qualname":"<Encoder<R, C>>::fenced_flush_no_reset","value":"fn <D> (&mut self, device: &mut D, after: Option<handle::Fence<R>>) -> SubmissionResult<handle::Fence<R>>","parent":null,"children":[],"decl_id":null,"docs":" Like `flush_no_reset` but places a fence.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":12961,"byte_end":12966,"line_start":212,"line_end":212,"column_start":12,"column_end":17},"name":"reset","qualname":"<Encoder<R, C>>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoded commands.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":13140,"byte_end":13151,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"copy_buffer","qualname":"<Encoder<R, C>>::copy_buffer","value":"fn <T> (&mut self, src: &handle::Buffer<R, T>, dst: &handle::Buffer<R, T>, src_offset: usize, dst_offset: usize, size: usize) -> CopyBufferResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a buffer to another\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":15003,"byte_end":15029,"line_start":266,"line_end":266,"column_start":12,"column_end":38},"name":"copy_buffer_to_texture_raw","qualname":"<Encoder<R, C>>::copy_buffer_to_texture_raw","value":"fn (&mut self, src: &handle::RawBuffer<R>, src_offset_bytes: usize, dst: &handle::RawTexture<R>, cube_face: Option<texture::CubeFace>, info: texture::RawImageInfo) -> CopyBufferTextureResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a buffer to a texture\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":16666,"byte_end":16692,"line_start":313,"line_end":313,"column_start":12,"column_end":38},"name":"copy_texture_to_buffer_raw","qualname":"<Encoder<R, C>>::copy_texture_to_buffer_raw","value":"fn (&mut self, src: &handle::RawTexture<R>, cube_face: Option<texture::CubeFace>, info: texture::RawImageInfo, dst: &handle::RawBuffer<R>, dst_offset_bytes: usize) -> CopyTextureBufferResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a texture to a buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":18332,"byte_end":18359,"line_start":360,"line_end":360,"column_start":12,"column_end":39},"name":"copy_texture_to_texture_raw","qualname":"<Encoder<R, C>>::copy_texture_to_texture_raw","value":"fn (&mut self, src: &handle::RawTexture<R>, src_face: Option<texture::CubeFace>, src_info: texture::RawImageInfo, dst: &handle::RawTexture<R>, dst_face: Option<texture::CubeFace>, dst_info: texture::RawImageInfo) -> CopyTextureResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a texture to another texture\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":20324,"byte_end":20337,"line_start":410,"line_end":410,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<Encoder<R, C>>::update_buffer","value":"fn <T> (&mut self, buf: &handle::Buffer<R, T>, data: &[T], offset_elements: usize) -> Result<(), UpdateError<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a slice of data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":21237,"byte_end":21259,"line_start":434,"line_end":434,"column_start":12,"column_end":34},"name":"update_constant_buffer","qualname":"<Encoder<R, C>>::update_constant_buffer","value":"fn <T> (&mut self, buf: &handle::Buffer<R, T>, data: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a single structure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":21716,"byte_end":21730,"line_start":447,"line_end":447,"column_start":12,"column_end":26},"name":"update_texture","qualname":"<Encoder<R, C>>::update_texture","value":"fn <S, T> (&mut self, tex: &handle::Texture<R, T::Surface>, cube_face: Option<texture::CubeFace>, img: texture::NewImageInfo, data: &[S::DataType]) -> Result<(), UpdateError<[texture::Size; 3]>>","parent":null,"children":[],"decl_id":null,"docs":" Update the contents of a texture.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":24346,"byte_end":24351,"line_start":510,"line_end":510,"column_start":12,"column_end":17},"name":"clear","qualname":"<Encoder<R, C>>::clear","value":"fn <T> (&mut self, view: &handle::RenderTargetView<R, T>, value: T::View) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the supplied `RenderTargetView` to the supplied `ClearColor`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":24625,"byte_end":24636,"line_start":516,"line_end":516,"column_start":12,"column_end":23},"name":"clear_depth","qualname":"<Encoder<R, C>>::clear_depth","value":"fn <T> (&mut self, view: &handle::DepthStencilView<R, T>, depth: Depth) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a depth view with a specified value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":24870,"byte_end":24883,"line_start":522,"line_end":522,"column_start":12,"column_end":25},"name":"clear_stencil","qualname":"<Encoder<R, C>>::clear_stencil","value":"fn <T> (&mut self, view: &handle::DepthStencilView<R, T>, stencil: Stencil) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a stencil view with a specified value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":25157,"byte_end":25166,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"clear_raw","qualname":"<Encoder<R, C>>::clear_raw","value":"fn (&mut self, view: &handle::RawRenderTargetView<R>, value: command::ClearColor) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the supplied `RawRenderTargetView` to the supplied `ClearColor`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":25475,"byte_end":25490,"line_start":538,"line_end":538,"column_start":12,"column_end":27},"name":"clear_depth_raw","qualname":"<Encoder<R, C>>::clear_depth_raw","value":"fn (&mut self, view: &handle::RawDepthStencilView<R>, depth: Depth) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a raw depth view with a specified value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":25818,"byte_end":25835,"line_start":546,"line_end":546,"column_start":12,"column_end":29},"name":"clear_stencil_raw","qualname":"<Encoder<R, C>>::clear_stencil_raw","value":"fn (&mut self, view: &handle::RawDepthStencilView<R>, stencil: Stencil) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a raw stencil view with a specified value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":26213,"byte_end":26217,"line_start":554,"line_end":554,"column_start":12,"column_end":16},"name":"draw","qualname":"<Encoder<R, C>>::draw","value":"fn <D> (&mut self, slice: &slice::Slice<R>, pipeline: &pso::PipelineState<R, D::Meta>, user_data: &D) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":27726,"byte_end":27741,"line_start":578,"line_end":578,"column_start":12,"column_end":27},"name":"generate_mipmap","qualname":"<Encoder<R, C>>::generate_mipmap","value":"fn <T> (&mut self, view: &handle::ShaderResourceView<R, T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate a mipmap chain for the given resource view.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":27929,"byte_end":27948,"line_start":583,"line_end":583,"column_start":12,"column_end":31},"name":"generate_mipmap_raw","qualname":"<Encoder<R, C>>::generate_mipmap_raw","value":"fn (&mut self, view: &handle::RawShaderResourceView<R>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Untyped version of mipmap generation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":29467,"byte_end":29474,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Program","qualname":"::factory::PipelineStateError::Program","value":"PipelineStateError::Program(ProgramError)","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":" Shader program failed to link.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":29561,"byte_end":29575,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"DescriptorInit","qualname":"::factory::PipelineStateError::DescriptorInit","value":"PipelineStateError::DescriptorInit(pso::InitError<S>)","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":" Unable to create PSO descriptor due to mismatched formats.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":29664,"byte_end":29676,"line_start":40,"line_end":40,"column_start":5,"column_end":17},"name":"DeviceCreate","qualname":"::factory::PipelineStateError::DeviceCreate","value":"PipelineStateError::DeviceCreate(CreationError)","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":" Device failed to create the handle give the descriptor.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":29400,"byte_end":29418,"line_start":34,"line_end":34,"column_start":10,"column_end":28},"name":"PipelineStateError","qualname":"::factory::PipelineStateError","value":"PipelineStateError::{Program, DescriptorInit, DeviceCreate}","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":820}],"decl_id":null,"docs":" Error creating a PipelineState\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":32069,"byte_end":32079,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"FactoryExt","qualname":"::factory::FactoryExt","value":"FactoryExt<R: Resources>: Factory<R>","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":274}],"decl_id":null,"docs":" This trait is responsible for creating and managing graphics resources, much like the `Factory`\n trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":32242,"byte_end":32262,"line_start":105,"line_end":105,"column_start":8,"column_end":28},"name":"create_vertex_buffer","qualname":"::factory::FactoryExt::create_vertex_buffer","value":"fn <T> (&mut self, vertices: &[T]) -> handle::Buffer<R, T>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices.\n A `Slice` will have to manually be constructed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":32758,"byte_end":32777,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"create_index_buffer","qualname":"::factory::FactoryExt::create_index_buffer","value":"fn <T> (&mut self, indices: T) -> IndexBuffer<R>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates an immutable index buffer from the supplied vertices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":33078,"byte_end":33109,"line_start":126,"line_end":126,"column_start":8,"column_end":39},"name":"create_vertex_buffer_with_slice","qualname":"::factory::FactoryExt::create_vertex_buffer_with_slice","value":"fn <B, V> (&mut self, vertices: &[V], indices: B) -> (handle::Buffer<R, V>, Slice<R>)","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices,\n together with a `Slice` from the supplied indices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":33975,"byte_end":33997,"line_start":149,"line_end":149,"column_start":8,"column_end":30},"name":"create_constant_buffer","qualname":"::factory::FactoryExt::create_constant_buffer","value":"fn <T> (&mut self, num: usize) -> handle::Buffer<R, T>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates a constant buffer for `num` identical elements of type `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":34332,"byte_end":34352,"line_start":159,"line_end":159,"column_start":8,"column_end":28},"name":"create_upload_buffer","qualname":"::factory::FactoryExt::create_upload_buffer","value":"fn <T> (&mut self, num: usize) -> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates an upload buffer for `num` elements of type `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":34722,"byte_end":34744,"line_start":169,"line_end":169,"column_start":8,"column_end":30},"name":"create_download_buffer","qualname":"::factory::FactoryExt::create_download_buffer","value":"fn <T> (&mut self, num: usize) -> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates a download buffer for `num` elements of type `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":35137,"byte_end":35154,"line_start":179,"line_end":179,"column_start":8,"column_end":25},"name":"create_shader_set","qualname":"::factory::FactoryExt::create_shader_set","value":"fn (&mut self, vs_code: &[u8], ps_code: &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":35610,"byte_end":35636,"line_start":188,"line_end":188,"column_start":8,"column_end":34},"name":"create_shader_set_geometry","qualname":"::factory::FactoryExt::create_shader_set_geometry","value":"fn (&mut self, vs_code: &[u8], gs_code: &[u8], ps_code: &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, geometry, and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":36206,"byte_end":36236,"line_start":198,"line_end":198,"column_start":8,"column_end":38},"name":"create_shader_set_tessellation","qualname":"::factory::FactoryExt::create_shader_set_tessellation","value":"fn (&mut self, vs_code: &[u8], hs_code: &[u8], ds_code: &[u8], ps_code: &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, hull, domain, and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":36914,"byte_end":36958,"line_start":209,"line_end":209,"column_start":8,"column_end":52},"name":"create_shader_set_tessellation_with_geometry","qualname":"::factory::FactoryExt::create_shader_set_tessellation_with_geometry","value":"fn (&mut self, vs_code: &[u8], hs_code: &[u8], ds_code: &[u8], gs_code: &[u8], ps_code: &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, hull, domain, geometry and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":37706,"byte_end":37718,"line_start":220,"line_end":220,"column_start":8,"column_end":20},"name":"link_program","qualname":"::factory::FactoryExt::link_program","value":"fn (&mut self, vs_code: &[u8], ps_code: &[u8]) -> Result<handle::Program<R>, ProgramError>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates a basic shader `Program` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":38099,"byte_end":38120,"line_start":229,"line_end":229,"column_start":8,"column_end":29},"name":"create_pipeline_state","qualname":"::factory::FactoryExt::create_pipeline_state","value":"fn <I> (&mut self, shaders: &ShaderSet<R>, primitive: Primitive, rasterizer: state::Rasterizer, init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a\n shader `Program`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":38974,"byte_end":39002,"line_start":246,"line_end":246,"column_start":8,"column_end":36},"name":"create_pipeline_from_program","qualname":"::factory::FactoryExt::create_pipeline_from_program","value":"fn <'a, I> (&mut self, program: &'a handle::Program<R>, primitive: Primitive, rasterizer: state::Rasterizer, init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<&'a str>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a\n primitive type and a `Rasterizer`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":39831,"byte_end":39853,"line_start":260,"line_end":260,"column_start":8,"column_end":30},"name":"create_pipeline_simple","qualname":"::factory::FactoryExt::create_pipeline_simple","value":"fn <I> (&mut self, vs: &[u8], ps: &[u8], init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a\n shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable\n of rendering triangle faces without culling.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":40289,"byte_end":40310,"line_start":269,"line_end":269,"column_start":8,"column_end":29},"name":"create_sampler_linear","qualname":"::factory::FactoryExt::create_sampler_linear","value":"fn (&mut self) -> handle::Sampler<R>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Create a linear sampler with clamping to border.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":43487,"byte_end":43492,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, base_vertex, instances, buffer }","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"decl_id":null,"docs":" A `Slice` dictates in which and in what order vertices get processed. It is required for\n processing a PSO.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":43476,"byte_end":44210,"line_start":61,"line_end":76,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":43630,"byte_end":43635,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"u32","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" The start index of the index-buffer. Processing will start at this location in the\n index-buffer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":43780,"byte_end":43783,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"u32","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" The end index in the index-buffer. Processing will stop at this location (exclusive) in\n the index buffer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":44024,"byte_end":44035,"line_start":71,"line_end":71,"column_start":9,"column_end":20},"name":"base_vertex","qualname":"::slice::Slice::base_vertex","value":"u32","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" This is the index of the first vertex in the `VertexBuffer`. This value will be added to\n every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this\n base-vertex.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":44092,"byte_end":44101,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"name":"instances","qualname":"::slice::Slice::instances","value":"std::option::Option<(u32, u32)>","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" Instancing configuration.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":44185,"byte_end":44191,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"name":"buffer","qualname":"::slice::Slice::buffer","value":"slice::IndexBuffer<R>","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" Represents the type of index-buffer used.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":44310,"byte_end":44327,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"name":"from_vertex_count","qualname":"<Slice<R>>::from_vertex_count","value":"fn (count: VertexCount) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Slice` with a given vertex count.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":44639,"byte_end":44662,"line_start":90,"line_end":90,"column_start":12,"column_end":35},"name":"new_match_vertex_buffer","qualname":"<Slice<R>>::new_match_vertex_buffer","value":"fn <V> (vbuf: &handle::Buffer<R, V>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":45064,"byte_end":45078,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"get_prim_count","qualname":"<Slice<R>>::get_prim_count","value":"fn (&self, prim: Primitive) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of primitives of the specified type in this `Slice`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":45903,"byte_end":45911,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"split_at","qualname":"<Slice<R>>::split_at","value":"fn (&self, mid: VertexCount) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Divides one slice into two at an index.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":47380,"byte_end":47384,"line_start":155,"line_end":155,"column_start":5,"column_end":9},"name":"Auto","qualname":"::slice::IndexBuffer::Auto","value":"IndexBuffer::Auto","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":" Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices\n get processed in order.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":47444,"byte_end":47451,"line_start":157,"line_end":157,"column_start":5,"column_end":12},"name":"Index16","qualname":"::slice::IndexBuffer::Index16","value":"IndexBuffer::Index16(handle::Buffer<R, u16>)","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 16 bit indices.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":47535,"byte_end":47542,"line_start":159,"line_end":159,"column_start":5,"column_end":12},"name":"Index32","qualname":"::slice::IndexBuffer::Index32","value":"IndexBuffer::Index32(handle::Buffer<R, u32>)","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 32 bit indices.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":47220,"byte_end":47231,"line_start":152,"line_end":152,"column_start":10,"column_end":21},"name":"IndexBuffer","qualname":"::slice::IndexBuffer","value":"IndexBuffer::{Auto, Index16, Index32}","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":865}],"decl_id":null,"docs":" Type of index-buffer used in a Slice.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":47211,"byte_end":47569,"line_start":152,"line_end":160,"column_start":1,"column_end":2}}]},{"kind":"Trait","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":47764,"byte_end":47779,"line_start":168,"line_end":168,"column_start":11,"column_end":26},"name":"IntoIndexBuffer","qualname":"::slice::IntoIndexBuffer","value":"IntoIndexBuffer<R: Resources>","parent":null,"children":[{"krate":0,"index":304}],"decl_id":null,"docs":" A helper trait to create `IndexBuffers` from different kinds of data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":47845,"byte_end":47862,"line_start":170,"line_end":170,"column_start":8,"column_end":25},"name":"into_index_buffer","qualname":"::slice::IntoIndexBuffer::into_index_buffer","value":"fn <F> (self, factory: &mut F) -> IndexBuffer<R>","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":" Turns self into an `IndexBuffer`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pso","qualname":"::pso","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":448},{"krate":0,"index":523},{"krate":0,"index":632},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":1245},{"krate":0,"index":1263},{"krate":0,"index":1260},{"krate":0,"index":1256},{"krate":0,"index":658},{"krate":0,"index":1266},{"krate":0,"index":1286},{"krate":0,"index":1283},{"krate":0,"index":1279},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":1289},{"krate":0,"index":1326},{"krate":0,"index":1323},{"krate":0,"index":1319},{"krate":0,"index":672},{"krate":0,"index":677},{"krate":0,"index":681},{"krate":0,"index":686},{"krate":0,"index":690},{"krate":0,"index":1329},{"krate":0,"index":1354},{"krate":0,"index":1350},{"krate":0,"index":1346},{"krate":0,"index":1341},{"krate":0,"index":1336},{"krate":0,"index":694},{"krate":0,"index":700},{"krate":0,"index":716}],"decl_id":null,"docs":" A typed high-level graphics pipeline interface.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::pso::buffer","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":322},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":337},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":903},{"krate":0,"index":909},{"krate":0,"index":913},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":925},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":929},{"krate":0,"index":943},{"krate":0,"index":941},{"krate":0,"index":939},{"krate":0,"index":936},{"krate":0,"index":933},{"krate":0,"index":945},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":978},{"krate":0,"index":976},{"krate":0,"index":974},{"krate":0,"index":971},{"krate":0,"index":968},{"krate":0,"index":980},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1013},{"krate":0,"index":1011},{"krate":0,"index":1009},{"krate":0,"index":1006},{"krate":0,"index":1003},{"krate":0,"index":365},{"krate":0,"index":370},{"krate":0,"index":381},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":398},{"krate":0,"index":402},{"krate":0,"index":410},{"krate":0,"index":415},{"krate":0,"index":422},{"krate":0,"index":426},{"krate":0,"index":433},{"krate":0,"index":438},{"krate":0,"index":444}],"decl_id":null,"docs":" Buffer components for a PSO.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":64961,"byte_end":64970,"line_start":29,"line_end":29,"column_start":11,"column_end":20},"name":"Structure","qualname":"::pso::buffer::Structure","value":"Structure<F>","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" A trait to be implemented by any struct having the layout described\n in the graphics API, like a vertex buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":65029,"byte_end":65034,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"query","qualname":"::pso::buffer::Structure::query","value":"fn (&str) -> Option<Element<F>>","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":" Get the layout of an element by name.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":65272,"byte_end":65290,"line_start":39,"line_end":39,"column_start":12,"column_end":30},"name":"VertexBufferCommon","qualname":"::pso::buffer::VertexBufferCommon","value":"","parent":null,"children":[],"decl_id":null,"docs":" Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.\n","sig":null,"attributes":[{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":65212,"byte_end":65260,"line_start":38,"line_end":38,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":65504,"byte_end":65518,"line_start":46,"line_end":46,"column_start":11,"column_end":25},"name":"ToInstanceRate","qualname":"::pso::buffer::ToInstanceRate","value":"ToInstanceRate","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"decl_id":null,"docs":" Helper trait for `VertexBufferCommon` to support variable instance rate.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":65582,"byte_end":65586,"line_start":48,"line_end":48,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::buffer::ToInstanceRate::Init","value":"type Init;","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" The associated init type for PSO component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":65652,"byte_end":65660,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"get_rate","qualname":"::pso::buffer::ToInstanceRate::get_rate","value":"fn (init: &Self::Init) -> InstanceRate","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" Get an actual instance rate value from the init.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":65760,"byte_end":65772,"line_start":54,"line_end":54,"column_start":10,"column_end":22},"name":"NonInstanced","qualname":"::pso::buffer::NonInstanced","value":"NonInstanced::{}","parent":null,"children":[],"decl_id":null,"docs":" Helper phantom type for per-vertex attributes.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":65838,"byte_end":65847,"line_start":56,"line_end":56,"column_start":10,"column_end":19},"name":"Instanced","qualname":"::pso::buffer::Instanced","value":"Instanced::{}","parent":null,"children":[],"decl_id":null,"docs":" Helper phantom type for per-instance attributes.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":66316,"byte_end":66328,"line_start":75,"line_end":75,"column_start":10,"column_end":22},"name":"VertexBuffer","qualname":"::pso::buffer::VertexBuffer","value":"VertexBufferCommon<T, NonInstanced>","parent":null,"children":[],"decl_id":null,"docs":" Vertex buffer component. Advanced per vertex.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":66465,"byte_end":66479,"line_start":78,"line_end":78,"column_start":10,"column_end":24},"name":"InstanceBuffer","qualname":"::pso::buffer::InstanceBuffer","value":"VertexBufferCommon<T, Instanced>","parent":null,"children":[],"decl_id":null,"docs":" Instance buffer component. Same as the vertex buffer but advances per instance.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":66783,"byte_end":66798,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"RawVertexBuffer","qualname":"::pso::buffer::RawVertexBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw vertex/instance buffer component. Can be used when the formats of vertex attributes\n are not known at compile time.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":66772,"byte_end":66838,"line_start":86,"line_end":86,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":67021,"byte_end":67035,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"ConstantBuffer","qualname":"::pso::buffer::ConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant buffer component.","sig":null,"attributes":[{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":66961,"byte_end":67009,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":67333,"byte_end":67350,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"RawConstantBuffer","qualname":"::pso::buffer::RawConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw constant buffer component.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":67322,"byte_end":67388,"line_start":105,"line_end":105,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":67691,"byte_end":67697,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"Global","qualname":"::pso::buffer::Global","value":"","parent":null,"children":[],"decl_id":null,"docs":" Global (uniform) constant component. Describes a free-standing value passed\n into the shader, which is not enclosed into any constant buffer.","sig":null,"attributes":[{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":67631,"byte_end":67679,"line_start":113,"line_end":113,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":68096,"byte_end":68105,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"RawGlobal","qualname":"::pso::buffer::RawGlobal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw global (uniform) constant component. Describes a free-standing value\n passed into the shader, which is not enclosed in any constant buffer.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":68085,"byte_end":68131,"line_start":126,"line_end":126,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resource","qualname":"::pso::resource","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":455},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":1015},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1048},{"krate":0,"index":1046},{"krate":0,"index":1044},{"krate":0,"index":1041},{"krate":0,"index":1038},{"krate":0,"index":1050},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1083},{"krate":0,"index":1081},{"krate":0,"index":1079},{"krate":0,"index":1076},{"krate":0,"index":1073},{"krate":0,"index":1085},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1102},{"krate":0,"index":466},{"krate":0,"index":473},{"krate":0,"index":478},{"krate":0,"index":484},{"krate":0,"index":488},{"krate":0,"index":495},{"krate":0,"index":500},{"krate":0,"index":506},{"krate":0,"index":510},{"krate":0,"index":518}],"decl_id":null,"docs":" Resource components for a PSO.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":78010,"byte_end":78024,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"name":"ShaderResource","qualname":"::pso::resource::ShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shader resource component (SRV). Typically is a view into some texture,\n but can also be a buffer.","sig":null,"attributes":[{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":77950,"byte_end":77998,"line_start":30,"line_end":30,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":78343,"byte_end":78360,"line_start":42,"line_end":42,"column_start":12,"column_end":29},"name":"RawShaderResource","qualname":"::pso::resource::RawShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) shader resource (SRV).","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":78332,"byte_end":78403,"line_start":42,"line_end":42,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":78753,"byte_end":78768,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"UnorderedAccess","qualname":"::pso::resource::UnorderedAccess","value":"","parent":null,"children":[],"decl_id":null,"docs":" Unordered access component (UAV). A writable resource (texture/buffer)\n with no defined access order across simultaneously executing shaders.\n Supported on DX10 and higher.","sig":null,"attributes":[{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":78693,"byte_end":78741,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":79046,"byte_end":79053,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::pso::resource::Sampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sampler component.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":79035,"byte_end":79091,"line_start":63,"line_end":63,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":79597,"byte_end":79611,"line_start":74,"line_end":74,"column_start":12,"column_end":26},"name":"TextureSampler","qualname":"::pso::resource::TextureSampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" A convenience type for a texture paired with a sampler.\n It only makes sense for DX9 class hardware, where every texture by default\n is bundled with a sampler, hence they are represented by the same name.\n In DX10 and higher samplers are totally separated from the textures.","sig":null,"attributes":[{"value":"derivative(Clone, Debug, Eq, Hash(bound = \"\"), PartialEq)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":79527,"byte_end":79585,"line_start":73,"line_end":73,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"target","qualname":"::pso::target","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":1105},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1130},{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1158},{"krate":0,"index":1156},{"krate":0,"index":1154},{"krate":0,"index":1151},{"krate":0,"index":1148},{"krate":0,"index":1160},{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1214},{"krate":0,"index":1217},{"krate":0,"index":1230},{"krate":0,"index":1228},{"krate":0,"index":1226},{"krate":0,"index":1223},{"krate":0,"index":1220},{"krate":0,"index":1232},{"krate":0,"index":1243},{"krate":0,"index":1241},{"krate":0,"index":1239},{"krate":0,"index":1236},{"krate":0,"index":1234},{"krate":0,"index":541},{"krate":0,"index":548},{"krate":0,"index":553},{"krate":0,"index":560},{"krate":0,"index":565},{"krate":0,"index":573},{"krate":0,"index":577},{"krate":0,"index":584},{"krate":0,"index":589},{"krate":0,"index":596},{"krate":0,"index":601},{"krate":0,"index":608},{"krate":0,"index":613},{"krate":0,"index":619},{"krate":0,"index":623},{"krate":0,"index":628}],"decl_id":null,"docs":" Render target components for a PSO.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":85656,"byte_end":85668,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"RenderTarget","qualname":"::pso::target::RenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component. Typically points to a color-formatted texture.","sig":null,"attributes":[{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":85596,"byte_end":85644,"line_start":29,"line_end":29,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":86011,"byte_end":86022,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"BlendTarget","qualname":"::pso::target::BlendTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component with active blending mode.","sig":null,"attributes":[{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":85951,"byte_end":85999,"line_start":41,"line_end":41,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":86349,"byte_end":86364,"line_start":53,"line_end":53,"column_start":12,"column_end":27},"name":"RawRenderTarget","qualname":"::pso::target::RawRenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) render target component with optional blending.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":86338,"byte_end":86384,"line_start":53,"line_end":53,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":86568,"byte_end":86579,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"DepthTarget","qualname":"::pso::target::DepthTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth target component.","sig":null,"attributes":[{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":86508,"byte_end":86556,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":86898,"byte_end":86911,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"StencilTarget","qualname":"::pso::target::StencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stencil target component.","sig":null,"attributes":[{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":86838,"byte_end":86886,"line_start":71,"line_end":71,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":87263,"byte_end":87281,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"name":"DepthStencilTarget","qualname":"::pso::target::DepthStencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth + stencil target component.","sig":null,"attributes":[{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":87203,"byte_end":87251,"line_start":82,"line_end":82,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":87539,"byte_end":87546,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"Scissor","qualname":"::pso::target::Scissor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Scissor component. Sets up the scissor test for rendering.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":87528,"byte_end":87553,"line_start":93,"line_end":93,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":87730,"byte_end":87738,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"BlendRef","qualname":"::pso::target::BlendRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Blend reference component. Sets up the reference color for blending.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":87719,"byte_end":87739,"line_start":100,"line_end":100,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\bundle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bundle","qualname":"::pso::bundle","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\bundle.rs","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":646}],"decl_id":null,"docs":" Combine slice data with pipeline state.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\bundle.rs","byte_start":94520,"byte_end":94526,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Bundle","qualname":"::pso::bundle::Bundle","value":"Bundle { slice, pso, data }","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"decl_id":null,"docs":" Slice-PSO bundle.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\bundle.rs","byte_start":94588,"byte_end":94593,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"slice","qualname":"::pso::bundle::Bundle::slice","value":"slice::Slice<R>","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":" Slice\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\bundle.rs","byte_start":94636,"byte_end":94639,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"pso","qualname":"::pso::bundle::Bundle::pso","value":"pso::PipelineState<R, <Data as pso::PipelineData<R>>::Meta>","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":" Pipeline state\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\bundle.rs","byte_start":94701,"byte_end":94705,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"data","qualname":"::pso::bundle::Bundle::data","value":"Data","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":" Pipeline data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\bundle.rs","byte_start":94813,"byte_end":94816,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Bundle<R, Data>>::new","value":"fn (slice: Slice<R>, pso: PipelineState<R, Data::Meta>, data: Data) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new Bundle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\bundle.rs","byte_start":95047,"byte_end":95053,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"encode","qualname":"<Bundle<R, Data>>::encode","value":"fn <C> (&self, encoder: &mut Encoder<R, C>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draw bundle using encoder.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51735,"byte_end":51745,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"RawDataSet","qualname":"::pso::RawDataSet","value":"RawDataSet { vertex_buffers, constant_buffers, global_constants, resource_views, unordered_views, samplers, pixel_targets, ref_values, scissor }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255}],"decl_id":null,"docs":" A complete set of raw data that needs to be specified at run-time\n whenever we draw something with a PSO. This is what \"data\" struct\n gets transformed into when we call `encoder.draw(...)` with it.\n It doesn't have any typing information, since PSO knows what\n format and layout to expect from each resource.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51666,"byte_end":51688,"line_start":59,"line_end":59,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51772,"byte_end":51786,"line_start":62,"line_end":62,"column_start":9,"column_end":23},"name":"vertex_buffers","qualname":"::pso::RawDataSet::vertex_buffers","value":"core::pso::VertexBufferSet<R>","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51824,"byte_end":51840,"line_start":63,"line_end":63,"column_start":9,"column_end":25},"name":"constant_buffers","qualname":"::pso::RawDataSet::constant_buffers","value":"std::vec::Vec<core::pso::ConstantBufferParam<R>>","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51887,"byte_end":51903,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"name":"global_constants","qualname":"::pso::RawDataSet::global_constants","value":"std::vec::Vec<(usize, core::shade::UniformValue)>","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51964,"byte_end":51978,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"resource_views","qualname":"::pso::RawDataSet::resource_views","value":"std::vec::Vec<core::pso::ResourceViewParam<R>>","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":52023,"byte_end":52038,"line_start":66,"line_end":66,"column_start":9,"column_end":24},"name":"unordered_views","qualname":"::pso::RawDataSet::unordered_views","value":"std::vec::Vec<core::pso::UnorderedViewParam<R>>","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":52084,"byte_end":52092,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"samplers","qualname":"::pso::RawDataSet::samplers","value":"std::vec::Vec<core::pso::SamplerParam<R>>","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":52132,"byte_end":52145,"line_start":68,"line_end":68,"column_start":9,"column_end":22},"name":"pixel_targets","qualname":"::pso::RawDataSet::pixel_targets","value":"core::pso::PixelTargetSet<R>","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":52182,"byte_end":52192,"line_start":69,"line_end":69,"column_start":9,"column_end":19},"name":"ref_values","qualname":"::pso::RawDataSet::ref_values","value":"draw_state::state::RefValues","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":52223,"byte_end":52230,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"scissor","qualname":"::pso::RawDataSet::scissor","value":"draw_state::target::Rect","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":52335,"byte_end":52338,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<RawDataSet<R>>::new","value":"fn () -> RawDataSet<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty data set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":52861,"byte_end":52866,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawDataSet<R>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all contained data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":53452,"byte_end":53460,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::pso::ElementError::NotFound","value":"ElementError::NotFound(S)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Element not found.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":53502,"byte_end":53508,"line_start":108,"line_end":108,"column_start":5,"column_end":11},"name":"Offset","qualname":"::pso::ElementError::Offset","value":"ElementError::Offset { name, shader_offset, code_offset }","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Element offset mismatch.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":53815,"byte_end":53821,"line_start":117,"line_end":117,"column_start":5,"column_end":11},"name":"Format","qualname":"::pso::ElementError::Format","value":"ElementError::Format { name, shader_format, code_format }","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Element format mismatch.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":53403,"byte_end":53415,"line_start":104,"line_end":104,"column_start":10,"column_end":22},"name":"ElementError","qualname":"::pso::ElementError","value":"ElementError::{NotFound, Offset, Format}","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":1275}],"decl_id":null,"docs":" Error matching an element inside the constant buffer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":55910,"byte_end":55922,"line_start":172,"line_end":172,"column_start":5,"column_end":17},"name":"VertexImport","qualname":"::pso::InitError::VertexImport","value":"InitError::VertexImport(S, Option<c::format::Format>)","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Vertex attribute mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":55992,"byte_end":56006,"line_start":174,"line_end":174,"column_start":5,"column_end":19},"name":"ConstantBuffer","qualname":"::pso::InitError::ConstantBuffer","value":"InitError::ConstantBuffer(S, Option<ElementError<S>>)","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Constant buffer mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":56074,"byte_end":56088,"line_start":176,"line_end":176,"column_start":5,"column_end":19},"name":"GlobalConstant","qualname":"::pso::InitError::GlobalConstant","value":"InitError::GlobalConstant(S, Option<c::shade::CompatibilityError>)","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Global constant mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":56174,"byte_end":56186,"line_start":178,"line_end":178,"column_start":5,"column_end":17},"name":"ResourceView","qualname":"::pso::InitError::ResourceView","value":"InitError::ResourceView(S, Option<()>)","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Shader resource view mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":56247,"byte_end":56260,"line_start":180,"line_end":180,"column_start":5,"column_end":18},"name":"UnorderedView","qualname":"::pso::InitError::UnorderedView","value":"InitError::UnorderedView(S, Option<()>)","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Unordered access view mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":56307,"byte_end":56314,"line_start":182,"line_end":182,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::pso::InitError::Sampler","value":"InitError::Sampler(S, Option<()>)","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Sampler mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":56366,"byte_end":56377,"line_start":184,"line_end":184,"column_start":5,"column_end":16},"name":"PixelExport","qualname":"::pso::InitError::PixelExport","value":"InitError::PixelExport(S, Option<c::format::Format>)","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Pixel target mismatch.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":55856,"byte_end":55865,"line_start":170,"line_end":170,"column_start":10,"column_end":19},"name":"InitError","qualname":"::pso::InitError","value":"InitError::{VertexImport, ConstantBuffer, GlobalConstant, ResourceView, UnorderedView, Sampler, PixelExport}","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1295},{"krate":0,"index":1299},{"krate":0,"index":1303},{"krate":0,"index":1307},{"krate":0,"index":1311},{"krate":0,"index":1315}],"decl_id":null,"docs":" Failure to initilize the link between the shader and the data.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":59278,"byte_end":59290,"line_start":250,"line_end":250,"column_start":11,"column_end":23},"name":"PipelineInit","qualname":"::pso::PipelineInit","value":"PipelineInit","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"decl_id":null,"docs":" A service trait implemented by the \"init\" structure of PSO.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":59340,"byte_end":59344,"line_start":252,"line_end":252,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineInit::Meta","value":"type Meta;","parent":{"krate":0,"index":686},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":59531,"byte_end":59538,"line_start":256,"line_end":256,"column_start":8,"column_end":15},"name":"link_to","qualname":"::pso::PipelineInit::link_to","value":"fn <'s> (&self, &mut Descriptor, &'s c::shade::ProgramInfo) -> Result<Self::Meta, InitError<&'s str>>","parent":{"krate":0,"index":686},"children":[],"decl_id":null,"docs":" Attempt to map a PSO descriptor to a give shader program,\n represented by `ProgramInfo`. Returns an instance of the\n \"meta\" struct upon successful mapping.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":59726,"byte_end":59738,"line_start":261,"line_end":261,"column_start":11,"column_end":23},"name":"PipelineData","qualname":"::pso::PipelineData","value":"PipelineData<R: c::Resources>","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693}],"decl_id":null,"docs":" a service trait implemented the \"data\" structure of PSO.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":59805,"byte_end":59809,"line_start":263,"line_end":263,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineData::Meta","value":"type Meta;","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":59935,"byte_end":59942,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"bake_to","qualname":"::pso::PipelineData::bake_to","value":"fn (&self, &mut RawDataSet<R>, &Self::Meta, &mut c::handle::Manager<R>, &mut AccessInfo<R>) -> ()","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" Dump all the contained data into the raw data set,\n given the mapping (\"meta\"), and a handle manager.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":60247,"byte_end":60260,"line_start":275,"line_end":275,"column_start":12,"column_end":25},"name":"PipelineState","qualname":"::pso::PipelineState","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strongly typed Pipleline State Object. See the module documentation for more information.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":60236,"byte_end":60375,"line_start":275,"line_end":276,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":60503,"byte_end":60506,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"new","qualname":"<PipelineState<R, M>>::new","value":"fn (raw: c::handle::RawPipelineState<R>, prim: c::Primitive, meta: M) -> PipelineState<R, M>","parent":null,"children":[],"decl_id":null,"docs":" Create a new PSO from a raw handle and the \"meta\" instance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":60705,"byte_end":60715,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"get_handle","qualname":"<PipelineState<R, M>>::get_handle","value":"fn (&self) -> &c::handle::RawPipelineState<R>","parent":null,"children":[],"decl_id":null,"docs":" Get a raw handle reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":60920,"byte_end":60928,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"get_meta","qualname":"<PipelineState<R, M>>::get_meta","value":"fn (&self) -> &M","parent":null,"children":[],"decl_id":null,"docs":" Get a \"meta\" struct reference. Can be used by the user to check\n what resources are actually used and what not.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":61074,"byte_end":61082,"line_start":297,"line_end":297,"column_start":11,"column_end":19},"name":"DataLink","qualname":"::pso::DataLink","value":"DataLink<'a>: Sized","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"decl_id":null,"docs":" The \"link\" logic portion of a PSO component.\n Defines the input data for the component.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":61177,"byte_end":61181,"line_start":299,"line_end":299,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::DataLink::Init","value":"type Init: 'a;","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The assotiated \"init\" type - a member of the PSO \"init\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":61232,"byte_end":61235,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"new","qualname":"::pso::DataLink::new","value":"fn () -> Self","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Create a new empty data link.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":61313,"byte_end":61322,"line_start":303,"line_end":303,"column_start":8,"column_end":17},"name":"is_active","qualname":"::pso::DataLink::is_active","value":"fn (&self) -> bool","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Check if this link is actually used by the shader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":61423,"byte_end":61441,"line_start":305,"line_end":305,"column_start":8,"column_end":26},"name":"link_vertex_buffer","qualname":"::pso::DataLink::link_vertex_buffer","value":"fn (&mut self, _: c::pso::BufferIndex, _: &Self::Init) -> Option<c::pso::VertexBufferDesc>","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex buffer containing multiple attributes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":61620,"byte_end":61630,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"link_input","qualname":"::pso::DataLink::link_input","value":"fn (&mut self, _: &c::shade::AttributeVar, _: &Self::Init) -> Option<Result<c::pso::AttributeDesc, c::format::Format>>","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex attribute.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":61828,"byte_end":61848,"line_start":311,"line_end":311,"column_start":8,"column_end":28},"name":"link_constant_buffer","qualname":"::pso::DataLink::link_constant_buffer","value":"fn <'b> (&mut self, _: &'b c::shade::ConstantBufferVar, _: &Self::Init) -> Option<Result<c::pso::ConstantBufferDesc, ElementError<&'b str>>>","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Attempt to link with a constant buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":62077,"byte_end":62097,"line_start":314,"line_end":314,"column_start":8,"column_end":28},"name":"link_global_constant","qualname":"::pso::DataLink::link_global_constant","value":"fn (&mut self, _: &c::shade::ConstVar, _: &Self::Init) -> Option<Result<(), c::shade::CompatibilityError>>","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Attempt to link with a global constant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":62305,"byte_end":62316,"line_start":317,"line_end":317,"column_start":8,"column_end":19},"name":"link_output","qualname":"::pso::DataLink::link_output","value":"fn (&mut self, _: &c::shade::OutputVar, _: &Self::Init) -> Option<Result<c::pso::ColorTargetDesc, c::format::Format>>","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Attempt to link with an output render target (RTV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":62525,"byte_end":62543,"line_start":320,"line_end":320,"column_start":8,"column_end":26},"name":"link_depth_stencil","qualname":"::pso::DataLink::link_depth_stencil","value":"fn (&mut self, _: &Self::Init) -> Option<c::pso::DepthStencilDesc>","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Attempt to link with a depth-stencil target (DSV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":62703,"byte_end":62721,"line_start":323,"line_end":323,"column_start":8,"column_end":26},"name":"link_resource_view","qualname":"::pso::DataLink::link_resource_view","value":"fn (&mut self, _: &c::shade::TextureVar, _: &Self::Init) -> Option<Result<c::pso::ResourceViewDesc, c::format::Format>>","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Attempt to link with a shader resource (SRV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":62936,"byte_end":62955,"line_start":326,"line_end":326,"column_start":8,"column_end":27},"name":"link_unordered_view","qualname":"::pso::DataLink::link_unordered_view","value":"fn (&mut self, _: &c::shade::UnorderedVar, _: &Self::Init) -> Option<Result<c::pso::UnorderedViewDesc, c::format::Format>>","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Attempt to link with an unordered access (UAV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":63158,"byte_end":63170,"line_start":329,"line_end":329,"column_start":8,"column_end":20},"name":"link_sampler","qualname":"::pso::DataLink::link_sampler","value":"fn (&mut self, _: &c::shade::SamplerVar, _: &Self::Init) -> Option<c::pso::SamplerDesc>","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Attempt to link with a sampler.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":63331,"byte_end":63343,"line_start":332,"line_end":332,"column_start":8,"column_end":20},"name":"link_scissor","qualname":"::pso::DataLink::link_scissor","value":"fn (&mut self) -> bool","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Attempt to enable scissor test.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":63501,"byte_end":63509,"line_start":337,"line_end":337,"column_start":11,"column_end":19},"name":"DataBind","qualname":"::pso::DataBind","value":"DataBind<R: c::Resources>","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719}],"decl_id":null,"docs":" The \"bind\" logic portion of the PSO component.\n Defines how the user data translates into the raw data set.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":63610,"byte_end":63614,"line_start":339,"line_end":339,"column_start":10,"column_end":14},"name":"Data","qualname":"::pso::DataBind::Data","value":"type Data;","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" The associated \"data\" type - a member of the PSO \"data\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":63674,"byte_end":63681,"line_start":341,"line_end":341,"column_start":8,"column_end":15},"name":"bind_to","qualname":"::pso::DataBind::bind_to","value":"fn (&self, &mut RawDataSet<R>, &Self::Data, &mut c::handle::Manager<R>, &mut AccessInfo<R>) -> ()","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Dump the given data into the raw data set.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shade","qualname":"::shade","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1395},{"krate":0,"index":1399},{"krate":0,"index":1403},{"krate":0,"index":1427},{"krate":0,"index":1425},{"krate":0,"index":1422},{"krate":0,"index":731},{"krate":0,"index":733}],"decl_id":null,"docs":" Shaders\n Shader parameter handling.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":96003,"byte_end":96012,"line_start":25,"line_end":25,"column_start":11,"column_end":20},"name":"ToUniform","qualname":"::shade::ToUniform","value":"ToUniform: Copy","parent":null,"children":[{"krate":0,"index":729}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":95970,"byte_end":95992,"line_start":24,"line_end":24,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":96028,"byte_end":96035,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"convert","qualname":"::shade::ToUniform::convert","value":"fn (self) -> core::UniformValue","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":97260,"byte_end":97266,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::shade::ProgramError::Vertex","value":"ProgramError::Vertex(core::CreateShaderError)","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Unable to compile the vertex shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":97339,"byte_end":97343,"line_start":77,"line_end":77,"column_start":5,"column_end":9},"name":"Hull","qualname":"::shade::ProgramError::Hull","value":"ProgramError::Hull(core::CreateShaderError)","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Unable to compile the hull shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":97418,"byte_end":97424,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Domain","qualname":"::shade::ProgramError::Domain","value":"ProgramError::Domain(core::CreateShaderError)","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Unable to compile the domain shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":97501,"byte_end":97509,"line_start":81,"line_end":81,"column_start":5,"column_end":13},"name":"Geometry","qualname":"::shade::ProgramError::Geometry","value":"ProgramError::Geometry(core::CreateShaderError)","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Unable to compile the geometry shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":97583,"byte_end":97588,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Pixel","qualname":"::shade::ProgramError::Pixel","value":"ProgramError::Pixel(core::CreateShaderError)","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Unable to compile the pixel shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":97642,"byte_end":97646,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"Link","qualname":"::shade::ProgramError::Link","value":"ProgramError::Link(core::CreateProgramError)","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Unable to link\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":97197,"byte_end":97209,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"ProgramError","qualname":"::shade::ProgramError","value":"ProgramError::{Vertex, Hull, Domain, Geometry, Pixel, Link}","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419}],"decl_id":null,"docs":" Program linking error\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":741},{"krate":0,"index":748},{"krate":0,"index":749}],"decl_id":null,"docs":" Convenience macros\n Various helper macros.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":7272,"byte_end":7281,"line_start":63,"line_end":63,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":8111,"byte_end":8120,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":9211,"byte_end":9222,"line_start":121,"line_end":121,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":9802,"byte_end":9813,"line_start":134,"line_end":134,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":11072,"byte_end":11079,"line_start":166,"line_end":166,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":11393,"byte_end":11400,"line_start":177,"line_end":177,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":29743,"byte_end":29761,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":30206,"byte_end":30224,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":30669,"byte_end":30687,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":31455,"byte_end":31473,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":31602,"byte_end":31620,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":31757,"byte_end":31775,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":40557,"byte_end":40558,"line_start":277,"line_end":277,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":44231,"byte_end":44236,"line_start":78,"line_end":78,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":47602,"byte_end":47613,"line_start":162,"line_end":162,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":47974,"byte_end":47985,"line_start":173,"line_end":173,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":65876,"byte_end":65888,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":66008,"byte_end":66017,"line_start":62,"line_end":62,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":66120,"byte_end":66132,"line_start":66,"line_end":66,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":69553,"byte_end":69571,"line_start":165,"line_end":165,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":70406,"byte_end":70424,"line_start":191,"line_end":191,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":70724,"byte_end":70739,"line_start":202,"line_end":202,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":71089,"byte_end":71104,"line_start":214,"line_end":214,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":71860,"byte_end":71875,"line_start":237,"line_end":237,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":72445,"byte_end":72459,"line_start":256,"line_end":256,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":73716,"byte_end":73730,"line_start":288,"line_end":288,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":74048,"byte_end":74065,"line_start":299,"line_end":299,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":74617,"byte_end":74634,"line_start":318,"line_end":318,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":75148,"byte_end":75154,"line_start":333,"line_end":333,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":75681,"byte_end":75687,"line_start":348,"line_end":348,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":76015,"byte_end":76024,"line_start":360,"line_end":360,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":76524,"byte_end":76533,"line_start":379,"line_end":379,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":79674,"byte_end":79688,"line_start":76,"line_end":76,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":80126,"byte_end":80140,"line_start":90,"line_end":90,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":80470,"byte_end":80487,"line_start":101,"line_end":101,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":81020,"byte_end":81037,"line_start":120,"line_end":120,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":81547,"byte_end":81562,"line_start":135,"line_end":135,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":82117,"byte_end":82132,"line_start":154,"line_end":154,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":82652,"byte_end":82659,"line_start":169,"line_end":169,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":83124,"byte_end":83131,"line_start":188,"line_end":188,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":83564,"byte_end":83578,"line_start":202,"line_end":202,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":84167,"byte_end":84181,"line_start":219,"line_end":219,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":87792,"byte_end":87804,"line_start":102,"line_end":102,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":88395,"byte_end":88407,"line_start":122,"line_end":122,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":88850,"byte_end":88861,"line_start":136,"line_end":136,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":89350,"byte_end":89361,"line_start":150,"line_end":150,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":89689,"byte_end":89704,"line_start":161,"line_end":161,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":90455,"byte_end":90470,"line_start":185,"line_end":185,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":90898,"byte_end":90909,"line_start":199,"line_end":199,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":91222,"byte_end":91233,"line_start":208,"line_end":208,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":91657,"byte_end":91670,"line_start":220,"line_end":220,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":91987,"byte_end":92000,"line_start":229,"line_end":229,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":92510,"byte_end":92528,"line_start":242,"line_end":242,"column_start":58,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":92866,"byte_end":92884,"line_start":251,"line_end":251,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":93363,"byte_end":93370,"line_start":265,"line_end":265,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":93577,"byte_end":93584,"line_start":272,"line_end":272,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":93860,"byte_end":93868,"line_start":283,"line_end":283,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":94004,"byte_end":94012,"line_start":289,"line_end":289,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\bundle.rs","byte_start":94758,"byte_end":94764,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":52274,"byte_end":52284,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":54143,"byte_end":54155,"line_start":127,"line_end":127,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":54779,"byte_end":54791,"line_start":139,"line_end":139,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":55111,"byte_end":55123,"line_start":149,"line_end":149,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":56450,"byte_end":56459,"line_start":187,"line_end":187,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":57128,"byte_end":57137,"line_start":202,"line_end":202,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":57997,"byte_end":58006,"line_start":218,"line_end":218,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":60402,"byte_end":60415,"line_start":278,"line_end":278,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":97699,"byte_end":97711,"line_start":88,"line_end":88,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":98348,"byte_end":98360,"line_start":101,"line_end":101,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":5246,"byte_end":5249,"line_start":140,"line_end":140,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":315}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51136,"byte_end":51142,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":316}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51152,"byte_end":51160,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":448}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51170,"byte_end":51176,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":523}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":51186,"byte_end":51192,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":632}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":5271,"byte_end":5276,"line_start":142,"line_end":142,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":720}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src/lib.rs","byte_start":5309,"byte_end":5315,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":736}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":7272,"byte_end":7281,"line_start":63,"line_end":63,"column_start":29,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":8111,"byte_end":8120,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":750},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":9211,"byte_end":9222,"line_start":121,"line_end":121,"column_start":59,"column_end":70},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":9802,"byte_end":9813,"line_start":134,"line_end":134,"column_start":52,"column_end":63},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":780},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":11072,"byte_end":11079,"line_start":166,"line_end":166,"column_start":35,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\encoder.rs","byte_start":11393,"byte_end":11400,"line_start":177,"line_end":177,"column_start":43,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":29743,"byte_end":29761,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":30206,"byte_end":30224,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":30669,"byte_end":30687,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":812},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":31455,"byte_end":31473,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":31602,"byte_end":31620,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":31757,"byte_end":31775,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":32095,"byte_end":32102,"line_start":102,"line_end":102,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":17,"index":286},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\factory.rs","byte_start":40557,"byte_end":40558,"line_start":277,"line_end":277,"column_start":53,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":277},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":44231,"byte_end":44236,"line_start":78,"line_end":78,"column_start":20,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":47602,"byte_end":47613,"line_start":162,"line_end":162,"column_start":32,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":858},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\slice.rs","byte_start":47974,"byte_end":47985,"line_start":173,"line_end":173,"column_start":43,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":858},"to":{"krate":0,"index":302}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":65876,"byte_end":65888,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":17,"index":773},"to":{"krate":0,"index":347}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":66008,"byte_end":66017,"line_start":62,"line_end":62,"column_start":25,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":351},"to":{"krate":0,"index":347}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":66120,"byte_end":66132,"line_start":66,"line_end":66,"column_start":25,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":350},"to":{"krate":0,"index":347}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":69553,"byte_end":69571,"line_start":165,"line_end":165,"column_start":20,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":903},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":70406,"byte_end":70424,"line_start":191,"line_end":191,"column_start":42,"column_end":60},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":903},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":70724,"byte_end":70739,"line_start":202,"line_end":202,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":71089,"byte_end":71104,"line_start":214,"line_end":214,"column_start":27,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":929},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":71860,"byte_end":71875,"line_start":237,"line_end":237,"column_start":36,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":929},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":72445,"byte_end":72459,"line_start":256,"line_end":256,"column_start":18,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":945},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":73716,"byte_end":73730,"line_start":288,"line_end":288,"column_start":17,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":945},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":74048,"byte_end":74065,"line_start":299,"line_end":299,"column_start":27,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":965},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":74617,"byte_end":74634,"line_start":318,"line_end":318,"column_start":36,"column_end":53},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":965},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":75148,"byte_end":75154,"line_start":333,"line_end":333,"column_start":51,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":980},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":75681,"byte_end":75687,"line_start":348,"line_end":348,"column_start":50,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":980},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":76015,"byte_end":76024,"line_start":360,"line_end":360,"column_start":27,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1000},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\buffer.rs","byte_start":76524,"byte_end":76533,"line_start":379,"line_end":379,"column_start":36,"column_end":45},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1000},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":79674,"byte_end":79688,"line_start":76,"line_end":76,"column_start":30,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1015},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":80126,"byte_end":80140,"line_start":90,"line_end":90,"column_start":39,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1015},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":80470,"byte_end":80487,"line_start":101,"line_end":101,"column_start":27,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1035},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":81020,"byte_end":81037,"line_start":120,"line_end":120,"column_start":36,"column_end":53},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1035},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":81547,"byte_end":81562,"line_start":135,"line_end":135,"column_start":30,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1050},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":82117,"byte_end":82132,"line_start":154,"line_end":154,"column_start":39,"column_end":54},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1050},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":82652,"byte_end":82659,"line_start":169,"line_end":169,"column_start":27,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":83124,"byte_end":83131,"line_start":188,"line_end":188,"column_start":36,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":83564,"byte_end":83578,"line_start":202,"line_end":202,"column_start":30,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1085},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\resource.rs","byte_start":84167,"byte_end":84181,"line_start":219,"line_end":219,"column_start":39,"column_end":53},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1085},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":87792,"byte_end":87804,"line_start":102,"line_end":102,"column_start":52,"column_end":64},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1105},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":88395,"byte_end":88407,"line_start":122,"line_end":122,"column_start":39,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1105},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":88850,"byte_end":88861,"line_start":136,"line_end":136,"column_start":51,"column_end":62},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1125},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":89350,"byte_end":89361,"line_start":150,"line_end":150,"column_start":39,"column_end":50},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1125},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":89689,"byte_end":89704,"line_start":161,"line_end":161,"column_start":27,"column_end":42},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":90455,"byte_end":90470,"line_start":185,"line_end":185,"column_start":36,"column_end":51},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":90898,"byte_end":90909,"line_start":199,"line_end":199,"column_start":51,"column_end":62},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1160},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":91222,"byte_end":91233,"line_start":208,"line_end":208,"column_start":39,"column_end":50},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1160},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":91657,"byte_end":91670,"line_start":220,"line_end":220,"column_start":53,"column_end":66},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1179},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":91987,"byte_end":92000,"line_start":229,"line_end":229,"column_start":39,"column_end":52},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1179},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":92510,"byte_end":92528,"line_start":242,"line_end":242,"column_start":58,"column_end":76},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1198},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":92866,"byte_end":92884,"line_start":251,"line_end":251,"column_start":39,"column_end":57},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1198},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":93363,"byte_end":93370,"line_start":265,"line_end":265,"column_start":27,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1217},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":93577,"byte_end":93584,"line_start":272,"line_end":272,"column_start":36,"column_end":43},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1217},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":93860,"byte_end":93868,"line_start":283,"line_end":283,"column_start":27,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1232},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\target.rs","byte_start":94004,"byte_end":94012,"line_start":289,"line_end":289,"column_start":36,"column_end":44},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1232},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\bundle.rs","byte_start":94758,"byte_end":94764,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":52274,"byte_end":52284,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":54143,"byte_end":54155,"line_start":127,"line_end":127,"column_start":53,"column_end":65},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":54779,"byte_end":54791,"line_start":139,"line_end":139,"column_start":46,"column_end":58},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":55111,"byte_end":55123,"line_start":149,"line_end":149,"column_start":42,"column_end":54},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":56450,"byte_end":56459,"line_start":187,"line_end":187,"column_start":39,"column_end":48},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":57128,"byte_end":57137,"line_start":202,"line_end":202,"column_start":53,"column_end":62},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":57997,"byte_end":58006,"line_start":218,"line_end":218,"column_start":46,"column_end":55},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1289},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":60402,"byte_end":60415,"line_start":278,"line_end":278,"column_start":26,"column_end":39},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\pso\\mod.rs","byte_start":61088,"byte_end":61093,"line_start":297,"line_end":297,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":96014,"byte_end":96018,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1394},"to":{"krate":0,"index":728}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":97699,"byte_end":97711,"line_start":88,"line_end":88,"column_start":23,"column_end":35},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Pyigyli\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.1\\src\\shade.rs","byte_start":98348,"byte_end":98360,"line_start":101,"line_end":101,"column_start":16,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1403},"to":{"krate":1,"index":1537}}]}